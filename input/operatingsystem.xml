<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>
<?xml-model href="../transforms/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
	

<PP xmlns="https://niap-ccevs.org/cc/v1" target-product="General Purpose Operating Systems"
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"
    xmlns:h="http://www.w3.org/1999/xhtml" boilerplate="yes">
	

  <PPReference>
    <ReferenceTable>
      <PPTitle>Protection Profile for General Purpose Operating Systems</PPTitle>
      <PPVersion>5.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2025-03-31</PPPubDate>
      <Keywords>OS; operating system</Keywords>
    </ReferenceTable>
  </PPReference>

  <RevisionHistory>
    <entry>
      <version>4.0</version>
      <date>2015-08-14</date>
      <subject>Release - significant revision</subject>
    </entry> 
    
    <entry>
      <version>4.1</version>
      <date>2016-03-09</date>
      <subject>Minor updates - cryptographic modes</subject>
    </entry>
    
    <entry>
      <version>4.2</version>
      <date>2018-05-22</date>
      <subject>Multiple Technical Decisions applied</subject>
    </entry>
    
    <entry>
      <version>4.2.1</version>
      <date>2019-04-22</date>
      <subject>Formatting changes as a result of PP evaluation</subject>
    </entry>
    
    <entry>
      <version>4.3</version>
      <date>2022-09-27</date>
      <subject>
	     <h:ul>
	     <h:li>Added compatibility with MDM Agent, Bluetooth, and TLS Modules.</h:li>
	     <h:li>Two factor authentication.</h:li>
	     <h:li>Aligned with CNSA.</h:li>
	     </h:ul>
      </subject>
    </entry>
    
    <entry>
      <version>5.0</version>
      <date>2024-09-06</date>
      <subject>
        <h:ul>
          <h:li>Updated to conform to CC:2022.</h:li>
          <h:li>Incorporated X.509 package.</h:li>
          <h:li>Incorporated applicable technical decisions.</h:li>
        </h:ul>
      </subject>
    </entry>
     </RevisionHistory>

  <include-pkg id="pkg-ssh">
    <git>
      <url>https://github.com/commoncriteria/ssh</url>
      <branch>release-2.0</branch>
    </git>
    <url>https://www.niap-ccevs.org/static_html/protection-profile/459/459/pkg_ssh_v1.0.htm</url>
    <depends on="s-ftp_ssh" also="s-uau-ssh"/>
  </include-pkg>
  <include-pkg id="pkg-tls">
    <git>
      <url>https://github.com/commoncriteria/tls</url>
      <branch>master</branch>
    </git>
    <url>https://www.niap-ccevs.org/static_html/protection-profile/439/-439-/index.html</url>
  </include-pkg>
  <include-pkg id="X509">
    <git>
      <url>https://github.com/commoncriteria/X509</url>
      <branch>master</branch>
    </git>
    <url><![CDATA[https://www.niap-ccevs.org/protectionprofiles/511]]></url>
  </include-pkg>
  <modules>
    <module id="mod-vpnclient">
      <git>
	<url>https://github.com/commoncriteria/vpnclient</url>
	<branch>v3.0</branch>
      </git>
      <url><![CDATA[https://www.niap-ccevs.org/protectionprofiles/487]]></url>
      <depends on="s-provides-vpnclient"/>
    </module>
    <module id="mod-bluetooth">
      <git>
	<url>https://github.com/commoncriteria/bluetooth</url>
	<branch>v2.0</branch>
      </git>
      <url><![CDATA[https://www.niap-ccevs.org/protectionprofiles/425]]></url>
    </module>
    <module id="mod-mdmagent">
      <git>
	<url>https://github.com/commoncriteria/mdmagent</url>
	<branch>Release-2.0</branch>
      </git>
      <url><![CDATA[https://www.niap-ccevs.org/protectionprofiles/441]]></url>
    </module>
    <module id="mod-wlanclient">
      <git>
	<url>https://github.com/commoncriteria/wlanclient</url>
	<branch>release-2.0</branch>
      </git>
      <url><![CDATA[https://www.niap-ccevs.org/protectionprofiles/463]]></url>
    </module>
    
    <!-- <module id="mod-biometric" version="1.1" name="cPP for Biometrics" product="Biometric Devices" short="BMcPP"> -->
    <!--   <url>https://biometricitc.github.io/v1.1/1.1PRE/MOD-BIO-v1.1.pdf</url> -->
    <!-- </module> -->
</modules> 
  
  <pp-preferences>
     <audit-events-in-sfrs/>    
  </pp-preferences>
	  
  <sec:Introduction>
    <sec:Overview> 
The scope of this Protection Profile (PP) is to
describe the security functionality of operating systems in terms of <xref g='CC'/>
and to define functional and assurance requirements for such products.
An operating system is software that manages computer hardware and software
resources, and provides common services for application programs. The hardware
it manages may be physical or virtual.
    </sec:Overview>
    <tech-terms>
      <term abbr='AES' full="Advanced Encryption Standard"/>
      <term full="Address Space Layout Randomization" abbr="ASLR">
	An anti-exploitation feature which loads memory mappings into unpredictable
	locations. ASLR makes it more difficult for an attacker to redirect control to code
	that they have introduced into the address space of a process.
      </term>
      <term full="Administrator">
	An administrator is responsible for management activities, including setting policies that are 
	applied by the enterprise on the operating system.
	This administrator could be acting remotely through a management server, from which the system
	receives configuration policies.
	An administrator can enforce settings on the system which cannot be overridden by non-administrator users.
      </term>
      <term full="Application" abbr="app">
	Software that runs on a platform and performs tasks on behalf of the user
	or owner of the platform, as well as its supporting documentation. 
      </term>
      <term full="Application Programming Interface" abbr="API">
	A specification of routines, data structures, object classes, and variables
	that allows an application to make use of services provided by another software
	component, such as a library. APIs are often provided for a set of libraries included
	with the platform.
      </term>
      <!-- <term full="Biometric Authentication Factor" abbr="BAF" plural="BAFs"> Authentication factor, which uses -->
      <!--   biometric sample, matched to a biometric authentication template to help establish -->
      <!--   identity.</term> -->
      <term abbr='CESG' full="Communications-Electronics Security Group"/>
      <term abbr='CMC' full="Certificate Management over CMS"/>
      <term abbr='CMS' full="Cryptographic Message Syntax"/>
      <term abbr='CN' full="Common Names"/>
      <term full="Credential">
	Data that establishes the identity of a user, e.g. a cryptographic key or
	password.
      </term>
      <term abbr='CRL' full="Certificate Revocation List"/>
      <term abbr='CSA' full="Computer Security Act"/>
      <term full="Critical Security Parameters" abbr="CSP">
	Information that is either user or system defined and
	is used to operate a cryptographic module in processing encryption functions including
	cryptographic keys and authentication data, such as passwords, the disclosure or modification
	of which can compromise the security of a cryptographic module or the security of the
	information protected by the module.
      </term>
      <term full="Data At Rest" abbr="DAR" />
      <term full="DAR Protection">
	Countermeasures that prevent attackers, even those with physical access,
	from extracting data from non-volatile storage.
	Common techniques include data encryption and wiping.
      </term>
      <term full="Data Execution Prevention" abbr="DEP">
	An anti-exploitation feature of modern operating systems executing on
	modern computer hardware, which enforces a non-execute permission on pages of memory.
	DEP prevents pages of memory from containing both data and instructions, which makes
	it more difficult for an attacker to introduce and execute code.
      </term>
      <term abbr='DES' full="Data Encryption Standard"/>
      <term full="Developer">
	An entity that writes OS software. For the purposes of this document,
	vendors and developers are the same.
      </term>
      <term abbr='DHE' full="Diffie-Hellman Ephemeral"/>
      <term abbr='DNS' full="Domain Name System"/>
      <term abbr='DRBG' full="Deterministic Random Bit Generator"/>
      <term abbr='DSS' full="Digital Signature Standard"/>
      <term abbr='DT' full="Date/Time Vector"/>
      <term abbr='DTLS' full="Datagram Transport Layer Security"/>
      <term abbr='EAP' full="Extensible Authentication Protocol"/>
      <term abbr='ECDHE' full="Elliptic Curve Diffie-Hellman Ephemeral"/>
      <term abbr='ECDSA' full="Elliptic Curve Digital Signature Algorithm"/>
      <term abbr='EST' full="Enrollment over Secure Transport"/>
      <term abbr='FIPS' full="Federal Information Processing Standards"/>
      <term full="General Purpose Operating System">
	A class of OSes designed to support a wide-variety of workloads consisting of many concurrent applications or services.
	Typical characteristics for OSes in this class include support for third-party applications,
	support for multiple users, and security separation between users and their respective resources.
	General Purpose Operating Systems also lack the real-time constraint that defines Real Time Operating Systems
	which are typically used in routers, switches, and embedded devices.
      </term>
      <term full="Hybrid Authentication">
	A hybrid authentication factor is one where a user has to
	submit a combination of a cryptographic token and a PIN or password and both must pass.
	If either factor fails, the entire attempt fails.
      </term>
      <term abbr='HMAC' full="Hash-based Message Authentication Code"/>
      <term full="Host-based Firewall">
	A software-based firewall implementation running on the OS for filtering inbound and
	outbound network traffic to and from processes running on the OS.
      </term>
      <term abbr='HTTP'  full="Hypertext Transfer Protocol"/>
      <term abbr='HTTPS' full="Hypertext Transfer Protocol Secure"/>
      <term abbr='IETF'  full="Internet Engineering Task Force"/>
      <term abbr='IP'    full="Internet Protocol"/>
      <term abbr='ISO'   full="International Organization for Standardization"/>
      <term abbr='IT'    full="Information Technology"/>
      <term abbr='ITSEF' full="Information Technology Security Evaluation Facility"/>
      <term abbr='NIAP'  full="National Information Assurance Partnership"/>
      <term abbr='NIST'  full="National Institute of Standards and Technology"/>
      <term abbr='OCSP'  full="Online Certificate Status Protocol"/>
      <term abbr='OID'   full="Object Identifier"/>
      <term abbr='OMB'   full="Office of Management and Budget"/>
      <term abbr="OS"    full="Operating System">
	Software that manages physical and logical resources and provides services
	for applications. The terms <h:i>TOE</h:i> and <h:i>OS</h:i> are interchangeable in this
	document. 
      </term>
      <term abbr="PIN" full="Personal Identification Number">
	An authentication factor that is comprised of a set of numeric or alphabetic characters
	that may be used  in addition to a cryptographic token to provide a hybrid authentication factor.
	At this time it  is not considered as a stand-alone authentication mechanism.
	A PIN is distinct from a password in that the allowed character set and required length of a PIN
	is typically smaller than that of a password as it is designed to be input quickly.
      </term>

      <term abbr='PKI' full="Public Key Infrastructure"/>
      <term abbr='RBG' full="Random Bit Generator"/>
      <term abbr='RFC' full="Request for Comment"/>
      <term abbr='RNG' full="Random Number Generator"/>
      <!-- <term abbr='RNGVS' full="Random Number Generator Validation System"/> -->
      <term full="Personally Identifiable Information" abbr="PII">
	Any information about an individual maintained by an agency, including, but
	not limited to, education, financial transactions, medical history, and criminal or
	employment history and information which can be used to distinguish or trace an
	individual's identity, such as their name, social security number, date and place of
	birth, mother's maiden name, biometric records, etc., including any other personal
	information which is linked or linkable to an individual.<xref to="bibOMB"/>
      </term>
      <term abbr='SAN' full="Subject Alternative Name"/>
      <term abbr='SHA' full="Secure Hash Algorithm"/>
      <term abbr='S/MIME' full="Secure/Multi-purpose Internet Mail Extensions"/>
      <term full="Sensitive Data">
	Sensitive data may include all user or enterprise data or may be specific
	application data such as PII, emails, messaging, documents, calendar items, and contacts.
	Sensitive data must minimally include credentials and keys. Sensitive data shall
	be identified in the OS's TSS by the ST author. 
      </term>
      <term abbr='SIP' full="Session Initiation Protocol"/>
      <term abbr='SWID' full="Software Identification"/>
      <term abbr='TLS' full="Transport Layer Security"/>
      <term abbr='URI' full="Uniform Resource Identifier"/>
      <term abbr='URL' full="Uniform Resource Locator"/>
      <term abbr='USB' full="Universal Serial Bus"/>
      <term full="User">
	A user is subject to configuration policies applied
	to the operating system by administrators.  On some systems under certain
	configurations, a normal user can temporarily elevate privileges to that of an administrator.
	At that time, such a user should be considered an administrator.
      </term>
      <term abbr="VPN" full="Virtual Private Network"/>
      <term abbr='XCCDF' full="eXtensible Configuration Checklist Description Format"/>
      <term abbr='XOR' full="Exclusive Or"/>
    </tech-terms>    
    <sec:Compliant_Targets_of_Evaluation>
      Compliant TOEs will implement security functionality in the following general areas:
      <h:ul>
        <h:li>Accountability: ensuring that information exists to discover unintentional issues with the configuration and operation of the TOE so that the root cause can be determined.</h:li>
        <h:li>Integrity: ensuring the integrity of updates to the TOE and enforcing mechanisms that control the deployment and execution of applications running on it.</h:li>
        <h:li>Management: providing mechanisms for configuration of the TSF and deployment of applications running on the TOE.</h:li>
        <h:li>Protected Storage: ensuring that credentials and file system data are not subject to unauthorized disclosure.</h:li>
        <h:li>Protected Communications: ensuring that sensitive data in transit to and from the TOE is adequately protected from unauthorized modification and disclosure.</h:li>
      </h:ul>
      <sec:TOE_Boundary>
        The TOE boundary encompasses the OS kernel and its drivers, shared
        software libraries, and some application software included with the OS. The applications considered within the TOE
        are those that provide essential security services, many of which run with elevated
        privileges.  Applications which are covered by more-specific Protection Profiles cannot
        claim evaluation as part of the OS evaluation, even when it is necessary to evaluate
        some of their functionality as it relates to their role as part of the OS.
        <figure entity="images/Toe.png" title="General TOE " id="toe"/>
      </sec:TOE_Boundary>
      <sec:TOE_Platform>
	The TOE platform, which consists of the physical or virtual hardware on which the TOE executes,
        is outside the scope of evaluation.  At the same time, the security of the TOE relies upon it.
        Other hardware components which independently run their own software and are
        relevant to overall system security are also outside the scope of evaluation.
      </sec:TOE_Platform>
    </sec:Compliant_Targets_of_Evaluation>
    <sec:Use_Cases>Requirements in this Protection Profile are designed to
      address the security problems in at least the following use cases. These use cases are intentionally
      very broad, as many specific use cases exist for an operating system. These use cases may also
      overlap with one another.  An operating system's functionality may even be effectively extended by
      privileged applications installed onto it.  However, these are out of scope of this PP.
      <usecases>
        <usecase title="End User Devices" id="enduserdevices">
          <description>
	    <h:p>
	    The OS provides a platform for end user devices such as desktops,
	    laptops, convertibles, and tablets.
	    These devices may optionally be bound to a directory server or management server.
	    </h:p>
	    <h:p>
            As this Protection Profile does not address threats against data-at-rest,
            enterprises deploying operating systems in mobile scenarios should ensure that these systems
            include data-at-rest protection spelled out in other
	    Protection Profiles. Specifically, this includes the Protection Profiles for
	    <h:i>Full Drive Encryption - Encryption Engine</h:i>,
	    <h:i>Full Drive Encryption - Authorization Acquisition</h:i>,
	    and <h:i>Software File Encryption</h:i>.  The <h:i>Protection Profile for Mobile
		Device Fundamentals</h:i> includes requirements for data-at-rest protection and is appropriate
		for many mobile devices.
	    </h:p>
          </description>
        </usecase>
        <usecase title="Server Systems" id="serversystems">
          <description>The OS provides a platform for server-side services, either on
            physical or virtual hardware.  Many specific examples exist in which the OS acts
            as a platform for such services, including file servers, mail servers, and web servers.
          </description>
        </usecase>
        <usecase title="Cloud Systems" id="cloudsystems">
          <description>
	    <h:p>
	      The OS provides a platform for providing cloud services running on
              physical or virtual hardware.  An OS is typically part of offerings
              identified as Infrastructure as a Service (IaaS), Software as a Service (SaaS),
              and Platform as a Service (PaaS).
	    </h:p>
	    <h:p>
			This use case typically involves the use
			of virtualization technology which should be evaluated against the
			<h:i>Protection Profile for Server Virtualization</h:i>.
	    </h:p>
	  </description>
        </usecase>
      </usecases>
    </sec:Use_Cases>

    <section title="Package Usage">
      This section contains selections and assignments that are required when the listed Functional Packages are claimed by this PP. 
      <package-usage-list>
        <package-usage ref="X509">
          <usage id="usage-x509-notca" title="No CA Claims Permitted">
            <description>
              The TOE will not be a certificate authority because the PP does not provide for the operation of an operating system as a CA. Thus, the ST author shall select the option to request a certificate from an external CA in FIA_XCU_EXT.2.1 and shall not select any options elsewhere in the package that involve claiming the ability to be a CA. 
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-noplatform" title="No Platform-Provided Functionality Claims Permitted">
            <description>Because the TOE boundary is the entire operating system, there is no "platform" that exists outside the logical boundary of the TOE that the TSF could access. Therefore, the ST author shall not claim platform-provided functionality for any of the functions specified in the FP. In other words, any applicable SFRs 
              shall include the claim to implement or provide the functionality, rather than rely on a platform. These may include one or more of the following examples, depending on the TOE, but apply to any requirements where such a selection exists:
              <h:ul>
                <h:li>FIA_CMCC_EXT.1</h:li>
                <h:li>FIA_CMPC_EXT.1</h:li>
                <h:li>FIA_ESTC_EXT.1</h:li>
                <h:li>FIA_X509_EXT.1</h:li>
                <h:li>FIA_X509_EXT.2</h:li>
                <h:li>FIA_X509_EXT.3</h:li>
              </h:ul>
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>   
            </config>
          </usage>
           <usage id="usage-x509-revocation-sigalgs" title="Limitations on Signature Algorithms in FIA_X509_EXT.1.1">
            <description>
              The TOE must utilize appropriate cryptographic algorithms that conform to CNSA standards. Thus, the TOE shall utilize no other algorithms outside of those specified in RFC 8603 for certificate validation and CRL signature validation (if claimed). If OCSP is claimed, the ST author shall only claim support for algorithms that use SHA-384 and either 3072-bit RSA or greater, or NIST P-384. In all cases, the assignment that allows the ST author to specify additional algorithms shall not be selected.
            </description>
            <config>
            <ref-id>dummy-ref-id</ref-id>
          </config>
          </usage>
          <usage id="usage-x509-extensions" title="Required Extension Processing for FIA_X509_EXT.1.2">
            <description>
              The ST author shall select the options to process the basicConstraints and extendedKeyUsage extensions. Other extensions may be selected as appropriate without restriction.
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-revocation-methods" title="CRL or OCSP-based Revocation Required for FIA_X509_EXT.1.3 ">
            <description>
              The TOE must support revocation that only involves CRL or OCSP. Accordingly, the TOE shall select only from options involving CRL or OCSP in FIA_X509_EXT.1.3 (e.g., the selection to treat all certificates older than a given short timeframe is not an acceptable substitute or alternative for supporting CRL or OCSP).
            </description> 
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-revocation-connections" title="Connections to CRL or OCSP Servers Required for FIA_X509_EXT.1.4">
            <description>
              Because the TOE is required to support CRL or OCSP, the TSF shall support an appropriate mechanism for obtaining revocation status information. In the case of CRL, the ST author shall claim that revocation status information is obtained via network connection to a CRL distribution point. In the case of OCSP, the ST author shall claim that revocation status information is obtained via network connection to an OCSP responder, via OCSP stapling, or via OCSP multi-stapling.
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-eku-values" title="Restrictions on Acceptable Key Usage Values for FIA_X509_EXT.1.5">
            <description>
              The TOE will always support the use of extendedKeyUsage values to verify that X.509 certificates are used in accordance with their intended purpose. Accordingly, the ST author shall claim that the TOE supports the processing of extendedKeyUsage fields in the leaf certificate (as opposed to application of trust store context rules or passing the certification path or other supported context information to an external function) and shall select all values that are relevant to the claimed uses of X.509 in the ST. In particular, since the PP does not define any functions that require the use of S/MIME, the ST author shall not select this as an extendedKeyUsage value to be validated.
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-functions" title="Restrictions on Acceptable Functions for FIA_X509_EXT.2.1">
            <description>
              The PP does not define SMIME functionality, therefore the ST shall not select this as a function for which X.509 validation functionality is used.
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
          <usage id="usage-x509-acquisition-purposes" title="Restrictions on Acceptable Purposes for Certificate Acquisition for FIA_XCU_EXT.2.1">
            <description>
              The PP does not define SMIME functionality, therefore the ST shall not select this as a function for which X.509 validation functionality is used.
            </description>
            <config>
              <ref-id>dummy-ref-id</ref-id>
            </config>
          </usage>
        </package-usage>
      </package-usage-list>
    </section>
    <section title="Product Features Mapped to Implementation-dependent Requirements" id="sec-features">
      The features enumerated below, if implemented by the TOE, require that additional SFRs be claimed in the ST.<h:br/>
      <implements>
        <feature id="key-encap-support" title="Key Encapsulation Support">
          <description>A conformant TOE is required to implement trusted communications. Depending on the specific protocols used and the supported connection parameters for these protocols, it may be necessary to implement a key encapsulation algorithm as part of key establishment.<h:br/></description>
        </feature>
          <feature id="key-agreement-support" title="Key Agreement Support">
            <description>A conformant TOE is required to implement trusted communications. Depending on the specific protocols used and the supported connection parameters for these protocols, it may be necessary to implement one or more key agreement algorithms as part of key establishment.<h:br/></description>
          </feature>
        <feature id="wlan-support" title="WLAN Support">
          <description>A conformant TOE may implement WLAN client functionality. If so, it is necessary to implement authenticated encryption and key wrapping in support of secure wireless communications.<h:br/></description>
        </feature>
      </implements>			
    </section>
  </sec:Introduction>
  
  
    
    
    <sec:Conformance_Claims boilerplate="no">
      
      
      <!-- The new CClaimsInfo construct -->
      <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale">
        <cc-st-conf>exact</cc-st-conf>       
        <cc-pt2-conf>extended</cc-pt2-conf>
        <cc-pt3-conf>extended</cc-pt3-conf>
        <cc-pp-conf/>
        <cc-pp-config-with>       
          <Mod-cc-ref>PP-Module for Virtual Private Network (VPN) Clients, version 3.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for Bluetooth, version 2.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for Mobile Device Management Agent, version 2.0</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for Wireless LAN Clients, version 2.0</Mod-cc-ref>
          <Mod-cc-ref>cPP-Module for Biometric Enrolment and Verification, version 1.1</Mod-cc-ref>  
        </cc-pp-config-with>
        <cc-pkg-claim>
          <FP-cc-ref conf="conformant">Functional Package for Transport Layer Security Version 2.1</FP-cc-ref>
          <FP-cc-ref conf="conformant">Functional Package for Secure Shell Version 2.0</FP-cc-ref>
          <FP-cc-ref conf="conformant">Functional Package for X.509 Version 1.0</FP-cc-ref>
           <!-- <AP-cc-ref conf="conformant">Assurance Package for Flaw Remediation Version 1.0</AP-cc-ref> -->
        </cc-pkg-claim>
      </CClaimsInfo>	
      <!-- 
      <cclaims>  
        <cclaim name="Conformance Statement">  
          <description>  
            <h:p>
      	  An ST must claim exact conformance to this PP.
            </h:p><h:p>
            The evaluation methods used for evaluating the TOE are a combination of the workunits defined in <xref to="bibCEM"/> as well as the
            Evaluation Activities for ensuring that individual SFRs have sufficient supporting evidence in the Security Target and 
            guidance documentation and have been sufficiently tested by the laboratory as part of completing ATE_IND.1. Any functional packages 
            this PP-Module claims similarly contain their own Evaluation Activities that are used in this same manner.
            </h:p><h:p>  
              <comment>These need to be updated for CC:2022 versions when available. When CC:2022 versions are available, make sure the module tags up top are updated with correct URLs.</comment>
            The following PP-Modules are allowed to be specified in a PP-Configuration with this PP.  
            <h:ul>  
                  <h:li>PP-Module for Virtual Private Network (VPN) Clients, version 2.4</h:li>  
                  <h:li>PP-Module for Bluetooth, version 1.0</h:li>  
                  <h:li>PP-Module for Mobile Device Management Agent, version 1.0</h:li>
                  <h:li>PP-Module for Wireless LAN Clients, version 1.0</h:li>
                  <h:li>cPP-Module for Biometric Enrolment and Verification, version 1.1</h:li>  
                </h:ul>  
      	  </h:p>  
          </description>  
        </cclaim>  
        <cclaim name="CC Conformance Claims">  
          <description>This PP is conformant to Parts 2 (extended) and 3 (extended) of Common  
            Criteria Version CC:2022, Revision 1.</description>  
        </cclaim>  
        <cclaim name="PP Claim">  
          <description>This PP does not claim conformance to any Protection Profile.</description>  
        </cclaim>  
        <cclaim name="Package Claim">  
          <description>
            <comment>Placeholder versions referenced for CC:2022 purposes. When CC:2022 versions are available, make sure the include-pkg tags up top are updated with correct URLs.</comment>
            This PP is Functional Package for Transport Layer Security Version 2.1 Conformant.<h:br/>  
            This PP is Functional Package for Secure Shell Version 1.1 Conformant.<h:br/>
            This PP is Functional Package for X.509 Version 1.0 Conformant.<h:br/>
          This PP is Assurance Package for Flaw Remediation Version 1.0 Conformant.</description>  
        </cclaim>  
      </cclaims>  
      -->
      
    </sec:Conformance_Claims>  
  
  
  <sec:Security_Problem_Definition>The security problem is described in terms
    of the threats that the OS is expected to address, assumptions about the
    operational environment, and any organizational security policies that the OS
    is expected to enforce.
    <sec:Threats>
      <threats>
        <threat name="T.NETWORK_ATTACK">
          <description> An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may engage in communications with applications and
            services running on or part of the OS with the intent of compromise. Engagement may
            consist of altering existing legitimate communications.</description>
          <addressed-by>FAU_GEN.1</addressed-by>
          <rationale>FAU_GEN.1 helps mitigate the threat of a network attack by logging evidence of potential malicious activity.</rationale>
          <addressed-by>FCS_CKM.1/AKG</addressed-by>
          <rationale>FCS_CKM.1/AKG helps mitigate the threat of a network attack by ensuring the generation of strong keys used for trusted communications.</rationale>
          <addressed-by>FCS_CKM.1/SKG</addressed-by>
          <rationale>FCS_CKM.1/SKG helps mitigate the threat of a network attack by ensuring the generation of strong keys used for trusted communications.</rationale>
          <addressed-by>FCS_CKM.6</addressed-by>
          <rationale>FCS_CKM.6 helps mitigate the threat of a network attack by ensuring that keys used for trusted communications are destroyed in a secure manner.</rationale>
        
          <addressed-by>FCS_COP.1/Hash</addressed-by>
          <rationale>FCS_COP.1/Hash helps mitigate the threat of a network attack by ensuring that secure hash algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/KeyedHash</addressed-by>
          <rationale>FCS_COP.1/KeyedHash helps mitigate the threat of a network attack by ensuring that secure HMAC algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/SigGen</addressed-by>
          <rationale>FCS_COP.1/SigGen helps mitigate the threat of a network attack by ensuring that secure digital signature algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/SigVer</addressed-by>
          <rationale>FCS_COP.1/SigVer helps mitigate the threat of a network attack by implementing signature verification functions used for protected storage.</rationale>
          <addressed-by>FCS_COP.1/SKC</addressed-by>
          <rationale>FCS_COP.1/SKC helps mitigate the threat of a network attack by ensuring that secure symmetric algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_RBG.1</addressed-by>
          <rationale>FCS_RBG.1 helps mitigate the threat of a network attack by ensuring that keys used for trusted communications are generated using a secure DRBG.</rationale>
          <addressed-by>FIA_AFL.1</addressed-by>
          <rationale>FIA_AFL.1 helps mitigate the threat of a network attack by preventing an unprivileged user from logging into a network interface by brute force guessing the credential.</rationale>
          <addressed-by>FIA_UAU.5</addressed-by>
          <rationale>FIA_UAU.5 helps mitigate the threat of a network attack by providing specified authentication mechanisms for network user authentication.</rationale>
          <addressed-by>FMT_MOF_EXT.1</addressed-by>
          <rationale>FMT_MOF_EXT.1 helps mitigate the threat of a network attack by limiting the management functions that are available to a given user.</rationale>
          <addressed-by>FMT_SMF_EXT.1</addressed-by>
          <rationale>FMT_SMF_EXT.1 helps mitigate the threat of a network attack by limiting the management functions that are available to a given user.</rationale>
          <addressed-by>FPT_ACF_EXT.1</addressed-by>
          <rationale>FPT_ACF_EXT.1 helps mitigate the threat of a network attack by limiting the ability of an unprivileged user to modify the behavior of the TSF.</rationale>
          <addressed-by>FPT_ASLR_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a network attack by limiting the ability to modify the behavior of the TSF via memory overflow.</rationale>
          <addressed-by>FPT_FLS.1</addressed-by>
          <rationale>FPT_FLS.1 helps mitigate the threat of a network attack by ensuring that a malfunctioning DRBG function cannot be used to generate potentially insecure keys.</rationale>
          <addressed-by>FPT_SBOP_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a network attack by limiting the ability to modify the behavior of the TSF via stack overflow.</rationale>
          <addressed-by>FPT_TST.1</addressed-by>
          <rationale>FPT_TST.1 helps mitigate the threat of a network attack by implementing a mechanism to detect when the DRBG may be failing to generate secure cryptographic keys.</rationale>
          <addressed-by>FTP_ITC_EXT.1</addressed-by>
          <rationale>FTP_ITC_EXT.1 helps mitigate the threat of a network attack by requiring the TSF to implement trusted protocols for network communication.</rationale>
          <addressed-by>FTP_TRP.1</addressed-by>
          <rationale>FTP_TRP.1 helps mitigate the threat of a network attack by requiring the use of a trusted path for any remote administration that can be performed on the TOE.</rationale>
          
          
          <addressed-by>FCS_RBG.6 (optional)</addressed-by>
          <rationale>FCS_RBG.6 helps mitigate the threat of a network attack by providing a secure DRBG service for third-party applications running on the TOE which may use this service to generate their own cryptographic keys for trusted communications.</rationale>
          <addressed-by>FPT_STM.1</addressed-by>
          <rationale>FPT_STM.1 helps mitigate the threat of malicious activity by providing reliable time stamps for the audit trail.</rationale>
          <addressed-by>FPT_W^X_EXT.1 (optional)</addressed-by>
          <rationale>FPT_W^X_EXT.1 helps mitigate the threat of a network attack by enforcing data execution prevention so that an external interface cannot attempt to write data to executable memory.</rationale>
          <addressed-by>FTA_TAB.1 (optional)</addressed-by>
          <rationale>FTA_TAB.1 helps mitigate the threat of a network attack by providing actionable consequences for misuse of the TSF.</rationale>
          
          <addressed-by>FPT_BLT_EXT.1 (objective)</addressed-by>
          <rationale>FPT_BLT_EXT.1 helps mitigate the threat of a network attack by enforcing least functionality of the TOE's Bluetooth interface.</rationale>
          
          
          <addressed-by>FCS_CKM.2 (implementation-dependent)</addressed-by>
          <rationale>FCS_CKM.2 helps mitigate the threat of a network attack by implementing secure methods to perform key distribution for trusted communications.</rationale>
          <addressed-by>FCS_CKM_EXT.7 (implementation-dependent)</addressed-by>
          <rationale>FCS_CKM_EXT.7 helps mitigate the threat of a network attack by implementing secure methods to perform key agreement for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/AEAD (implementation-dependent)</addressed-by>
          <rationale>FCS_COP.1/AEAD helps mitigate the threat of a network attack by enforcing the use of secure authenticated encryption algorithms when wireless functionality is implemented by the TOE.</rationale>
          
          <addressed-by>FCS_COP.1/KeyEncap (selection-based)</addressed-by>
          <rationale>FCS_COP.1/KeyEncp helps mitigate the threat of a network attack by using a secure key encapsulation method to transmit a symmetric key to a third party as part of key establishment for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/KeyWrap (selection-based)</addressed-by>
          <rationale>FCS_COP.1/KeyWrap helps mitigate the threat of a network attack by using a secure key wrap method to distribute key material to a third party for use in trusted communications.</rationale>
          <addressed-by>FCS_COP.1/XOF (selection-based)</addressed-by>
          <rationale>FCS_COP.1/XOF helps mitigate the threat of a network attack by supporting extendable output function implementations that are dependencies of some secure key generation and signature verification algorithms.</rationale>      
          <addressed-by>FCS_RBG.2 (selection-based)</addressed-by>
          <rationale>FCS_RBG.2 helps mitigate the threat of a network attack by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.3 (selection-based)</addressed-by>
          <rationale>FCS_RBG.3 helps mitigate the threat of a network attack by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.4 (selection-based)</addressed-by>
          <rationale>FCS_RBG.4 helps mitigate the threat of a network attack by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.5 (selection-based)</addressed-by>
          <rationale>FCS_RBG.5 helps mitigate the threat of a network attack by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>

          

          <addressed-by>FDP_IFC_EXT.1 (selection-based)</addressed-by>
          <rationale>FDP_IFC_EXT.1 helps mitigate the threat of a network attack by ensuring that the TOE has the ability to enforce the use of an IPsec VPN for all network traffic.</rationale>
          
          
          <!--
          <addressed-by>FCS_SSH_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of a network attack by defining the TOE's implementation of SSH if this protocol is used for protected communications.</rationale>
          <addressed-by>FCS_SSHC_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of a network attack by defining the TOE's implementation of SSH as a client if this protocol is used for protected communications.</rationale>
          <addressed-by>FCS_SSHS_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of a network attack by defining the TOE's implementation of SSH as a server if this protocol is used for protected communications.</rationale>
          
          <addressed-by>FCS_TLS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by identifying the TOE's support for TLS or DTLS as trusted communications channels.</rationale>
          <addressed-by>FCS_DTLSC_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          
          
          <addressed-by>FIA_XCU_EXT.1 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by requiring the use of X.509 certificates to validate the authenticity of network entities.</rationale>
          <addressed-by>FIA_XCU_EXT.2 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by requiring the use of X.509 certificates to assert its own identity to external entities.</rationale>
          <addressed-by>FIA_X509_EXT.1 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by defining how X.509 certificates are validated.</rationale>
          <addressed-by>FIA_X509_EXT.2 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by defining where X.509 certificates are used.</rationale>
          <addressed-by>FIA_X509_EXT.3 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by providing a secure means for the TOE to obtain certificates for its own use.</rationale>
     -->     
          
          <!--
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.PROTECTED_COMMS as this
              provides for integrity of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.INTEGRITY">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.INTEGRITY as this provides for
              integrity of software that is installed onto the system from the network.</rationale>
          </objective-refer>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.MANAGEMENT as this provides for
              the ability to configure the OS to defend against network attack.</rationale>
          </objective-refer>
          <objective-refer ref="O.ACCOUNTABILITY">
            <rationale>The threat T.NETWORK_ATTACK is countered by O.ACCOUNTABILITY as this
              provides a mechanism for the OS to report behavior that may indicate a network
              attack has occurred.</rationale>
          </objective-refer>
          -->
        </threat>
        <threat name="T.NETWORK_EAVESDROP">
          <description> An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may monitor and gain access to data exchanged between
            applications and services that are running on or part of the OS, resulting in
            modification or disclosure of sensitive communications. </description>
          
          <addressed-by>FCS_CKM.1/AKG</addressed-by>
          <rationale>FCS_CKM.1/AKG helps mitigate the threat of network eavesdropping by ensuring the generation of strong keys used for trusted communications.</rationale>
          <addressed-by>FCS_CKM.1/SKG</addressed-by>
          <rationale>FCS_CKM.1/SKG helps mitigate the threat of network eavesdropping by ensuring the generation of strong keys used for trusted communications.</rationale>
          <addressed-by>FCS_CKM.6</addressed-by>
          <rationale>FCS_CKM.6 helps mitigate the threat of network eavesdropping by ensuring that keys used for trusted communications are destroyed in a secure manner.</rationale>
 
          <addressed-by>FCS_COP.1/Hash</addressed-by>
          <rationale>FCS_COP.1/Hash helps mitigate the threat of network eavesdropping by ensuring that secure hash algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/KeyedHash</addressed-by>
          <rationale>FCS_COP.1/KeyedHash helps mitigate the threat of network eavesdropping by ensuring that secure HMAC algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/SigGen</addressed-by>
          <rationale>FCS_COP.1/SigGen helps mitigate the threat of network eavesdropping by ensuring that secure digital signature algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_COP.1/SigVer</addressed-by>
          <rationale>FCS_COP.1/SigVer helps mitigate the threat of network eavesdropping by implementing signature verification functions used for protected storage.</rationale>
          <addressed-by>FCS_COP.1/SKC</addressed-by>
          <rationale>FCS_COP.1/SKC helps mitigate the threat of network eavesdropping by ensuring that secure symmetric algorithms are used for trusted communications.</rationale>
          <addressed-by>FCS_RBG.1</addressed-by>
          <rationale>FCS_RBG.1 helps mitigate the threat of network eavesdropping by ensuring that keys used for trusted communications are generated using a secure DRBG.</rationale>
          <addressed-by>FPT_FLS.1</addressed-by>
          <rationale>FPT_FLS.1 helps mitigate the threat of network eavesdropping by ensuring that a malfunctioning DRBG function cannot be used to generate potentially insecure keys.</rationale>
          <addressed-by>FPT_TST.1</addressed-by>
          <rationale>FPT_TST.1 helps mitigate the threat of network eavesdropping by implementing a mechanism to detect when the DRBG may be failing to generate secure cryptographic keys.</rationale>
          <addressed-by>FTP_ITC_EXT.1</addressed-by>
          <rationale>FTP_ITC_EXT.1 helps mitigate the threat of network eavesdropping by requiring the TSF to implement trusted protocols for network communication.</rationale>
          <addressed-by>FTP_TRP.1</addressed-by>
          <rationale>FTP_TRP.1 helps mitigate the threat of network eavesdropping by requiring the use of a trusted path for any remote administration that can be performed on the TOE.</rationale>
          
          <addressed-by>FCS_RBG.6 (optional)</addressed-by>
          <rationale>FCS_RBG.6 helps mitigate the threat of network eavesdropping by providing a secure DRBG service for third-party applications running on the TOE which may use this service to generate their own cryptographic keys for trusted communications.</rationale>
          
          <addressed-by>FPT_BLT_EXT.1 (objective)</addressed-by>
          <rationale>FPT_BLT_EXT.1 helps mitigate the threat of network eavesdropping by enforcing least functionality of the TOE's Bluetooth interface.</rationale>
          
          <addressed-by>FCS_CKM.2 (implementation-dependent)</addressed-by>
          <rationale>FCS_CKM.2 helps mitigate the threat of network eavesdropping by enforcing the use of a cryptographic algorithm to protect key data that is distributed in transit to a third party for use in trusted communications.</rationale>
          <addressed-by>FCS_CKM_EXT.7 (implementation-based)</addressed-by>
          <rationale>FCS_CKM_EXT.7 helps mitigate the threat of network eavesdropping by ensuring that a third party cannot obtain the key used by the TOE to communicate securely with a remote entity.</rationale>
          <addressed-by>FCS_COP.1/AEAD (implementation-dependent)</addressed-by>
          <rationale>FCS_COP.1/AEAD helps mitigate the threat of network eavesdrop by enforcing the use of a cryptographic algorithm to protect data in transit that includes assurance of both authenticity and confidentiality.</rationale>
          
          
          <addressed-by>FCS_COP.1/KeyEncap (selection-based)</addressed-by>
          <rationale>FCS_COP.1/KeyWrap helps mitigate the threat of network eavesdrop by using a key encapsulation algorithm to protect data in transit</rationale>
          <addressed-by>FCS_COP.1/KeyWrap (selection-based)</addressed-by>
          <rationale>FCS_COP.1/KeyWrap helps mitigate the threat of network eavesdrop by using a key wrap algorithm to protect data in transit.</rationale>
          
          <addressed-by>FCS_RBG.2 (selection-based)</addressed-by>
          <rationale>FCS_RBG.2 helps mitigate the threat of network eavesdropping by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.3 (selection-based)</addressed-by>
          <rationale>FCS_RBG.3 helps mitigate the threat of network eavesdropping by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.4 (selection-based)</addressed-by>
          <rationale>FCS_RBG.4 helps mitigate the threat of network eavesdropping by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>
          <addressed-by>FCS_RBG.5 (selection-based)</addressed-by>
          <rationale>FCS_RBG.5 helps mitigate the threat of network eavesdropping by ensuring that the TOE's DRBG is seeded with sufficient entropy to ensure the generation of strong cryptographic keys.</rationale>          
          
          <addressed-by>FCS_COP.1/XOF (selection-based)</addressed-by>
          <rationale>FCS_COP.1/XOF helps mitigate the threat of network eavesdrop by supporting extendable output function implementations that are dependencies of algorithms used for protection of data in transit.</rationale>      
          
          <addressed-by>FDP_IFC_EXT.1 (selection-based)</addressed-by>
          <rationale>FDP_IFC_EXT.1 helps mitigate the threat of network eavesdropping by ensuring that the TOE has the ability to enforce the use of an IPsec VPN for all network traffic.</rationale>
          
          <!--
          <addressed-by>FCS_SSH_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of network eavesdropping by defining the TOE's implementation of SSH if this protocol is used for protected communications.</rationale>
          <addressed-by>FCS_SSHC_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of network eavesdropping by defining the TOE's implementation of SSH as a client if this protocol is used for protected communications.</rationale>
          <addressed-by>FCS_SSHS_EXT.1 (SSH Package)</addressed-by><rationale>Helps mitigate the threat of network eavesdropping by defining the TOE's implementation of SSH as a server if this protocol is used for protected communications.</rationale>
          
          <addressed-by>FCS_TLS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by identifying the TOE's support for TLS or DTLS as trusted communications channels.</rationale>
          <addressed-by>FCS_DTLSC_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSC_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_DTLSS_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of DTLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSC_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.1 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.2 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.3 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.4 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.5 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          <addressed-by>FCS_TLSS_EXT.6 (TLS Package)</addressed-by><rationale>Helps mitigate the threat by defining the use of TLS as a trusted network communications channel.</rationale>
          
          
          <addressed-by>FIA_XCU_EXT.1 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of network eavesdropping by requiring the use of X.509 certificates to validate the authenticity of network entities.</rationale>
          <addressed-by>FIA_XCU_EXT.2 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network attack by requiring the use of X.509 certificates to assert its own identity to external entities.</rationale>
          <addressed-by>FIA_X509_EXT.1 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of network eavesdropping by defining how X.509 certificates are validated.</rationale>
          <addressed-by>FIA_X509_EXT.2 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of network eavesdropping by defining where X.509 certificates are used.</rationale>
          <addressed-by>FIA_X509_EXT.3 (X.509 Package)</addressed-by>
          <rationale>Helps mitigate the threat of a network eavesdrop by providing a secure means for the TOE to obtain certificates for its own use.</rationale>
  -->        
          <!--
          <objective-refer ref="O.PROTECTED_COMMS">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.PROTECTED_COMMS as this
              provides for confidentiality of transmitted data.</rationale>
          </objective-refer>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The threat T.NETWORK_EAVESDROP is countered by O.MANAGEMENT as this provides
              for the ability to configure the OS to protect the confidentiality of its transmitted
              data.</rationale>
          </objective-refer>
          -->
        </threat>
        <threat name="T.LOCAL_ATTACK">
          <description> An attacker may compromise applications running on the OS. The
            compromised application may provide maliciously formatted input to the OS through a
            variety of channels including unprivileged system calls and messaging via the
            file system. </description>
          
          <addressed-by>FAU_GEN.1</addressed-by>
          <rationale>FAU_GEN.1 helps mitigate the threat of a local attack by logging evidence of potential malicious activity.</rationale>
          <addressed-by>FCS_COP.1/Hash</addressed-by>
          <rationale>FCS_COP.1/Hash helps mitigate the threat of a local attack by ensuring that secure hash algorithms are used for trusted updates.</rationale>
          <addressed-by>FCS_COP.1/KeyedHash</addressed-by>
          <rationale>FCS_COP.1/KeyedHash helps mitigate the threat of a local attack by ensuring that secure HMAC algorithms are used for trusted updates.</rationale>
          <addressed-by>FCS_COP.1/SigGen</addressed-by>
          <rationale>FCS_COP.1/SigGen helps mitigate the threat of a local attack by ensuring that secure digital signature algorithms are used for trusted updates.</rationale>
          <addressed-by>FCS_COP.1/SigVer</addressed-by>
          <rationale>FCS_COP.1/SigVer helps mitigate the threat of local attack by implementing signature verification functions used for protected storage.</rationale>
          <addressed-by>FCS_STO_EXT.1</addressed-by>
          <rationale>FCS_STO_EXT.1 helps mitigate the threat of a local attack by providing a mechanism to protect sensitive data at rest.</rationale>
          <addressed-by>FDP_ACF_EXT.1</addressed-by>
          <rationale>FDP_ACF_EXT.1 helps mitigate the threat of a local attack by providing a mechanism to restrict the ability of one user account to access data owned by another user.</rationale>
          <addressed-by>FIA_AFL.1</addressed-by>
          <rationale>FIA_AFL.1 helps mitigate the threat of a local attack by preventing an unprivileged user from gaining access to the TSF by brute force guessing the credential.</rationale>
          <addressed-by>FIA_UAU.5</addressed-by>
          <rationale>FIA_UAU.5 helps mitigate the threat of a local attack by providing specified authentication mechanisms for user authentication.</rationale>
          <addressed-by>FMT_MOF_EXT.1</addressed-by>
          <rationale>FMT_MOF_EXT.1 helps mitigate the threat of a local attack by limiting the management functions that are available to a given user.</rationale>
          <addressed-by>FMT_SMF_EXT.1</addressed-by>
          <rationale>FMT_SMF_EXT.1 helps mitigate the threat of a local attack by limiting the management functions that are available to a given user.</rationale>
          <addressed-by>FPT_ACF_EXT.1</addressed-by>
          <rationale>FPT_ACF_EXT.1 helps mitigate the threat of a local attack by limiting the ability of an unprivileged user to modify the behavior of the TSF.</rationale>
          <addressed-by>FPT_ASLR_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a local attack by limiting the ability of an application to modify the behavior of the TSF via memory overflow.</rationale>
          <addressed-by>FPT_SBOP_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a local attack by limiting the ability of an application to modify the behavior of the TSF via stack overflow.</rationale>
          <addressed-by>FPT_TST_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a local attack by ensuring the integrity of the TSF on boot.</rationale>
          <addressed-by>FPT_TUD_EXT.1</addressed-by>
          <rationale>helps mitigate the threat of a local attack by ensuring the authenticity and integrity of updates applied to the TOE.</rationale>
          <addressed-by>FPT_TUD_EXT.2</addressed-by>
          <rationale>helps mitigate the threat of a local attack by ensuring the integrity of updates applied to applications running the TOE.</rationale>
          
          <addressed-by>FPT_W^X_EXT.1 (optional)</addressed-by>
          <rationale>FPT_W^X_EXT.1 helps mitigate the threat of a local attack by enforcing data execution prevention so that an application cannot attempt to write data to executable memory.</rationale>
          <addressed-by>FTA_TAB.1 (optional)</addressed-by>
          <rationale>FTA_TAB.1 helps mitigate the threat of a local attack by providing actionable consequences for misuse of the TSF.</rationale>
          
          <addressed-by>FPT_SRP_EXT.1 (objective)</addressed-by>
          <rationale>FPT_SRP_EXT.1 helps mitigate the threat of a local attack by preventing the execution of unknown or untrusted software.</rationale>
          
          <!-- 
          <addressed-by>FIA_TSM_EXT.1 (X.509 Package)</addressed-by>
          <rationale>FIA_TSM_EXT.1 helps mitigate the threat of a local attack by ensuring that the contents of the trust store are protected against unauthorized modification.</rationale>
          -->
          <!--
          <objective-refer ref="O.INTEGRITY">
            <rationale>The objective O.INTEGRITY protects against the use of mechanisms that weaken
              the TOE with regard to attack by other software on the
              platform.</rationale>
          </objective-refer>
          <objective-refer ref="O.ACCOUNTABILITY">
            <rationale>The objective O.ACCOUNTABILITY protects against local attacks by providing
              a mechanism to report behavior that may indicate a local attack is occurring or
              has occurred.</rationale>
          </objective-refer>
          -->
        </threat>
        <threat name="T.LIMITED_PHYSICAL_ACCESS">
          <description> An attacker may attempt to access data on the OS while having a limited
            amount of time with the physical device, resulting in unauthorized disclosure or
            modification of the TSF's data or behavior. </description>
          
          <addressed-by>FAU_GEN.1</addressed-by>
          <rationale>FAU_GEN.1 helps mitigate the threat of by logging evidence of potential malicious activity should illicit access to the TSF be gained.</rationale>
          <addressed-by>FCS_STO_EXT.1</addressed-by>
          <rationale>FCS_STO_EXT.1 helps mitigate the threat by providing a mechanism to protect sensitive data at rest which prevents exfiltration of sensitive data during a limited access window.</rationale>
          <addressed-by>FIA_AFL.1</addressed-by>
          <rationale>FIA_AFL.1 helps mitigate the threat by preventing an unprivileged user from gaining access to the TSF by brute force guessing the credential in a limited time window.</rationale>
          <addressed-by>FIA_UAU.5</addressed-by>
          <rationale>FIA_UAU.5 helps mitigate the threat by providing specified authentication mechanisms for user authentication to prevent unauthorized access to the TOE.</rationale>
          <addressed-by>FMT_MOF_EXT.1</addressed-by>
          <rationale>FMT_MOF_EXT.1 helps mitigate the threat by limiting the management functions that are available to a given user which minimizes the impact of compromise should illicit access be gained.</rationale>
          <addressed-by>FMT_SMF_EXT.1</addressed-by>
          <rationale>FMT_SMF_EXT.1 helps mitigate the threat by limiting the management functions that are available to a given user which minimizes the impact of compromise should illicit access be gained.</rationale>
          <addressed-by>FPT_ACF_EXT.1</addressed-by>
          <rationale>FPT_ACF_EXT.1 helps mitigate the threat by limiting the ability of an unprivileged user to modify the behavior of the TSF should illicit access be gained.</rationale>
          
          <!--
          <objective-refer ref="O.PROTECTED_STORAGE">
            <rationale>The objective O.PROTECTED_STORAGE protects against unauthorized attempts to
              access physical storage used by the TOE.</rationale>
          </objective-refer>
          -->
        </threat>
      </threats>
    </sec:Threats>
	
	
    <sec:Assumptions>
      <assumptions>
        <assumption name="A.PLATFORM">
          <description> The OS relies upon a trustworthy computing platform for
            its execution. This underlying platform is out of scope of this PP. </description>
          <objective-refer ref="OE.PLATFORM">
            <rationale> The operational environment objective OE.PLATFORM is realized through
              A.PLATFORM. </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile, and uses the
            software in compliance with the applied enterprise security policy. At the same time,
            malicious software could act <h:i>as</h:i> the user, so requirements which
            confine malicious subjects are still in scope.</description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The operational environment objective OE.PROPER_USER is realized through
              A.PROPER_USER.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PROPER_ADMIN">
          <description> The administrator of the OS is not careless, willfully negligent or hostile,
            and administers the OS within compliance of the applied enterprise security policy. </description>
          <objective-refer ref="OE.PROPER_ADMIN">
            <rationale>The operational environment objective OE.PROPER_ADMIN is realized through
              A.PROPER_ADMIN.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
<!--    <section title="Organizational Security Policies" id="OSPs">
      <OSPs>
        <OSP id="P.ENTERPRISE">
          <description>If the OS is bound to a directory or management server, the configuration of
            the OS software must be capable of adhering to the enterprise security policies
            distributed by them.</description>
          <objective-refer ref="O.MANAGEMENT">
            <rationale>The organizational security policy P.ENTERPRISE is enforced through the
              objective O.MANAGEMENT as this objective represents how the enterprise and user assert
              management over the OS.</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </section> -->
  </sec:Security_Problem_Definition>
  
  
  <sec:Security_Objectives>
  
    <sec:Security_Objectives_for_the_Operational_Environment>
      The following security objectives for the operational
      environment assist the OS in correctly providing its security functionality.
      These track with the assumptions about the environment. <SOEs>
        <SOE name="OE.PLATFORM">
          <description>The OS relies on being installed on trusted
            hardware.</description>
        </SOE>
        <SOE name="OE.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security policy.
            Standard user accounts are provisioned in accordance with the least privilege model.
            Users requiring higher levels of access should have a separate account dedicated for
            that use. </description>
        </SOE>
        <SOE name="OE.PROPER_ADMIN">
          <description> The administrator of the OS is not careless, willfully
            negligent or hostile, and administers the OS within compliance of the applied enterprise
            security policy. </description>
        </SOE>
      </SOEs>
    </sec:Security_Objectives_for_the_Operational_Environment>
    <sec:Security_Objectives_Rationale/>
  </sec:Security_Objectives>

  <sec:Security_Requirements>   
    
    <sec:SFRs title="Security Functional Requirements">
      
      <section id="s-audit-table" title="Auditable Events for Mandatory SFRs">        
        <audit-table id="t-audit-mandatory" table="mandatory" title="Auditable Events for Mandatory
          SFRs">
        </audit-table>        
      </section>
      <!--
      <section id="opt-audit-table" title="Auditable Events for Optional SFRs">
        <audit-table id="at-optional" table="atref-optional" title="Auditable Events for Optional SFRs"></audit-table>
      </section>
      <section id="obj-audit-table" title="Auditable Events for Objective SFRs">
        <audit-table id="at-objective" table="atref-objective" title="Auditable Events for Objective SFRs"></audit-table>
      </section>
      <section id="sb-audit-table" title="Auditable Events for Selection-Based SFRs">
        <audit-table id="at-sel-based" table="atref-sel-based" title="Auditable Events for Selection-Based SFRs"></audit-table>
      </section>
      -->
      <section title="Audit Data Generation (FAU)" id="fau">
        <f-component cc-id="fau_gen.1" name="Audit Data Generation">
          <f-element id="fel-faugen">
            <title>
              The TSF shall be able to generate audit data of the following auditable
              events:
              <h:ol type='a'>
                <h:li>Start-up and shut-down of the audit functions;</h:li>
                <h:li>All auditable events for the [<h:i>not specified</h:i>] level of audit;
                  <h:li>Specifically defined auditable events listed in <xref g="t-audit-mandatory"/></h:li>
                  
                  [</h:li>
                <h:li><h:i>
                  <h:ul><h:li>Authentication events (Success/Failure);</h:li>
                    <h:li>Use of privileged/special rights events (Successful and unsuccessful security, audit, and configuration changes);</h:li>
                    <h:li>Privilege or role escalation events (Success/Failure);</h:li>
                    <h:li>Auditable events as defined in the <xref to="pkg-ssh"/>;</h:li>
                    <h:li>Auditable events as defined in the <xref to="pkg-tls"/>;</h:li>
                    <h:li>Auditable events as defined in the <xref to="X509"/>;</h:li>
                    <h:li><selectables linebreak='yes'>
                      <selectable>File and object events (Successful and unsuccessful attempts to create, access, delete, modify, modify permissions)</selectable>
                      <selectable>User and Group management events (Successful and unsuccessful add, delete, modify, disable, enable, and credential change)</selectable>
                      <selectable>Audit and log data access events (Success/Failure)</selectable>
                      <selectable>Cryptographic verification of software (Success/Failure)</selectable>
                      <selectable>Attempted application invocation with arguments (Success/Failure e.g. due to software restriction policy)</selectable>
                      <selectable>System reboot, restart, and shutdown events (Success/Failure)</selectable>
                      <selectable>Kernel module loading and unloading events (Success/Failure)</selectable>
                      <selectable>Administrator or root-level access events (Success/Failure)</selectable>
                      <selectable><assignable>other specifically defined auditable events</assignable>.</selectable>
                    </selectables>
                    </h:li>
                  </h:ul>
                </h:i>].
                </h:li>
              </h:ol>
            </title>
            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>
                <h:p>
                  The evaluator shall check the administrative guide and ensure
                  that it lists all of the auditable events.  The evaluator shall
                  check to make sure that every audit event type selected in the ST
                  is included.
                </h:p>
              </Guidance>
              <Tests>
                <h:p>
                  The evaluator shall test the OS&apos;s ability to correctly generate
                  audit data by having the TOE generate audit data for the
                  events listed in the ST.  This should include all instance types
                  of an event specified.
                  When verifying the test results, the evaluator shall ensure the
                  audit data generated during testing match the format specified
                  in the administrative guide, and that the audit
                  data provides the required information.
                </h:p>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-audit-content">
            <title> The TSF shall record within the audit data at least the following information:
              <h:ol type='a'>
                <h:li>Date and time of the event, type of event, subject identity (if applicable),
                  and the outcome (success or failure) of the event; </h:li>
                <h:li>For each audit event type, based on the auditable event
                  definitions of the functional components included in the PP, PP-Module, functional
                  package, or ST,
                  <assignable>other audit relevant information</assignable>
                </h:li>
              </h:ol>
              .
            </title>
            <note role="application">
              The term <h:i>subject</h:i> here is understood to be the user that the process
              is acting on behalf of.  If no auditable event definitions of
              functional components are provided, then no additional audit-relevant information
              is required.
            </note>
            <aactivity>
              <Guidance>
                <h:p>
                  The evaluator shall check the administrative guide and ensure
                  that it provides a format
                  for audit data. Each audit data format type must be covered,
                  along with a brief description of each field. The evaluator shall
                  ensure that the fields contains the information required.
                </h:p>
              </Guidance>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      
      <section title="Cryptographic Support (FCS)" id="fcs">
	  
	  
        <f-component id="sfr-fcs-ckm-1-akg" cc-id="fcs_ckm.1" iteration="AKG" name="Cryptographic
          Key Generation - Asymmetric Key">
          <f-element id="fel-asym-gen">
            <title>
              The TSF shall generate <h:b>asymmetric</h:b> cryptographic keys in accordance with
              a specified cryptographic key generation algorithm<selectables>
                <tabularize id="fcs-ckm-1-ak-sels" title="Allowable choices for FCS_CKM.1/AKG">
                  <textcol>Identifier</textcol>
                  <selectcol>Cryptographic Key Generation Algorithm</selectcol>
                  <reqtext>and specified cryptographic <h:b>algorithm parameters</h:b> <h:s>key sizes</h:s></reqtext>
                  <selectcol>Cryptographic Algorithm Parameters</selectcol>
                  <reqtext>that meet the following: </reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations of FCS_CKM.1/AKG.</reqtext>
                </tabularize>
                
                <!-- RSA -->
                <selectable id="sel-fcs-ckm-ak-rsa">
                  <col>RSA</col>
                  <col>RSA</col>
                  <col>Modulus of size <selectables>
                    <selectable id="sel-exp-ak-rsa-3072">3072</selectable>
                    <selectable id="sel-exp-ak-rsa-4096">4096</selectable>
                    <selectable id="sel-exp-ak-rsa-6144">6144</selectable>
                    <selectable id="sel-exp-ak-rsa-8192">8192</selectable>
                  </selectables> bits
                  </col>
                  <col>NIST FIPS PUB 186-5 (Section A.1.1)</col>
                </selectable>
                
                <!-- ECC-ERB - Extra Random Bits -->
                <selectable id="sel-fcs-ckm-ak-ecdsa-erb">
                  <col>ECC-ERB</col>
                  <col>ECC-ERB - Extra Random Bits</col>
                  <col>Elliptic Curve <selectables>
                    <selectable id="sel-exp-ak-edcsa-erb-P384">P-384</selectable>
                    <selectable id="sel-exp-ak-edcsa-erb-P521">P-521</selectable></selectables>
                  </col>
                  <col>
                    FIPS PUB 186-5 (Section A.2.1)<h:p/>
                    NIST SP 800-186 (Section 3) [NIST Curves]
                  </col>
                </selectable>
                
                <!-- ECC-RS - Rejection Sampling -->
                <selectable id="sel-fcs-ckm-ak-ecdsa-rs">
                  <col>ECC-RS</col>
                  <col>ECC-RS - Rejection Sampling</col>
                  <col>Elliptic Curve <selectables>
                    <selectable id="sel-exp-ak-edcsa-rs-P384">P-384</selectable>
                    <selectable id="sel-exp-ak-edcsa-rs-P521">P-521</selectable></selectables>
                  </col>
                  <col>
                    FIPS PUB 186-5 (Section A.2.2)<h:p/>
                    NIST SP 800-186 (Section 3) [NIST Curves]
                  </col>
                </selectable>
                
                <!-- FFC-ERB - Extra Random Bits -->
                <selectable id="sel-fcs-ckm-ak-ffc-erb">
                  <col>FFC-ERB</col>
                  <col>FFC-ERB - Extra Random Bits</col>
                  <col>Static domain parameters approved for <selectables>
                    <selectable>IKE Groups <selectables>
                      <selectable id="sel-dp-ak-ffc-erb-modp3072">MODP-3072</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-modp4096">MODP-4096</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-modp6144">MODP-6144</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-modp8192">MODP-8192</selectable>
                    </selectables></selectable>
                    <selectable>TLS Groups <selectables>
                      <selectable id="sel-dp-ak-ffc-erb-ffdhe3072">ffdhe3072</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-ffdhe4096">ffdhe4096</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-ffdhe6144">ffdhe6144</selectable>
                      <selectable id="sel-dp-ak-ffc-erb-ffdhe8192">ffdhe8192</selectable>
                    </selectables></selectable></selectables>
                  </col>
                  <col>
                    NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation]<h:p/>
                    <selectables>
                      <selectable>RFC 3526 [IKE groups]</selectable>
                      <selectable>RFC 7919 [TLS groups]</selectable></selectables>
                  </col>
                </selectable>
                
                <!-- FFC-RS - Extra Random Bits -->
                <selectable id="sel-fcs-ckm-ak-ffc-rs">
                  <col>FFC-RS</col>
                  <col>FFC-RS - Extra Random Bits</col>
                  <col>Static domain parameters approved for <selectables>
                    <selectable>IKE Groups <selectables>
                      <selectable id="sel-dp-ak-ffc-rs-modp3072">MODP-3072</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-modp4096">MODP-4096</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-modp6144">MODP-6144</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-modp8192">MODP-8192</selectable>
                    </selectables></selectable>
                    <selectable>TLS Groups <selectables>
                      <selectable id="sel-dp-ak-ffc-rs-ffdhe3072">ffdhe3072</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-ffdhe4096">ffdhe4096</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-ffdhe6144">ffdhe6144</selectable>
                      <selectable id="sel-dp-ak-ffc-rs-ffdhe8192">ffdhe8192</selectable>
                    </selectables></selectable></selectables>
                  </col>
                  <col>
                    NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation]<h:p/>
                    <selectables>
                      <selectable>RFC 3526 [IKE groups]</selectable>
                      <selectable>RFC 7919 [TLS groups]</selectable></selectables>
                  </col>
                </selectable>
                
                <!-- LMS -->
                <selectable id="sel-fcs-ckm-ak-lms">
                  <col>LMS</col>
                  <col>LMS</col>
                  <col>Private key size = <selectables>
                    <selectable><h:i>192 bits with</h:i> <selectables>
                      <selectable>SHA-256/192</selectable>
                      <selectable>SHAKE256/192</selectable>
                    </selectables></selectable>
                    <selectable>256 bits with <selectables>
                      <selectable>SHA-256</selectable>
                      <selectable>SHAKE256</selectable>
                    </selectables></selectable>
                  </selectables><h:p/>
                    Winternitz parameter = <selectables>
                      <selectable>1</selectable>
                      <selectable>2</selectable>
                      <selectable>4</selectable>
                      <selectable>8</selectable></selectables><h:p/>
                    Tree height = <selectables>
                      <selectable>5</selectable>
                      <selectable>10</selectable>
                      <selectable>15</selectable>
                      <selectable>20</selectable>
                      <selectable>25</selectable></selectables>
                  </col>
                  <col>RFC 8554 [LMS]<h:p/>
                    NIST SP 800-208 [parameters]
                  </col>
                </selectable>
                
                <!-- ML-KEM Key Generation -->
                <selectable id="sel-fcs-ckm-ak-mlkem">
                  <col>ML-KEM</col>
                  <col>ML-KEM KeyGen</col>
                  <col>Parameter set = ML-KEM-1024</col>
                  <col>NIST FIPS 203 (Section 7.1)</col>
                </selectable>
                
                <!-- ML-DSA Key Generation -->
                <selectable id="sel-fcs-ckm-ak-mldsa">
                  <col>ML-DSA</col>
                  <col>ML-DSA KeyGen</col>
                  <col>Parameter set = ML-DSA-87</col>
                  <col>NIST FIPS 204 (Section 5.1)</col>
                </selectable>
                
                <!-- XMSS -->
                <selectable id="sel-fcs-ckm-ak-xmss">
                  <col>XMSS</col>
                  <col>XMSS</col>
                  <col>Private key size = <selectables>
                    <selectable>192 bits with <selectables>
                      <selectable>SHA-256/192</selectable>
                      <selectable>SHAKE256/192</selectable>
                    </selectables></selectable>
                    <selectable>256 bits with <selectables>
                      <selectable>SHA-256</selectable>
                      <selectable>SHAKE256</selectable>
                    </selectables></selectable>
                  </selectables><h:p/>
                    Tree height = <selectables>
                      <selectable>10</selectable>
                      <selectable>16</selectable>
                      <selectable>20</selectable>
                    </selectables>
                  </col>
                  <col>RFC 8391 [XMSS]<h:p/>
                    NIST SP 800-208 [parameters]
                  </col>
                </selectable>
              </selectables>
            </title>
            <note role="application">
<h:p>
              For RSA the choice of the modulus implies the resulting key sizes of the public and private keys generated using the specified standard methods. RSA key generation with modulus size 2048 bits is no longer permitted by CNSA.
	      </h:p><h:p>
              For Finite Field Cryptography (FFC) DSA, ST authors should consult schemes for guidelines on use. FIPS PUB 186-5 does not approve DSA for digital signature generation but allows DSA for digital signature verification for legacy purposes. “FFC-ERB” or “FFC–RS” may be claimed only for generating private and public keys when “DH” is claimed in FCS_CKM_EXT.7.
	      </h:p><h:p>
              When generating ECC keys pairs for key agreement and if “ECDH” is claimed in FCS_CKM_EXT.7, then “ECC–ERB” or “ECC–RS” must be claimed. The sizes of the private key, which is a scalar, and the public key, which is a point on the elliptic curve, are determined by the choice of the curve.
	      </h:p><h:p>
              When generating ECC key pairs for digital signature generation and if “ECDSA” is claimed in FCS_COP.1/SigGen, then “ECC–ERB” or “ECC–RS” must be claimed. The sizes of the private key, which is a scalar, and the public key, which is a point on the elliptic curve, are determined by the choice of the curve.
              </h:p><h:p>
	      If the TSF acts only as a receiver in the RSA key establishment scheme,
	      the ST does not need to implement RSA key generation.
	      </h:p>
            </note>
            <aactivity>
	      <TSS>
						The evaluator shall examine the TSS to verify that it describes how the TOE generates a key
						based on output from a random bit generator as specified in FCS_RBG.1. The evaluator shall
						review the TSS to verify that it describes how the functionality described by FCS_RBG.1 is
						invoked.<h:p/>
						The evaluator shall examine the TSS to verify that it identifies the usage and key lifecycle
						for keys generated using each selected algorithm.<h:p/>
						The evaluator shall examine the TSS to verify that any one-time values such as nonces or masks
						are constructed in accordance with the relevant standards.<h:p/>
						If the TOE uses the generated key in a key chain or hierarchy then the evaluator shall verify that the
						TSS describes how the key is used as part of the key chain or hierarchy.
					</TSS>
					<Guidance>
						The evaluator shall verify that the guidance instructs the administrator how to configure the TOE to
						generate keys for the selected key generation algorithms for all key types and uses identified in
						the TSS.
					</Guidance>
					<Tests>
						The following tests are conditional based on the selections made in the SFR. 
						The evaluator shall perform the following tests or witness respective tests 
						executed by the developer. The tests must be executed on a platform that is as 
						close as practically possible to the operational platform (but which may be 
						instrumented in terms of, for example, use of a debug mode). Where the test is
						not carried out on the TOE itself, the test platform shall be identified and the
						differences between test environment and TOE execution environment shall be 
						described.<h:p/>			
					
						<h:br/><h:b>RSA Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">RSA</h:td>
								<h:td valign="top">RSA</h:td>
								<h:td valign="top">Modulus of size [<h:b>selection:</h:b> <h:i>3072, 4096, 6144, 8192</h:i>] bits</h:td>
								<h:td valign="top">NIST FIPS PUB 186-5 (Section A.1.1)</h:td>
							</h:tr>
						</h:table><h:p/>						
						FIPS PUB 186-5 Key Pair generation specifies five methods for generating the 
						primes <h:i>p</h:i> and <h:i>q</h:i>.<h:p/>
						These are:<h:ol> 
						<h:li>Random provable primes</h:li>
						<h:li>Random probable primes</h:li>
						<h:li>Provable primes with conditions based on auxiliary provable primes</h:li>
						<h:li>Probable primes with conditions based on auxiliary provable primes</h:li>
						<h:li>Probable primes with conditions based on auxiliary probable primes</h:li>
						</h:ol><h:p/>
						In addition to the key generation method, the input parameters are:<h:ul>
						<h:li>Modulus [3072, 4096, 6144, 8192]</h:li>
						<h:li>Hash algorithm [SHA-384, SHA-512] (methods 1, 3, 4 only)</h:li>
						<h:li>Rabin-Miller prime test [2<h:sup>100</h:sup>, 2<h:sup>Security String</h:sup>] (methods 2, 4, 5 only)</h:li> 
						<h:li><h:i>p</h:i> mod 8 value [0,1,3,5,7]</h:li>
						<h:li><h:i>q</h:i> mod 8 value [0,1,3,5,7]</h:li>
						<h:li>Private key format [standard, Chinese Remainder Theorem]</h:li>
						<h:li>Public exponent [fixed value, random]</h:li></h:ul><h:p/>
						The evaluator shall verify the ability of the TSF to correctly produce values
						for the RSA key components, including the public verification exponent <h:i>e</h:i>, the
						private prime factors <h:i>p</h:i> and <h:i>q</h:i>, the public modulus <h:i>n</h:i>, and 
						the calculation of the private signature exponent <h:i>d</h:i>.<h:p/>
						
						<h:br/><h:i><h:b>Testing for Random Provable Primes and Conditional Methods</h:b></h:i><h:p/> 
						To test the key generation method for the random provable primes method and for
						all the primes with conditions methods (methods 1, 3-5), the evaluator must seed 
						the TSF key generation routine with sufficient data to deterministically 
						generate the RSA key pair. <h:p/>
						For each supported combination of the above input parameters, the evaluator
						shall have the TSF generate 25 key pairs. The evaluator shall verify the
						correctness of the TSF’s implementation by comparing values generated by the TSF 
						with those generated by a known good implementation using the same input 
						parameters.<h:p/>
						<h:br/><h:i><h:b>Testing for Random Probable Primes Method</h:b></h:i><h:p/>
						If the TOE generates random probable primes (method 2) then, if possible, the 
						random probable primes method should also be verified against a known good
						implementation as described above. If verification against a known good
						implementation is not possible, the evaluator shall have the TSF generate 25 key
						pairs for each supported key length nlen and verify that all of the following 
						are true.<h:p/><h:ul>
						<h:li><h:i>n</h:i> = <h:i>p</h:i>*<h:i>q</h:i></h:li>
						<h:li><h:i>p</h:i> and <h:i>q</h:i> are probably prime according to Miller-Rabin tests with error
							probability &lt;2<h:sup>(-125)</h:sup></h:li>
						<h:li>2<h:sup>16</h:sup> &lt; <h:i>e</h:i> &lt; 2<h:sup>256</h:sup> and <h:i>e</h:i> is an odd integer</h:li>
						<h:li>GCD(<h:i>p</h:i>-1,<h:i>e</h:i>) = 1</h:li>
						<h:li>GCD(<h:i>q</h:i>-1,<h:i>e</h:i>) = 1</h:li>
						<h:li>|<h:i>p</h:i>-<h:i>q</h:i>| &gt; 2<h:sup>(<h:i>nlen</h:i>/2 – 100)</h:sup></h:li>
						<h:li><h:i>p</h:i> &#8805; squareroot(2)*( 2<h:sup>(<h:i>nlen</h:i>/2 -1)</h:sup> )</h:li>
						<h:li><h:i>q</h:i> &#8805; squareroot(2)*( 2<h:sup>(<h:i>nlen</h:i>/2 -1)</h:sup> )</h:li>
						<h:li>2<h:sup>(<h:i>nlen</h:i>/2)</h:sup> &lt; d &lt; LCM(<h:i>p</h:i>-1,<h:i>q</h:i>-1)</h:li>
						<h:li>e*d = 1 mod LCM(<h:i>p</h:i>-1,<h:i>q</h:i>-1)</h:li></h:ul>
 
						<h:br/><h:b>Elliptic Curve Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ECC-ERB</h:td>
							  <h:td valign="top">ECC – Extra Random Bits</h:td>
								<h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> <h:i>P-384, P-521</h:i>]</h:td>
								<h:td valign="top">NIST FIPS PUB 186-5 (Section A.2.1)<h:p/>
													NIST SP 800-186 (Section 3) [NIST Curves]</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ECC-RS</h:td>
							  <h:td valign="top">ECC – Rejection Sampling</h:td>
							  <h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> <h:i>P-384, P-521</h:i>]</h:td>
								<h:td valign="top">NIST FIPS PUB 186-5 (Section A.2.2)<h:p/>
													NIST SP 800-186 (Section 3) [NIST Curves]</h:td>
							</h:tr>
						</h:table><h:p/>						
						To test the TOE’s ability to generate asymmetric cryptographic keys using
						elliptic curves, the evaluator shall perform the ECC Key Generation Test 
						and the ECC Key Validation Test using the following input parameters.<h:ul>
						<h:li>Elliptic curve [P-384, P-521]</h:li>
						<h:li>Key pair generation method [extra random bits, rejection sampling]</h:li></h:ul><h:p/>
						
						<h:br/><h:i><h:b>ECC Key Generation Test</h:b></h:i><h:br/>
						For each supported combination of the above input parameters the evaluator shall
						require the implementation under test to generate 10 private and public key pairs
						(<h:i>d, Q</h:i>). The private key, <h:i>d</h:i>, shall be generated using a
						random bit generator as specified in FCS_RBG.1. The private key, <h:i>d</h:i>, is
						used to compute the public key, <h:i>Q'</h:i>. The evaluator shall confirm that
						0&lt;<h:i>d</h:i>&lt;<h:i>n</h:i> (where <h:i>n</h:i> is the order of the group),
						and the computed value <h:i>Q'</h:i> is then compared to the generated 
						public and private key pairs’ public key, <h:i>Q</h:i>, to confirm that <h:i>Q</h:i> is 
						equal to <h:i>Q'</h:i>.<h:p/>					
						
						<h:br/><h:i><h:b>ECC Key Validation Test</h:b></h:i><h:br/>
						For each supported combination of the above parameters the evaluator shall
						generate 12 private and public key pairs using the key generation function of a 
						known good implementation. For each set of 12 public keys, the evaluator shall
						modify four public key values by shifting <h:i>x</h:i> or <h:i>y</h:i> out of 
						range by adding the order of the field and modify four other public key values 
						by shifting <h:i>x</h:i> or <h:i>y</h:i> so that they are still in bounds, but 
						not on the curve. The remaining public key values are left unchanged (i.e., 
						correct). To determine correctness, the evaluator shall submit the public keys
						to the public key validation (PKV) function of the TOE and confirm that 
						the results correspond as expected for the modified and unmodified values.<h:p/>
					
						<h:br/><h:b>Finite Field Cryptography Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">FFC-ERB</h:td>
								<h:td valign="top">FFC – Extra Random Bits</h:td>
								<h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b>
									<h:i>IKE groups [<h:b>selection:</h:b> MODP-3072, MODP-4096, 
									MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b>  
									ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]</h:i>]]</h:td>
								<h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation]<h:p/>
												[<h:b>selection:</h:b> <h:i>RFC 3526 [IKE groups], RFC 7919 [TLS groups]</h:i>]</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">FFC-RS</h:td>
								<h:td valign="top">FFC – Rejection Sampling</h:td>
								<h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b>
								  IKE groups [<h:b>selection:</h:b> <h:i>MODP-3072, MODP-4096, 
									MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b>  
								    ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]]</h:i>]</h:td>
								<h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.6.1.1.4) [key pair generation]<h:p/>
								  [<h:b>selection:</h:b> <h:i>RFC 3526 [IKE groups], RFC 7919 [TLS groups]</h:i>]</h:td>
							</h:tr>
						</h:table><h:p/>						
						To test the TOE’s ability to generate asymmetric cryptographic keys using finite
						fields, the evaluator shall perform the Safe Primes Generation Test and the Safe
						Primes Validation Test using the following input parameter:<h:ul>
						<h:li>Fields/Groups [MODP-3072, MODP-4096, MODP-6144, MODP-8192,  
							ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]</h:li></h:ul><h:p/>
					
						<h:br/><h:i><h:b>Safe Primes Generation Test</h:b></h:i><h:br/>
						For each supported safe primes group, generate 10 key pairs. The evaluator shall 
						verify the correctness of the TSF’s implementation by comparing values generated
						by the TSF with those generated by a known good implementation using the same 
						input parameters.<h:p/>
						
						<h:br/><h:i><h:b>Safe Primes Verification Test</h:b></h:i><h:br/>
						For each supported safe primes group, use a known good implementation to generate
						10 key pairs. For each set of 10, the evaluator shall modify three so they are 
						incorrect. The remaining values are left unmodified (i.e. correct). To
						determine correctness, the evaluator shall submit the key pairs to the public 
						key validation (PKV) function of the TOE and shall confirm that the results
						correspond as expected for the modified and unmodified values.<h:p/>
		
		
						<h:br/><h:b>LMS Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">LMS</h:td>
								<h:td valign="top">LMS Key Generation</h:td>
								<h:td valign="top">Private key size = [<h:b>selection:</h:b>  
									192 bits with [<h:b>selection:</h:b> <h:i>SHA-256/192, SHAKE256/192],
									256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]</h:i>]; 
								  Winternitz parameter = [<h:b>selection:</h:b> <h:i>1, 2, 4, 8</h:i>]; 
								  Tree height = [<h:b>selection:</h:b> <h:i>5, 10, 15, 20, 25</h:i>]
								</h:td>
								<h:td valign="top">RFC 8554 [LMS]<h:p/>NIST SP 800-208 [parameters]</h:td>
							</h:tr>
						</h:table><h:p/>						
						To test the TOE’s ability to generate asymmetric cryptographic keys using LMS, the
						evaluator shall perform the LMS Key Generation Test using the following input parameters:
						<h:ul>
						<h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li>
						<h:li>Winternitz [1, 2, 4, 8]</h:li>
						<h:li>Tree height [5, 10, 15, 20, 25]</h:li></h:ul><h:p/>
						<h:br/><h:i><h:b>LMS Key Generation Test</h:b></h:i><h:br/>
						For each supported combination of the hash algorithm, Winternitz parameter, and tree height, the
						evaluator shall generate one public key for each of the test cases. The number of test cases
						depends on the tree height:
						<h:b><h:div style="text-align: center;">
							<ctr ctr-type="Table" pre="Table " id="lms-test-cases">: Number of LMS Test Cases</ctr>
							</h:div>
						</h:b>
							
						<h:table border="1" style="width:50%">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Height</h:td>
								<h:td valign="top">Number of test cases</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">5</h:td>
								<h:td valign="top">5</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">10</h:td>
								<h:td valign="top">4</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">15</h:td>
								<h:td valign="top">3</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">20</h:td>
								<h:td valign="top">2</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">25</h:td>
								<h:td valign="top">1</h:td>
							</h:tr>
						</h:table><h:p/>						
						The evaluator shall verify the correctness of the TSF’s implementation by
						comparing the public key generated by the TSF with that generated by a known
						good implementation using the same input parameters.<h:p/>


						<h:br/><h:b>ML-KEM Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ML-KEM</h:td>
								<h:td valign="top">ML-KEM Key Generation</h:td>
								<h:td valign="top">Parameter set = [ML-KEM-1024]</h:td>
								<h:td valign="top">NIST FIPS PUB 203 (Section 7.1)</h:td>
							</h:tr>
						</h:table><h:p/>						
						To test the TOE’s ability to generate asymmetric cryptographic keys using ML-KEM,
						the evaluator shall perform the Algorithm Functional Test using the following 
						input parameters:<h:ul>
						<h:li>Parameter set [ML-KEM-1024]</h:li>
						<h:li>Random seed d [32 bytes]</h:li>
						<h:li>Random seed z [32 bytes]</h:li></h:ul><h:p/>
						<h:br/><h:i><h:b>Algorithm Functional Test</h:b></h:i><h:br/>
						For each supported parameter set the evaluator shall require the implementation under test to
						generate 25 key pairs using 25 different randomly generated pairs of 32-byte seed values (<h:i>d, z</h:i>).
						To determine correctness, the evaluator shall compare the resulting key pairs (<h:i>ek, dk</h:i>) with those
						generated using a known good implementation using the same inputs.<h:p/>

						<h:br/><h:b>ML-DSA Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ML-DSA</h:td>
								<h:td valign="top">ML-DSA Key Generation</h:td>
								<h:td valign="top">Parameter set = ML-DSA-87</h:td>
								<h:td valign="top">NIST FIPS PUB 204 (Section 5.1)</h:td>
							</h:tr>
						</h:table><h:p/>						
							To test the TOE’s ability to generate asymmetric cryptographic keys using ML-DSA, 
							the evaluator shall perform the Algorithm Functional Test using the following
							input parameters:<h:ul>
							<h:li>Parameter set [ML-DSA-87]</h:li>
							<h:li>Random seed [32 bytes]</h:li></h:ul><h:p/>
							<h:br/><h:i><h:b>Algorithm Functional Test</h:b></h:i><h:br/>
							For each supported parameter set the evaluator shall require the implementation 
							under test to generate 25 key pairs using 25 different randomly generated 32-byte 
							seed values. To determine correctness, the evaluator shall compare the resulting
							key pairs with those generated using a known good implementation using the same 
							inputs.<h:p/>	

						<h:br/><h:b>XMSS Key Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Key Generation Algorithm</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">XMSS</h:td>
								<h:td valign="top">XMSS</h:td>
							  <h:td valign="top">Private key size = [<h:b>selection:</h:b> <h:i>192 bits
									with [<h:b>selection:</h:b> SHA-256/192, SHAKE256/192], 256 bits 
									with [<h:b>selection:</h:b> SHA-256, SHAKE256]</h:i>], tree height = 
							    [<h:b>selection:</h:b> <h:i>10, 16, 20</h:i>]</h:td>
								<h:td valign="top">RFC 8391 [XMSS]<h:p/>
									NIST SP 800-208 [parameters]</h:td>
							</h:tr>
						</h:table><h:p/>
						To test the TOE’s ability to generate asymmetric cryptographic keys using 
						XMSS, the evaluator shall perform the XMSS Key 
						Generation Test using the following input parameters:<h:ul>
						<h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li>
						<h:li>Tree height [10, 16, 20] (XMSS only)</h:li></h:ul><h:p/>

						<h:b><h:div style="text-align: center;">
							<ctr ctr-type="Table" pre="Table " id="xmss-akg-test-cases">: Number of Test Cases for XMSS<h:sup>MT</h:sup></ctr>
						</h:div></h:b>
						<h:table border="1" style="width:50%">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Height</h:td>
								<h:td valign="top">Number of test cases</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">10</h:td>
								<h:td valign="top">5</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">16</h:td>
								<h:td valign="top">4</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">20</h:td>
								<h:td valign="top">3</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">40</h:td>
								<h:td valign="top">2</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">60</h:td>
								<h:td valign="top">1</h:td>
							</h:tr>
						</h:table><h:p/>						

						<h:br/><h:i><h:b>XMSS Key Generation Test</h:b></h:i><h:br/>
						For each supported combination of hash algorithm and tree height, the evaluator 
						shall generate one public key for each test case. The number of test cases
						depends on the tree height as specified in <xref to="xmss-akg-test-cases"/>.<h:p/>

						The evaluator shall verify the correctness of the TSF’s implementation by comparing 
						values generated by the TSF with those generated by a known good implementation using 
						the same input parameters.<h:p/>
						
						Note: The number of test cases is limited due to the extreme amount of time it can
						take to generate XMSS trees.<h:p/>
					</Tests>
	    </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        
        <!-- FCS_CKM.1/SKG Cryptographic Key Generation - Symmetric Key -->
        <f-component id="sfr-fcs-ckm-1-skg" cc-id="fcs_ckm.1" iteration="SKG" name="Cryptographic Key Generation - Symmetric Key">
          <f-element id="fcs-ckm-1e1-skg">
            <title>
              The TSF shall generate <h:b>symmetric</h:b> cryptographic keys in accordance with
              a specified cryptographic key generation algorithm<selectables>
                <tabularize id="fcs-ckm-1-skg-sels" title="Recommended choices for FCS_CKM.1/SKG">
                  <textcol>Identifier</textcol>
                  <selectcol>Cryptographic Key Generation Algorithm</selectcol>
                  <reqtext>and specified cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic Key Sizes</selectcol>
                  <reqtext>that meet the following: </reqtext>
                  <selectcol>List of standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the recommended choices for
                    completion of the selection operations of FCS_CKM.1/SKG.</reqtext>
                </tabularize>
                
                <!-- RSK -->
                <selectable id="sel-fcs-ckm-sk-rsk">
                  <col>RSK</col>
                  <col>Direct Generation from a Random Bit Generator as specified in FCS_RBG.1</col>
                  <col><selectables>
                    <selectable id="sel-exp-skg-256">256</selectable>
                    <selectable id="sel-exp-skg-256">384</selectable>
                    <selectable id="sel-exp-skg-512">512</selectable></selectables> bits
                  </col>
                  <col>NIST SP 800-133 Revision 2 (Section 6.1)[Direct generation of symmetric keys]</col>
                </selectable>
              </selectables>
            </title>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to verify that it describes how the TOE obtains a symmetric
                cryptographic key through direct generation from a random bit generator as specified in
                FCS_RBG.1. The evaluator shall review the TSS to verify that it describes how the functionality
                described by FCS_RBG.1 is invoked.<h:p/>
                The evaluator shall examine the TSS to verify that it identifies the usage, and key lifecycle for
                keys generated using each selected algorithm.<h:p/>		
                If the TOE uses the generated key in a key chain/hierarchy then the evaluator shall verify that the
                TSS describes how the key is used as part of the key chain/hierarchy.
              </TSS>
              <Guidance>
                The evaluator shall verify that the AGD instructs the administrator how to configure the TOE to
                use the RBG to generate symmetric keys for all uses identified in the ST.
              </Guidance>
              <Tests>
                The following tests are conditional based upon the selections made in the SFR.
                The evaluator shall perform the following test or witness respective tests 
                executed by the developer. The tests must be executed on a platform that is as 
                close as practically possible to the operational platform (but which may be 
                instrumented in terms of, for example, use of a debug mode). Where the test 
                is not carried out on the TOE itself, the test platform shall be identified and
                the differences between test environment and TOE execution environment shall be
                described.<h:p/>
                To test the TOE’s ability to generate symmetric cryptographic keys using a 
                random bit generator, the evaluator shall configure the asymmetric cryptographic 
                key generation capability for each claimed key size. The evaluator shall use the
                description of the RBG interface to verify that the TOE requests and receives an
                amount of RBG output greater than or equal to the requested key size.
              </Tests>				
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_ckm.2" name="Cryptographic Key Distribution" status="feat-based">
          <depends on="key-encap-support"/>
          <depends on="wlan-support"/>
          <f-element id="fel-crypt-key-estab">
            <title>The TSF shall distribute cryptographic keys in accordance with a specified cryptographic 
              key distribution method <selectables>
                <selectable id="sel-ckm-2-encap">key encapsulation</selectable>
                <selectable id="sel-ckm-2-wrap">key wrapping</selectable>
              </selectables> that meets the following: [none].
            </title>
            <note role="application">
              <h:p>
                Key encapsulation is used in support of TLS when ML-KEM is used as the method of key establishment. Key wrapping is used in support of wireless LAN communications.
              </h:p>
            </note>
            <aactivity>
              <TSS>
                The evaluator shall ensure that the TSS documents that the security strength supported by
                the selected key distribution methods is sufficient for the security strength of the keys
                distributed through those methods.<h:p/>
                It is not necessary to identify the services that use each key distribution method here. That
                information should be documented in the requirements for the individual services and
                protocols that invoke key distribution.
              </TSS>
              <Guidance>
                The evaluator shall verify that the AGD guidance instructs the administrator
                how to configure the TOE to use the selected key distribution methods.
              </Guidance>
              <Tests>
                Specific testing for this component is covered by testing for the claimed components in
                FCS_COP.1/KeyEncap or FCS_COP.1/KeyWrap, depending on selections made.
              </Tests>
            </aactivity>
            <!--
            <rule id="r-key-rsa">
              <if><ref-id>s-keyestab-rsa</ref-id></if>
              <then><ref-id>s-keygen-rsa</ref-id></then>
            </rule>
            <rule id="r-key-ecc">
              <if><ref-id>s-keyestab-ecc</ref-id></if>
              <then><ref-id>s-keygen-ecc</ref-id></then>
            </rule>
            <rule id="r-key-ffc">
              <if><ref-id>s-keyestab-ffc</ref-id></if>
              <then><ref-id>s-keygen-ffc</ref-id></then>
            </rule>
            -->
          </f-element>
          <audit-event/>
        </f-component>
		
		
<f-component cc-id="fcs_ckm.6" name="Timing and Event of Cryptographic Key Destruction">
	 
          <f-element id="fel-key-kill-when">
            <title>The TSF shall destroy [<h:i>all keys and key material</h:i>] when [<h:i>no longer needed</h:i>].</title>
	    <note role="application">
	        For the purposes of this requirement, key material refers to authentication data, passwords, secret/private symmetric
		      keys, private asymmetric keys, data used to derive keys, values derived from passwords, etc.	      
	    </note>
	    <aactivity>
	      <TSS>
	        <h:p>
            The evaluator examines the TSS to ensure it describes how the keys are managed in volatile memory. This description
            includes details of how each identified key is introduced into volatile memory (e.g. by derivation from user input,
            or by unwrapping a wrapped key stored in non-volatile memory) and how they are overwritten.
	        </h:p>
	        <h:p>
            The evaluator shall check to ensure the TSS lists each type of key that is stored in non-volatile memory, and 
            identifies how the TOE interacts with the underlying platform to manage keys (e.g., store, retrieve, destroy). The
            description includes details on the method of how the TOE interacts with the platform, including an identification
            and description of the interfaces it uses to manage keys (e.g., file system APIs, platform key store APIs).
	        </h:p>
	        <h:p>
            If the ST makes use of the open assignment and fills in the type of pattern that is used, the evaluator examines 
            the TSS to ensure it describes how that pattern is obtained and used. The evaluator shall verify that the pattern
            does not contain any CSPs.
	        </h:p>
	        <h:p>
            The evaluator shall check that the TSS identifies any configurations or circumstances that may not strictly conform
            to the key destruction requirement.
	        </h:p>
	        <h:p>
            If the selection "destruction of all key encrypting keys (KEKs) protecting the target key 
            according to FCS_CKM.6.2, where none of the KEKs protecting the target key 
            are derived" is included, the evaluator shall examine the TOE’s keychain in the TSS and
            identify each instance when a key is destroyed by this method. In each instance the evaluator
            will verify all keys capable of decrypting the target key are destroyed in accordance with a
            specified key destruction method in FCS_CKM.6.2. The evaluator shall verify that all of the
            keys capable of decrypting the target key are not able to be derived to reestablish the keychain
            after their destruction. 	      
	        </h:p>      
	      </TSS>
	      <Guidance>	      
	      <h:p>
          There are a variety of concerns that may prevent or delay key destruction in some cases. The evaluator
          shall check that the guidance documentation identifies configurations or circumstances that may not 
          strictly conform to the key destruction requirement, and that this description is consistent with the
          relevant parts of the TSS and any other relevant Required Supplementary Information. The evaluator 
          shall check that the guidance documentation provides guidance on situations where key destruction may 
          be delayed at the physical layer and how such situations can be avoided or mitigated if possible.
	      </h:p>
	      <h:p>
          Some examples of what is expected to be in the documentation are provided here.
	      </h:p>
	      <h:p>
          When the TOE does not have full access to the physical memory, it is possible that the storage may be
          implementing wear-leveling and garbage collection. This may create additional copies of the key that 
          are logically inaccessible but persist physically. In this case, to mitigate this the drive should 
          support the TRIM command and implements garbage collection to destroy these persistent copies when
          not actively engaged in other tasks.
	      </h:p>
	      <h:p>
          Drive vendors implement garbage collection in a variety of different ways, as such there is a variable
          amount of time until data is truly removed from these solutions. There is a risk that data may persist
          for a longer amount of time if it is contained in a block with other data not ready for erasure. To 
          reduce this risk, the operating system and file system of the OE should support TRIM, instructing 
          the non-volatile memory to erase copies via garbage collection upon their deletion. If a RAID array
          is being used, only set-ups that support TRIM are utilized. If the drive is connected via PCI-Express,
          the operating system supports TRIM over that channel.
	      </h:p>
	      <h:p>
          The drive should be healthy and contains minimal corrupted data and should be end-of-lifed before a
          significant amount of damage to drive health occurs, this minimizes the risk that small amounts of
          potentially recoverable data may remain in damaged areas of the drive.
	      </h:p>
	      </Guidance>
	      <Tests>
		<testlist>
		  <test>Applied to each key held as in volatile memory and subject to destruction by overwrite by the TOE (whether or not the value is subsequently encrypted for storage in volatile or non-volatile memory). In the case where the only selection made for the destruction method key was removal of power, then this test is unnecessary. The evaluator shall:
		  <h:ol>
		    <h:li>Record the value of the key in the TOE subject to clearing.</h:li>
		    <h:li>Cause the TOE to perform a normal cryptographic processing with the key from Step #1.</h:li>
		    <h:li>Cause the TOE to clear the key.</h:li>
		    <h:li>Cause the TOE to stop the execution but not exit.</h:li>
		    <h:li>Cause the TOE to dump the entire memory of the TOE into a binary file.</h:li>
		    <h:li>Search the content of the binary file created in Step #5 for instances of the known key value from Step #1.</h:li>
		  </h:ol>
		  <h:p>
Steps 1-6 ensure that the complete key does not exist anywhere in volatile memory. If a copy is found, then the test fails.
		  </h:p>
</test>
<test>Applied to each key help in non-volatile memory and subject to destruction by the TOE. The evaluator shall use special tools (as needed), provided by the TOE developer if necessary, to ensure the tests function as intended.
<h:ol>
  <h:li>Identify the purpose of the key and what access should fail when it is deleted. (e.g. the data encryption key being deleted would cause data decryption to fail.)</h:li>
  <h:li>Cause the TOE to clear the key.</h:li>
  <h:li>Have the TOE attempt the functionality that the cleared key would be necessary for.</h:li>
</h:ol>

<h:p>
  The test succeeds if step 3 fails.
</h:p>
</test>
<test>
  <h:p>
Tests 3 and 4 do not apply for the selection 
<h:i>instructing the underlying platform to destroy the representation of the key</h:i>
as the TOE has no visibility into the inner workings and completely relies on the underlying platform.
  </h:p>
  <h:p>
The following tests are used to determine if the TOE is able to request the platform to overwrite the key with a TOE supplied pattern.
  </h:p>
<h:p>

Applied to each key held in non-volatile memory and subject to destruction by overwrite by the TOE. The evaluator shall use a tool that provides a logical view of the media (e.g., MBR file system):
<h:ol>
<h:li>Record the value of the key in the TOE subject to clearing.</h:li>

<h:li>Cause the TOE to perform a normal cryptographic processing with the key from Step #1.</h:li>

<h:li>Cause the TOE to clear the key.</h:li>

<h:li>Search the logical view that the key was stored in for instances of the known key value from Step #1. If a copy is found, then the test fails.</h:li>
</h:ol>
</h:p>
</test>
<test> Applied to each key held as non-volatile memory and subject to destruction by overwrite by the TOE. The evaluator shall use a tool that provides a logical view of the media:
<h:ol>
<h:li>Record the logical storage location of the key in the TOE subject to clearing.</h:li>

<h:li>Cause the TOE to perform a normal cryptographic processing with the key from Step #1.</h:li>

<h:li>Cause the TOE to clear the key.</h:li>

<h:li>Read the logical storage location in Step #1 of non-volatile memory to ensure the appropriate pattern is utilized.</h:li>
</h:ol>
<h:p>
  The test succeeds if correct pattern is used to overwrite the key in the memory location. If the pattern is not found the test fails.
</h:p>
</test>
		</testlist>
	      </Tests>
            </aactivity>
          </f-element>
  <f-element id="fel-key-kill">
    <title>
      The TSF shall destroy cryptographic keys and keying material specified by FCS_CKM.6.1 in accordance with a specified cryptographic key destruction method
      <selectables>
        <selectable>For volatile memory, the destruction shall be executed by a
          <selectables>
            <selectable>single overwrite consisting of <selectables>
              <selectable>a pseudo-random pattern using the TSF&apos;s RBG</selectable>
              <selectable>zeroes</selectable>
              <selectable>ones</selectable>
              <selectable>a new value of a key</selectable>
              <selectable><assignable> any value that does not contain any CSP</assignable></selectable></selectables></selectable>
            <selectable>removal of power to the memory</selectable>
            <selectable>destruction of reference to the key directly followed by a request for garbage collection</selectable>
          </selectables></selectable>
        <selectable>For non-volatile memory that consists of 
          <selectables>
            <selectable id="s-kek-kill">destruction
              of all key encrypting keys (KEKs) protecting the target key
              according to FCS_CKM.6.2, where none of the KEKs protecting the target key are derived
            </selectable>
            <selectable>the invocation of an interface provided by the underlying platform that
              <selectables>
                <selectable>logically addresses the storage location of the key and performs a 
                  <selectables>
                    <selectable>single</selectable>
                    <selectable><assignable>ST author defined multi-pass</assignable></selectable>
                  </selectables>overwrite consisting of
                  <selectables>
                    <selectable>zeroes</selectable>
                    <selectable>ones</selectable>
                    <selectable>pseudo-random pattern</selectable>
                    <selectable>a new value of a key of the same size</selectable>
                    <selectable><assignable>any value that does not contain any CSP</assignable></selectable></selectables></selectable>
                <selectable>instructs the underlying platform to destroy the abstraction that represents the key</selectable>
              </selectables>
            </selectable>
          </selectables>
        </selectable>
      </selectables>
      .
    </title>
    <note role="application">
      <h:p>
        The interface referenced in the requirement could take different forms, 
        the most likely of which is an application programming interface to an OS kernel. 
        There may be various levels of abstraction visible.
        For instance, in a given implementation that overwrites a key stored in non-volatile memory, 
        the application may have access to the file system details and 
        may be able to logically address specific memory locations.
        In another implementation, that instructs the underlying platform to destroy the 
        representation of a key stored in non-volatile memory, 
        the application may simply have a handle to a resource and 
        can only ask the platform to delete the resource, as may be the case with a platforms secure key store.
        The latter implementation should only be used for the most restricted access.
        The level of detail to which the TOE has access will be reflected in the TSS section of the ST.
      </h:p>
      <h:p>
        Several selections allow assignment of a 'value that does not contain any CSP.'
        This means that the TOE uses some other specified data not drawn from a source that 
        may contain key material or reveal information about key material, 
        and not being any of the particular values listed as other selection options. 
        The point of the phrase 'does not contain any CSP' is to ensure that the overwritten 
        data is carefully selected, and not taken from a general 'pool' that might contain current or 
        residual data that itself requires confidentiality protection.
      </h:p>
      <h:p>      
        For the selection <xref to="s-kek-kill"/>,
        a key can be considered destroyed by destroying the key that protects the key.
        If a key is wrapped or encrypted it is not necessary to "overwrite" that key,
        overwriting the key that is used to wrap or encrypt the key used to encrypt/decrypt data,
        using the appropriate method for the memory type involved, will suffice.
        For example, if a product uses a KEK to encrypt a Data Encryption Key
        (DEK), destroying the KEK using one of the methods in FCS_CKM.6 is sufficient, 
        since the DEK would no longer be usable (of course, presumes the DEK is still encrypted 
        and the KEK cannot be recovered or re-derived.).
      </h:p>
    </note>
  </f-element>
  <audit-event/>
        </f-component> 
              
              
              
        <ext-comp-def title="Cryptographic Key Management" fam-id="FCS_CKM_EXT">
          <fam-behavior>This family defines requirements for management of cryptographic keys using mechanisms beyond what are specified in CC Part 2.
          </fam-behavior>
        </ext-comp-def>
        <f-component id="sfr-fcs-ckm-ext-7" cc-id="fcs_ckm_ext.7" name="Cryptographic Key Agreement" status="feat-based">
          <depends on="key-agreement-support"/>
                    
          <consistency-rationale/>
          <comp-lev>requires that cryptographic key agreement be performed in accordance with specified standards.</comp-lev>
          <management/>
          <audit>
            The following actions should be auditable if FAU_GEN Security audit data generation is
            included in the PP, PP-Module, functional package or ST:<h:br/><h:ul>
              <h:li>minimal: Success and failure of the activity;</h:li>
              <h:li>basic: The object attribute(s), and object value(s) excluding any sensitive information.</h:li>
            </h:ul>
          </audit>
          <dependencies><h:br/>
            <h:br/>[FDP_ITC.1 Import of user data without security attributes, or
            <h:br/>FDP_ITC.2 Import of user data with security attributes, or 
            <h:br/>FCS_CKM.1 Cryptographic key generation, or
            <h:br/>FCS_CKM.5 Cryptographic key derivation, or
            <h:br/>FCS_CKM_EXT.8 Password-based key derivation],
            <h:br/>[FCS_CKM.2 Cryptographic key distribution, or
            <h:br/>FCS_COP.1 Cryptographic operation]
            <h:br/>FCS_CKM.6 Timing and event of cryptographic key destruction
            <h:br/>FCS_COP.1 Cryptographic operation 
          </dependencies>
          
          
          <f-element id="fcs-ckm-ext-7e1">
            <title>
              The TSF shall derive shared cryptographic keys with input from multiple parties in accordance 
              with specified cryptographic key agreement algorithms  
              <selectables>
                <tabularize id="fcs-ckm-ext-7-sels" 
                  title="Allowable choices for FCS_CKM_EXT.7">
                  <textcol>Identifier</textcol>
                  <selectcol>Cryptographic algorithm</selectcol>
                  <reqtext>and specified cryptographic parameters</reqtext>
                  <selectcol>Cryptographic parameters</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations of FCS_CKM_EXT.7.</reqtext>
                </tabularize>
                
                <selectable id="sel-fcs-ckm-kat-kas2">
                  <col>KAS2</col>
                  <col>RSA</col>
                  <col>Modulus size <selectables>
                    <selectable>3072</selectable>
                    <selectable>4096</selectable>
                    <selectable>6144</selectable>
                    <selectable>8192</selectable>
                  </selectables> bits</col>
                  <col>NIST SP 800-56B Revision 2 (Section 8.3) [KAS2]</col>
                </selectable>
                
                <selectable id="sel-fcs-ckm-kat-dh">
                  <col>DH</col>
                  <col>Finite Field Cryptography Diffie-Hellman</col>
                  <col>Static domain parameters approved for <selectables>
                    <selectable>IKE Groups <selectables>
                      <selectable id="sel-kat-ffc-modp3072">MODP-3072</selectable>
                      <selectable id="sel-kat-ffc-modp4096">MODP-4096</selectable>
                      <selectable id="sel-kat-ffc-modp6144">MODP-6144</selectable>
                      <selectable id="sel-kat-ffc-modp8192">MODP-8192</selectable>
                    </selectables></selectable>
                    <selectable>TLS Groups <selectables>
                      <selectable id="sel-kat-ffc-ffdhe3072">ffdhe3072</selectable>
                      <selectable id="sel-kat-ffc-ffdhe4096">ffdhe4096</selectable>
                      <selectable id="sel-kat-ffc-ffdhe6144">ffdhe6144</selectable>
                      <selectable id="sel-kat-ffc-ffdhe8192">ffdhe8192</selectable>
                    </selectables></selectable></selectables>
                  </col>
                  <col>
                    NIST SP 800-56A Revision 3 (Section 5.7.1.1) [DH]<h:p/>
                    <selectables>
                      <selectable>RFC 3526 [IKE groups]</selectable>
                      <selectable>RFC 7919 [TLS groups]</selectable></selectables>
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-ckm-kat-ecdh">
                  <col>ECDH</col>
                  <col>Elliptic Curve Diffie-Hellman</col>
                  <col>Elliptic Curve <selectables>
                    <selectable id="sel-exp-kat-ecdh-P384">P-384</selectable>
                    <selectable id="sel-exp-kat-ecdh-P521">P-521</selectable></selectables>
                  </col>
                  <col>
                    NIST SP 800-56A Revision 3 (Section 5.7.1.2) [ECDH]<h:p/>
                    NIST SP 800-186 (Section 3.2.1) [NIST Curves]
                  </col>
                </selectable>
              </selectables>
            </title>
            <note role="application">
              This SFR is claimed if the TSF supports key agreement schemes as a method of key establishment for trusted channels. This will generally apply to all conformant TOEs, except in the rare (but possible) case where only key encapsulation is used.<h:p/>
              All of the above algorithms with the selectable parameters are CNSA 1.0 compliant.<h:p/>
              This SFR must be included in the ST if key agreement or transport is a service provided by the TOE to 
              tenant software, or if they are used by the TOE itself to support or implement PP-specified security 
              functionality.<h:p/> 
            </note>
            <aactivity>
              <TSS>
                The evaluator shall ensure that the TSS documents that the security strength of the
                material contributed by the TOE is sufficient for the security strength of the key and the
                agreement method.
              </TSS>
              <Guidance>There are no additional Guidance evaluation activities for this component.</Guidance>
              <Tests>
                The following tests are conditional based upon the selections made in the SFR.
                The evaluator shall perform the following test or witness respective tests
                executed by the developer. The tests must be executed on a platform that is as 
                close as practically possible to the operational platform (but which may be 
                instrumented in terms of, for example, use of a debug mode). Where the test is 
                not carried out on the TOE itself, the test platform shall be identified and the 
                differences between test environment and TOE execution environment shall be 
                described.<h:p/>
                
                <!-- KAS2 -->
                <h:br/><h:b>KAS2</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Parameters</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">KAS2</h:td>
                    <h:td valign="top">RSA</h:td>
                    <h:td valign="top">Modulus Size [<h:b>selection:</h:b> 3072, 4096,
                      6144, 8192] bits</h:td>
                    <h:td valign="top">NIST SP 800-56B Revision 2 (Section 8.3) [KAS2]</h:td>
                  </h:tr>
                </h:table><h:p/>						
                To test the TOE’s implementation of the of the KAS2 RSA Key Agreement scheme, the evaluator
                shall perform the Algorithm Functional Test and Validation Test using the 
                following input parameters:<h:ul>
                  <h:li>RSA Private key format [Basic, Prime Factor, Chinese Remainder Theorem]</h:li>
                  <h:li>Modulo value [3072, 4096, 6144, 8192]</h:li>
                  <h:li>Role [initiator, responder]</h:li></h:ul><h:p/>
                The evaluator shall generate a test group (i.e. set of tests) for each parameter
                value of the above parameter type with the largest number of supported values.
                For example, if the TOE supports all five Modulo values, then the evaluator 
                shall generate five test groups. Each of the above supported parameter values
                must be included in at least one test group.<h:p/>
                Regardless of how many parameter values are supported, there must be at least two 
                test groups.<h:p/>
                Half of the test groups are designated as Algorithm Functional Tests (AFT) and the 
                remainder are designated as Validation Tests (VAT). If there is an odd number of 
                groups, then the extra group is designated randomly as either AFT or VAT.<h:p/>
                <h:br/><h:i><h:b>Algorithm Functional Test</h:b></h:i><h:br/>
                For each test group designated as AFT, the evaluator shall generate 10 test 
                cases using random data (except for a fixed public exponent, if supported). 
                The resulting shared secrets shall be compared with those generated by a 
                known-good implementation using the same inputs.<h:p/>
                <h:br/><h:i><h:b>Validation Test</h:b></h:i><h:br/>
                For each test group designated as VAT, the evaluator shall generate 25 test cases are
                using random data (except for a fixed public exponent, if supported). Of the 25
                test cases:<h:ul>
                  <h:li>Two test cases must have a shared secret with a leading nibble of 0s,</h:li>
                  <h:li>Two test cases have modified derived key material,</h:li>
                  <h:li>Two test cases have modified tags, if key confirmation is supported,</h:li>
                  <h:li>Two test cases have modified MACs, if key confirmation is supported, and</h:li>
                  <h:li>The remaining test cases are not modified.</h:li></h:ul><h:p/>
                To determine correctness, the evaluator shall confirm that the resulting 25 shared 
                secrets correspond as expected for both the modified and unmodified values.<h:p/>
                
                <!-- FFC Diffie-Hellman Key Agreement -->
                <h:br/><h:b>FFC Diffie-Hellman Key Agreement</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Parameters</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">DH</h:td>
                    <h:td valign="top">Finite Field Cryptography Diffie-Hellman</h:td>
                    <h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b>
                      IKE groups [<h:b>selection:</h:b> MODP-3072, MODP-4096,
                      MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b> 
                      ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]]]</h:td>
                    <h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.7.1.1) [DH]<h:p/>
                      [<h:b>selection:</h:b> RFC 3526 [IKE Groups], RFC 7919 [TLS Groups]]</h:td>
                  </h:tr>
                </h:table><h:p/>						
                To test the TOE’s implementation of FFC Diffie-Hellman Key Agreement, the evaluator shall
                perform the Algorithm Functional Test and Validation Test using the following 
                input parameters:<h:ul>
                  <h:li>Domain Parameter Group [MODP-3072, MODP-4096, MODP-6144, MODP-8192, 
                    ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]</h:li></h:ul><h:p/>
                <h:br/><h:i><h:b>Algorithm Functional Test</h:b></h:i><h:br/>
                For each supported domain parameter group, the evaluator shall generate 10 test
                cases by generating the initiator and responder secret keys using random data,
                calculating the responder public key, and creating the shared secret. The 
                resulting shared secrets shall be compared with those generated by a known-good 
                implementation using the same inputs.<h:p/>
                <h:br/><h:i><h:b>Validation Test</h:b></h:i><h:br/>
                For each supported combination of the above parameters the evaluator shall
                generate 15 Diffie Hellman initiator/responder key pairs using the key generation
                function of a known-good implementation. For each set of key pairs, the 
                evaluator shall modify five initiator private key values. The remaining key
                values are left unchanged (i.e., correct). To determine correctness, the 
                evaluator shall confirm that the 15 shared secrets correspond as expected for 
                both the modified and unmodified inputs.<h:p/>
                
                <!-- Elliptic Curve Diffie-Hellman Key Agreement -->
                <h:br/><h:b>Elliptic Curve Diffie-Hellman Key Agreement</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Parameters</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">ECDH</h:td>
                    <h:td valign="top">Elliptic Curve Diffie-Hellman</h:td>
                    <h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-384, P-521</h:td>
                    <h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.7.1.2) [ECDH]<h:p/>
                      NIST SP 800-186 (Section 3.2.1) [NIST Curves]</h:td>
                  </h:tr>
                </h:table><h:p/>						
                To test the TOE’s implementation of Elliptic Curve Diffie-Hellman Key Agreement,
                the evaluator shall perform the Algorithm Functional Test and Validation Test 
                using the following input parameters:<h:ul>
                  <h:li>Elliptic Curve [P-384, P-521]</h:li></h:ul><h:p/>
                <h:br/><h:i><h:b>Algorithm Functional Test</h:b></h:i><h:br/>
                For each supported Elliptic Curve the evaluator shall generate 10 test cases by
                generating the initiator and responder secret keys using random data, calculating 
                the responder public key, and creating the shared secret. The resulting shared 
                secrets shall be compared with those generated by a known-good implementation using
                the same inputs.<h:p/>
                <h:br/><h:i><h:b>Validation Test</h:b></h:i><h:br/>
                For each supported Elliptic Curve the evaluator shall generate 15 Diffie Hellman
                initiator/responder key pairs using the key generation function of a known-good 
                implementation. For each set of key pairs, the evaluator shall modify five 
                initiator private key values. The remaining key values are left unchanged (i.e.,
                correct). To determine correctness, the evaluator shall confirm that the 15 
                shared secrets correspond as expected for the modified and unmodified values.<h:p/>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        
        <!-- FCS_COP.1/AEAD Cryptographic Operation – Authenticated Encryption with Associated Data -->	
        <f-component id="sfr-fcs-cop-1-aead" cc-id="fcs_cop.1" iteration="AEAD" name="Cryptographic Operation – Authenticated Encryption with Associated Data" status="feat-based">
          <depends on="wlan-support"></depends>
          <f-element id="fcs-cop-1e1-aead">
            <title>
              The TSF shall perform [authenticated encryption with associated data] in accordance with a specified 
              cryptographic algorithm 
              <selectables>
                <tabularize id="fcs-cop-aead-sels" title="Allowable choices for FCS_COP.1/AEAD">
                  <textcol>Identifier</textcol>
                  <reqtext></reqtext>
                  <selectcol>Cryptographic algorithm</selectcol>
                  <reqtext>and cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic key sizes</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations of FCS_COP.1/AEAD.</reqtext>
                </tabularize>
                
                <selectable id="sel-fcs-cop-aead-aes-ccm">
                  <col>AES-CCM</col>
                  <col>AES in CCM mode with unpredictable, non-repeating nonce, minimum size of 64 bits</col>
                  <col>256 bits</col>
                  <col><selectables>
                    <selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
                    <selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
                    <selectables>
                      <selectable>ISO/IEC 19772:2020 (Clause 7)</selectable> 
                      <selectable>NIST SP 800-38C</selectable></selectables> [CCM]
                  </col></selectable>
                
                <selectable id="sel-fcs-cop-aead-aes-gcm">
                  <col>AES-GCM</col>
                  <col>AES in GCM mode with non-repeating IVs using <selectables>
                    <selectable>deterministic</selectable>
                    <selectable>RBG-based</selectable></selectables>,
                    IV construction; the tag must be of length
                    <selectables>
                      <selectable>96</selectable>
                      <selectable>104</selectable>
                      <selectable>112</selectable>
                      <selectable>120</selectable>
                      <selectable>128</selectable>
                    </selectables> bits.
                  </col>
                  <col>256 bits</col>
                  <col><selectables>
                    <selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
                    <selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
                    <selectables>
                      <selectable>ISO/IEC 19772:2020 (Clause 10)</selectable> 
                      <selectable>NIST SP 800-38D</selectable></selectables> [GCM]
                  </col></selectable>
              </selectables>
            </title>
            <note role="application">
              This SFR is claimed when the TOE has wireless LAN client functionality so that the TSF can provide AEAD algorithms in support of wireless communications.<h:p/>
              The use of 256-bit keys for AES encryption is required by CNSA 1.0 and 2.0.
            </note>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to ensure that it describes the construction of any IVs,
                nonces, and tags in conformance with the relevant specifications.<h:p/>
                If a CCM mode algorithm is selected, then the evaluator shall examine the TOE summary
                specification to confirm that it describes how the nonce is generated and that the same nonce is
                never reused to encrypt different plaintext pairs under the same key.<h:p/>
                If a GCM mode algorithm is selected, then the evaluator shall examine the TOE summary
                specification to confirm that it describes how the IV is generated and that the same IV is never
                reused to encrypt different plaintext pairs under the same key. The evaluator shall also confirm
                that for each invocation of GCM, the length of the plaintext is at most (2<h:sup>32</h:sup>)-2 blocks.
              </TSS>
              <Guidance/>
              <Tests>
                The following tests may require the developer to provide access to a test platform that
                provides the evaluator with tools that are typically not found on factory products.<h:p/>
                The following tests are conditional based upon the selections made in the SFR. The
                evaluator shall perform the following test or witness respective tests executed by
                the developer. The tests must be executed on a platform that is as close as practically
                possible to the operational platform (but which may be instrumented in terms of,
                for example, use of a debug mode). Where the test is not carried out on the TOE
                itself, the test platform shall be identified and the differences between test
                environment and TOE execution environment shall be described.<h:p/>
                
                <!-- AES-CCM -->
                <h:br/><h:b>AES-CCM</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">AES-CCM </h:td>
                    <h:td valign="top">AES in CCM mode with nonrepeating nonce, minimum size
                      of 64 bits</h:td>
                    <h:td valign="top">256 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2),
                      FIPS PUB 197] [AES]<h:p/>
                      [<h:b>selection:</h:b>  ISO/IEC 19772:2020 (Clause 7), NIST SP 800-38C] [CCM]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s implementation of AES-CCM authenticated encryption functionality the
                evaluator shall perform the Algorithm Functional Tests described below using the following
                input parameters:<h:ul>
                  <h:li>Key Size [256] bits</h:li>
                  <h:li>Associated data size [0-65536] bits in increments of 8</h:li>
                  <h:li>Payload size [0-256] bits in increments of 8</h:li>
                  <h:li>IV/Nonce size [64-104] bits in increments of 8</h:li>
                  <h:li>Tag size [32-128] bits in increments of 16</h:li></h:ul><h:p/>
                <h:br/><h:b>Algorithm Functional Tests</h:b><h:p/>
                Unless otherwise specified, the following tests should use random data, a tag size of 128 bits,
                IV/Nonce size of 104 bits, payload size of 256 bits, and associated data size of 256 bits. If any of
                these values are not supported, any supported value may be used. The evaluator shall compare
                the output from each test case against results generated by a known-good implementation with
                the same input parameters.<h:p/>
                <h:br/><h:b><h:i>Variable Associated Data Test</h:i></h:b><h:p/>
                For each claimed key size, and for each supported associated data size from 0 through 256 bits in
                increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data.
                In addition, for each key size, the TOE must be tested by encrypting 10 cases with associated
                data lengths of 65536 bits, if supported.<h:p/>				
                <h:br/><h:b><h:i>Variable Payload Test</h:i></h:b><h:p/>
                For each claimed key size, and for each supported payload size from 0 through 256 bits in
                increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data.<h:p/>
                <h:br/><h:b><h:i>Variable Nonce Test</h:i></h:b><h:p/>
                For each claimed key size, and for each supported IV/Nonce size from 64 through 104 bits in
                increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data.<h:p/>
                <h:br/><h:b><h:i>Variable Tag Test</h:i></h:b><h:p/>
                For each claimed key size, and for each supported tag size from 32 through 128 bits in
                increments of 16 bits, the TOE must be tested by encrypting 10 test cases using all random data.<h:p/>
                <h:br/><h:b><h:i>Decryption Verification Test</h:i></h:b><h:p/>
                For each claimed key size, for each supported associated data size from 0 through 256 bits in
                increments of 8 bits, for each supported payload size from 0 through 256 bits in increments of 8
                bits, for each supported IV/Nonce size from 64 through 104 bits in increments of 8 bits, and for
                each supported tag size from 32 through 128 bits in increments of 16 bits, the TOE must be
                tested by decrypting 10 test cases using all random data.<h:p/>					
                
                <!-- AES-GCM -->
                <h:br/><h:b>AES-GCM</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">AES-GCM </h:td>
                    <h:td valign="top">AES in GCM mode with nonrepeating IVs using 
                      [<h:b>selection:</h:b> deterministic, RBG-based] IV construction; 
                      the tag must be of length [<h:b>selection:</h:b> 96, 104, 112, 120, or 128] bits.</h:td>
                    <h:td valign="top">256 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2),
                      FIPS PUB 197] [AES]<h:p/>
                      [<h:b>selection:</h:b>  ISO/IEC 19772:2020 (Clause 10), NIST SP 800-38D] [GCM]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s implementation of AES-GCM authenticated encryption functionality the
                evaluator shall perform the Encryption Algorithm Functional Tests and Decryption Algorithm
                Functional Tests as described below using the following input parameters:<h:ul>
                  <h:li>Key Size [256] bits</h:li>
                  <h:li>Associated data size [0-65536] bits</h:li>
                  <h:li>Payload size [0-65536] bits</h:li>
                  <h:li>IV size [96] bits</h:li>
                  <h:li>Tag size [96, 104, 112, 120, 128] bits</h:li></h:ul><h:p/>
                <h:br/><h:b>Encryption Algorithm Functional Tests</h:b><h:p/>
                The evaluator shall generate 15 test cases using random data for each combination of
                the above parameters as follows:<h:p/><h:ul>
                  <h:li>Each claimed key size,</h:li>
                  <h:li>Each supported tag size,</h:li>
                  <h:li>Four supported non-zero payload sizes, such that two are multiples of 128 bits
                    and two are not multiples of 128 bits,</h:li>
                  <h:li>Four supported non-zero associated data sizes, such that two are multiples of 
                    128 bits and two are not multiples of 128 bits, and</h:li>
                  <h:li>An associated data size of zero, if supported.</h:li></h:ul><h:p/>
                Note that the IV size is always 96 bits.<h:p/>
                The evaluator shall compare the output from each test case against results generated by a known-
                good implementation with the same input parameters.<h:p/>
                <h:br/><h:b><h:i>Decryption Algorithm Functional Tests</h:i></h:b><h:p/>
                The evaluator shall test the authenticated decrypt functionality of AES-GCM by supplying 15
                test cases for the supported combinations of the parameters as described above. For each
                parameter combination the evaluator shall introduce an error into either the Ciphertext or the Tag
                such that approximately half of the cases are correct and half the cases contain errors.
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
              
              
        <f-component cc-id="fcs_cop.1" iteration="Hash" name="Cryptographic Operation - Hashing">
          <f-element id="fel-hash-how">
            <title>
              The TSF shall perform [<h:i>cryptographic hashing</h:i>] in accordance with a specified 
              cryptographic algorithm 
              <selectables>
                <selectable id="sel-cop1-sha256">SHA-256</selectable>
                <selectable id="sel-cop1-sha384">SHA-384</selectable>
                <selectable id="sel-cop1-sha512">SHA-512</selectable>
                <selectable id="sel-cop1-sha3-384">SHA3-384</selectable>
                <selectable id="sel-cop1-sha3-512">SHA3-512</selectable>
              </selectables> that meet the following:
              <selectables>
                <selectable>ISO/IEC 10118-3:2018 [SHA, SHA3]</selectable>
                <selectable>FIPS PUB 180-4 [SHA]</selectable>
                <selectable>FIPS PUB 202 [SHA3]</selectable>
              </selectables>.   
            </title>
            <note role="application">
	      <h:p>
	        In accordance with CNSA 1.0 and 2.0:<h:ul>
	          <h:li>SHA-1 hash is no longer permitted to be used as a hash function, </h:li>
	          <h:li>SHA3 hashes may be used only for internal hardware functionality such as
	            boot integrity checks, and</h:li>
	          <h:li>SHA-256 is permitted only for use as a PRF or MAC as part of a key derivation function,
	            or as part of LMS or XMSS.</h:li>
	        </h:ul><h:p/>
	        The hash selection should be consistent with the overall strength of the 
	        algorithm used for signature generation. For example, the TOE should choose SHA-384 for 3072-bit RSA, 
	        4096-bit RSA, or ECC with P-384; and SHA-512 for ECC with P-521.
	      </h:p>
	    </note>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to verify that if SHA-256 is selected, that it is being 
                used only as a PRF or MAC step in a key derivation function or as part of LMS, and not as a hash algorithm.
              </TSS>
              <Guidance/>
              <Tests>
                The following tests may require the developer to provide access to a test platform that
                provides the evaluator with tools that are typically not found on factory products.<h:p/>
                The following tests are conditional, based on the selections made in the SFR. The
                evaluator shall perform the following tests or witness respective tests executed by
                the developer. The tests must be executed on a platform that is as close as practically
                possible to the operational platform (but which may be instrumented in terms of,
                for example, use of a debug mode). Where the test is not carried out on the TOE
                itself, the test platform shall be identified and the differences between test
                environment and TOE execution environment shall be described.<h:p/>
                
                <h:br/><h:b>SHA-256, SHA-384, SHA-512</h:b><h:p/> 
                To test the TOE’s ability to generate hash digests using SHA2, the evaluator shall
                perform the Algorithm Functional Test, Monte Carlo Test, and Large Data Test for each claimed
                SHA2 algorithm.<h:p/>
                <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
                The evaluator shall generate a number of test cases equal to the block size of the hash (512 for
                SHA2-256; 1024 for the other SHA2 algorithms).<h:p/>
                Each test case is to consist of random data of a random length between 0 and 65536 bits, or the
                largest size supported.<h:p/>                
                <h:br/><h:b>Monte Carlo Test</h:b><h:p/>
                Monte Carlo tests begin with a single seed and run 100 iterations of the chained computation.<h:p/>
                There are two versions of the Monte Carlo Test for SHA-1 and SHA-2. Either one is acceptable.
                For the standard Monte Carlo test the message hashed is always three times the length of the
                initial seed.<h:p/>
                <h:pre>
                  For j = 0 to 99
                  A = B = C = SEED
                  For i = 0 to 999
                  MSG = A || B || C
                  MD = SHA(MSG)
                  A = B
                  B = C
                  C = MD
                  Output MD
                  SEED = MD
                </h:pre><h:p/>
                For the alternate version of the Monte Carlo Test, the hashed message is always the same length as
                the seed.<h:p/>
                <h:pre>
                  INITIAL_SEED_LENGTH = LEN(SEED)
                  For j = 0 to 99
                  A = B = C = SEED
                  For i = 0 to 999
                  MSG = A || B || C
                  if LEN(MSG) &gt;= INITIAL_SEED_LENGTH:
                  MSG = leftmost INITIAL_SEED_LENGTH bits of MSG
                  else:
                  MSG = MSG || INITIAL_SEED_LENGTH - LEN(MSG) 0 bits
                  MD = SHA(MSG)
                  A = B
                  B = C
                  C = MD
                  Output MD
                  SEED = MD	
                </h:pre><h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.<h:p/>
                <h:br/><h:b>Large Data Test</h:b><h:p/>
                The implementation must be tested against one test case each on large data messages of 1GB,
                2GB, 4GB, and 8GB of data as supported. The data need not be random. It may, for example,
                consist of a repeated pattern of 64 bits.<h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.<h:p/>
                
                <h:br/><h:b>SHA3-384, SHA3-512</h:b> <h:p/>
                To test the TOE’s ability to generate hash digests using SHA3 the evaluator shall perform the
                Algorithm Functional Test, Monte Carlo Test, and Large Data Tests for each claimed SHA3
                algorithm.<h:p/>
                
                <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
                Generate a test case consisting of random data for every message length from 0 bits (or the
                smallest supported message size) to rate bits, where rate equals<h:ul>
                  <h:li>832 for SHA3-384 and</h:li>
                  <h:li>576 for SHA3-512.</h:li></h:ul><h:p/>
                Additionally, generate tests cases of random data for messages of every multiple of (rate+1) bits
                starting at length rate, and continuing until 65535 is exceeded.<h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.<h:p/>
                <h:br/><h:b>Monte Carlo Test</h:b><h:p/>
                Monte Carlo tests begin with a single seed and run 100 iterations of the chained computation.<h:p/>
                For this Monte Carlo Test, the hashed message is always the same length as the seed.<h:p/>
                <h:pre>
                  MD[0] = SEED
                  INITIAL_SEED_LENGTH = LEN(SEED)
                  For 100 iterations
                  For i = 1 to 1000
                  MSG = MD[i-1];
                  if LEN(MSG) &gt;= INITIAL_SEED_LENGTH:
                  MSG = leftmost INITIAL_SEED_LENGTH bits of MSG
                  else:
                  MSG = MSG || INITIAL_SEED_LENGTH - LEN(MSG) 0 bits
                  MD[i] = SHA3(MSG)
                  MD[0] = MD[1000]
                  Output MD[0]
                </h:pre><h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.<h:p/>
                <h:br/><h:b>Large Data Test</h:b><h:p/>
                The implementation must be tested against one test case each on large data messages of 1GB,
                2GB, 4GB, and 8GB of data as supported. The data need not be random. It may, for example,
                consist of a repeated pattern of 64 bits.<h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_cop.1" iteration="KeyedHash" name="Cryptographic Operation - Keyed Hash">
          <f-element id="fel-keyed-hash-how">
            <title>The TSF shall perform [<h:i>keyed hash message authentication</h:i>] in accordance
              with a specified cryptographic algorithm 
              <selectables>
                <tabularize id="tab-fcs-cop-keyedhash-sels" title="Allowable choices for FCS_COP.1/KeyedHash">
                  <selectcol>Keyed Hash Algorithm</selectcol>
                  <reqtext>and cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic Key Sizes</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations of FCS_COP.1/KeyedHash.</reqtext>
                </tabularize>
                
                <selectable id="sel-fcs-cop-keyedhash-hmac-sha-256">
                  <col>HMAC-SHA-256</col>
                  <col>256 bits</col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</h:i></selectable>
                    <selectable><h:i>FIPS PUB 198-1</h:i></selectable></selectables>
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-cop-keyedhash-hmac-sha-384">
                  <col>HMAC-SHA-384</col>
                  <col><selectables>
                    <selectable><h:i>384 (ISO, FIPS)</h:i></selectable>
                    <selectable><h:i>256 (FIPS)</h:i></selectable></selectables> bits
                  </col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</h:i></selectable>
                    <selectable><h:i>FIPS PUB 198-1</h:i></selectable></selectables>
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-cop-keyedhash-hmac-sha-512">
                  <col>HMAC-SHA-512</col>
                  <col><selectables>
                    <selectable><h:i>512 (ISO, FIPS)</h:i></selectable>
                    <selectable><h:i>384 (FIPS)</h:i></selectable>
                    <selectable><h:i>256 (FIPS)</h:i></selectable></selectables> bits
                  </col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</h:i></selectable>
                    <selectable><h:i>FIPS PUB 198-1</h:i></selectable></selectables>
                  </col>
                </selectable>
              </selectables>
            </title>
            <note role="application">
              <h:p>
                The intent of this requirement is to specify the keyed-hash
                message authentication function used for key establishment purposes for the various
                cryptographic protocols used by the OS (e.g., trusted channel).
                The hash selection must support the message digest size selection.
                The hash selection should be consistent with the overall strength of the
                algorithm used for FCS_COP.1/Hash.
              </h:p>
              <h:p>
                In accordance with CNSA 1.0 and 2.0, HMAC-SHA-256 may be used only as a PRF or MAC step in a key derivation function.
              </h:p>
            </note>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to ensure that the size of the key is sufficient for the desired
                security strength of the output.<h:p/>
                The evaluator shall examine the TSS to verify that if HMAC-SHA-256 is selected, that it is being 
                used only as a PRF or MAC step in a key derivation function.
              </TSS>
              <Guidance/>
              <Tests>
                The following tests are conditional based on the selections made in the SFR. The evaluator
                shall perform the following tests or witness respective tests executed by the developer. The tests
                must be executed on a platform that is as close as practically possible to the operational platform
                (but which may be instrumented in terms of, for example, use of a debug mode). Where the test
                is not carried out on the TOE itself, the test platform shall be identified and the differences
                between test environment and TOE execution environment shall be described.<h:p/>
                
                <!-- HMAC -->
                <h:br/><h:b>HMAC</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Keyed Hash Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">HMAC-SHA-256</h:td>
                    <h:td valign="top">256 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1</h:i>] </h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">HMAC-SHA-384</h:td>
                    <h:td valign="top">[<h:i><h:b>selection:</h:b> (ISO, FIPS) 384, (FIPS) 256] bits</h:i></h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1</h:i>] </h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">HMAC-SHA-512</h:td>
                    <h:td valign="top">[<h:b>selection:</h:b> <h:i>(ISO, FIPS) 512, (FIPS) 384, 256] bits</h:i></h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1</h:i>] </h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s ability to generate keyed hashes using HMAC the evaluator shall perform the
                Algorithm Functional Test for each combination of claimed HMAC algorithm the following
                parameters:<h:ul>
                  <h:li>Hash function [SHA-256, SHA-384, SHA-512]</h:li>
                  <h:li>Key length [8-65536] bits by 8s</h:li>
                  <h:li>MAC length [32-[digest size of hash function (256, 384, 512)]] bits</h:li></h:ul><h:p/>
                <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
                For each supported Hash function the evaluator shall generate 150 test cases using random input
                messages of 128 bits, random supported key lengths, random keys, and random supported MAC
                lengths such that across the 150 test cases:<h:ul>
                  <h:li>The key length includes the minimum, the maximum, a key length equal to the block
                    size, and key lengths that are both larger and smaller than the block size.</h:li>
                  <h:li>The MAC size includes the minimum, the maximum, and two other random values.</h:li></h:ul><h:p/>
                The evaluator shall compare the output against results generated by a known good
                implementation with the same input.	
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        
        
		<!-- FCS_COP.1/KeyEncap Cryptographic Operation - Key Encapsulation -->
		<f-component id="sfr-fcs-cop-1-keyencap" cc-id="fcs_cop.1" iteration="KeyEncap" 
				name="Cryptographic Operation - Key Encapsulation" status="sel-based">
		  <depends on-sel="sel-ckm-2-encap"/>
			<f-element id="fcs-cop-1e1-keyencap">
				<title> The TSF shall perform [key encapsulation] in accordance with a specified cryptographic algorithm 
					<selectables>
						<tabularize id="tab-fcs-cop-keyencap-sels" title="Allowable choices for FCS_COP.1/KeyEncap">
							<textcol>Identifier</textcol>
							<reqtext></reqtext>
							<selectcol>Cryptographic algorithm</selectcol>
							<reqtext>and cryptographic key sizes</reqtext>
							<selectcol>Cryptographic key sizes</selectcol>
							<reqtext>that meet the following:</reqtext>
							<selectcol>List of standards</selectcol>
							<reqtext><h:p/><h:p/>The following table provides the allowable choices for
										completion of the selection operations of FCS_COP.1/KeyEncap.</reqtext>
						</tabularize>
						
						
						<selectable id="sel-fcs-cop-keyencap-mlkem">
							<col>ML-KEM</col>
							<col>ML-KEM</col>
							<col>Parameter set = ML-KEM-1024</col>
							<col>NIST FIPS 203</col>
						</selectable>			
						
					</selectables>
				</title>
				<note role="application">
					For this PP, the only anticipated use of key encapsulation is the use of ML-KEM as part of key establishment for trusted communications.
				</note>
				<aactivity>
					<TSS>The evaluator shall ensure that the TSS documents that the selection of the key size is
						sufficient for the security strength of the key encapsulated.<h:p/>
						The evaluator shall examine the TSS to verify that any one-time values such as nonces or masks
						are constructed and used in accordance with the relevant standards.
					</TSS>
					<Guidance/>
					<Tests>
						The following tests may require the developer to provide access to a test platform that
						provides the evaluator with tools that are typically not found on factory products.<h:p/>
						The following tests are conditional based upon the selections made in the SFR. The
						evaluator shall perform the following test or witness respective tests executed by
						the developer. The tests must be executed on a platform that is as close as practically
						possible to the operational platform (but which may be instrumented in terms of,
						for example, use of a debug mode). Where the test is not carried out on the TOE
						itself, the test platform shall be identified and the differences between test
						environment and TOE execution environment shall be described.<h:p/>

						<!-- ML-KEM  -->
						<h:br/><h:b>ML-KEM Key Encapsulation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ML-KEM</h:td>
								<h:td valign="top">ML-KEM</h:td>
								<h:td valign="top">Parameter set = ML-KEM-1024</h:td>
								<h:td valign="top">NIST FIPS PUB 203</h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s implementation of ML-KEM key encapsulation/decapsulation, the evaluator
						shall perform the Encapsulation Test and the Decapsulation Test using the following input
						parameters:<h:ul>
						<h:li>Encapsulation Parameters:<h:ul>
							<h:li>Parameter set [ML-KEM-1024]</h:li>
							<h:li>Previously generated encapsulation key (<h:i>ek</h:i>)</h:li>
							<h:li>Random value (<h:i>m</h:i>) [32 bytes]</h:li></h:ul></h:li>
						<h:li>Decapsulation Parameters:<h:ul>
							<h:li>Parameter set [ML-KEM-1024]</h:li>
							<h:li>Previously generated decapsulation key (<h:i>dk</h:i>)</h:li>
							<h:li>Previously generated ciphertext (<h:i>c</h:i>) [32 bytes]</h:li></h:ul></h:li>
						</h:ul><h:p/>
						<h:br/><h:b>Encapsulation Test</h:b><h:p/>
						For each supported parameter set the evaluator shall generate 25 test cases consisting of an
						encapsulation key ek and random value m. For each test case the valuator shall require the
						implementation under test to generate the corresponding shared secret k and ciphertext c. To
						determine correctness, the evaluator shall compare the resulting values with those generated
						using a known-good implementation using the same inputs.<h:p/>
						<h:br/><h:b>Encapsulation Key Check (if supported)</h:b><h:p/>
						The evaluator shall generate 10 encapsulation keys such that:<h:ul>
						<h:li>Five of the encapsulation keys are valid, and</h:li>
						<h:li>Five of the encapsulation keys are modified such that a value in the noisy linear 
						system is encoded into the key as a value greater than Q.</h:li></h:ul><h:p/>
						The evaluator shall invoke the TOE’s Encapsulation Key Check functionality to determine the
						validity of the 10 keys. The unmodified keys should be determined valid, and the modified keys
						should be determined invalid. <h:p/>
						<h:br/><h:b>Decapsulation Key Check (if supported)</h:b><h:p/>
						The evaluator shall generate 10 decapsulation keys such that:<h:ul>
						<h:li>Five of the decapsulation keys are valid, and</h:li>
						<h:li>Five of the decapsulation keys are modified such that the concatenated
						values ek||H(ek) will no longer match by modifying H(ek) to be a different value.</h:li></h:ul><h:p/>
						The evaluator shall invoke the TOE’s Decapsulation Key Check functionality to determine the
						validity of the 10 keys. The unmodified keys should be determined valid, and the modified keys
						should be determined invalid.<h:p/>				
						<h:br/><h:b>Decapsulation Test</h:b><h:p/>
						For each supported parameter set the evaluator shall use a single previously generated
						decapsulation key <h:i>dk</h:i> and generate 10 test cases consisting of valid and invalid ciphertexts c. For
						each test case the evaluator shall require the implementation under test to generate the
						corresponding shared secret <h:i>k</h:i> whether or not the ciphertext is valid. To determine correctness,
						the evaluator shall compare the resulting values with those generated using a known-good
						implementation using the same inputs.<h:p/>						
					</Tests>
				</aactivity>
			</f-element>
			<audit-event/>
		</f-component>


		<!-- FCS_COP.1/KeyWrap Cryptographic Operation - Key Wrapping -->
		<f-component id="sfr-fcs-cop-1-kw" cc-id="fcs_cop.1" iteration="KeyWrap" 
			name="Cryptographic Operation - Key Wrapping" status="sel-based">
		  <depends on-sel="sel-ckm-2-wrap"/>
		  <f-element id="fcs-cop-1e1-kw">
				<title>
					The TSF shall perform [key wrapping] in accordance with a specified cryptographic algorithm 
					<selectables>
						<tabularize id="fcs-cop-kw-sels" title="Allowable choices for FCS_COP.1/KeyWrap">
							<textcol>Identifier</textcol>
							<reqtext></reqtext>
							<selectcol>Cryptographic algorithm</selectcol>
							<reqtext>and cryptographic key sizes</reqtext>
							<selectcol>Cryptographic key sizes</selectcol>
							<reqtext>that meet the following:</reqtext>
							<selectcol>List of standards</selectcol>
							<reqtext><h:p/><h:p/>The following table provides the allowable choices for
								completion of the selection operations of FCS_COP.1/KeyWrap.</reqtext>
						</tabularize>
						
						<!-- AES-KW  -->
						<selectable id="sel-fcs-cop-kw-aes-kw">
							<col>AES-KW</col>
							<col>AES in KW mode</col>
							<col>256 bits</col>
							<col><selectables>
								<selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
								<selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
								<selectables>
								<selectable>ISO/IEC 19772:2020 (clause 6)</selectable>
								<selectable>NIST SP 800-38F (Section 6.2)</selectable> 
							</selectables> [KW mode]</col>
						</selectable>

						<!-- KWP mode -->
						<selectable id="sel-fcs-cop-kw-aes-kwp">
							<col>AES-KWP</col>
							<col>AES in KWP mode</col>
							<col>256 bits</col>
							<col><selectables>
								<selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
								<selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
								NIST SP 800-38F (Section 6.3) [KWP mode]</col>
						</selectable>
						
						<selectable id="sel-fcs-cop-kw-aes-ccm">
						<col>AES-CCM</col>
						<col>AES in CCM mode with unpredictable, non-repeating nonce, minimum size of 64 bits</col>
						<col>256 bits</col>
						<col><selectables>
							<selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
							<selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
							<selectables>
							<selectable>ISO/IEC 19772:2020 (Clause 7)</selectable> 
							<selectable>NIST SP 800-38C</selectable></selectables> [CCM]
						</col></selectable>

						<selectable id="sel-fcs-cop-kw-aes-gcm">
						<col>AES-GCM</col>
						<col>AES in GCM mode with non-repeating IVs using <selectables>
							<selectable>deterministic</selectable>
							<selectable>RBG-based</selectable></selectables>,
							IV construction; the tag must be of length
							<selectables>
								<selectable>96</selectable>
								<selectable>104</selectable>
								<selectable>112</selectable>
								<selectable>120</selectable>
								<selectable>128</selectable>
							</selectables> bits.
						</col>
						<col>256 bits</col>
						<col><selectables>
							<selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable>
							<selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/>
							<selectables>
							<selectable>ISO/IEC 19772:2020 (Clause 10)</selectable> 
							<selectable>NIST SP 800-38D</selectable></selectables> [GCM]
						</col></selectable>
					</selectables>
				</title>
				<note role="application">
					NIST 800-57p1rev5 sec. 5.6.2 specifies that the size of key used to protect the key being 
					transported should be at least the security strength of the key it is protecting.
				</note>
				<aactivity>
					<TSS>
						The evaluator shall ensure that the TSS documents that the selection of the key size is
						sufficient for the security strength of the key wrapped.<h:p/>
						The evaluator shall examine the TSS to ensure that it describes the construction of any IVs,
						nonces, and MACs in conformance with the relevant specifications.
					</TSS>
					<Guidance/>
					<Tests>
						For tests of AES-GCM and AES-CCM, see testing for FCS_COP.1/AEAD.<h:p/>
						The following tests are conditional based upon the selections made in the SFR. The evaluator
						shall perform the following test or witness respective tests executed by the developer. The tests
						must be executed on a platform that is as close as practically possible to the operational platform
						(but which may be instrumented in terms of, for example, use of a debug mode). Where the test
						is not carried out on the TOE itself, the test platform shall be identified and the differences
						between test environment and TOE execution environment shall be described.<h:p/>
						
						<!-- AES-KW -->
						<h:br/><h:b>AES-KW</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">AES-KW</h:td>
								<h:td valign="top">AES in KW mode</h:td>
								<h:td valign="top">256 bits</h:td>
								<h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2),
														FIPS PUB 197] [AES]<h:p/>
													[<h:b>selection:</h:b> ISO/IEC 19772:2020 (clause 6), 
														NIST SP 800-38F (Section 6.2)] [KW mode] </h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to wrap keys using AES in Key Wrap mode the evaluator shall perform
						the Algorithm Functional Tests using the following input parameters:<h:ul>
						<h:li>Key size [256] bits</h:li>
						<h:li>Keyword cipher type [cipher, inverse]</h:li>
						<h:li>Payload sizes [128-4096] bits by 64s</h:li></h:ul><h:p/>
						<h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
						The evaluator shall generate 100 encryption test cases using random data for each combination
						of claimed key size, keyword cipher type, and six supported payload sizes such that the payload
						sizes include the minimum, the maximum, two that are divisible by 128, and two that are not
						divisible by 128.<h:p/>
						The results shall be compared with those generated by a known-good implementation using the
						same inputs.<h:p/>
						The evaluator shall generate 100 decryption test cases using the same parameters as above, but
						with 20 of each 100 test cases having modified ciphertext to produce an incorrect result. To
						determine correctness, the evaluator shall confirm that the results correspond as expected for
						both the modified and unmodified values.<h:p/>

						<!-- AES-KWP -->
						<h:br/><h:b>AES-KWP</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">AES-KWP</h:td>
								<h:td valign="top">AES in KWP mode</h:td>
								<h:td valign="top">256 bits</h:td>
								<h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2),
														FIPS PUB 197] [AES]<h:p/>
													NIST SP 800-38F (Section 6.3) [KWP mode] </h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to wrap keys using AES in Key Wrap with Padding mode with padding
						the evaluator shall perform the Algorithm Functional Tests using the following input parameters:<h:ul>
						<h:li>Key size [256] bits</h:li>
						<h:li>Keyword cipher type [cipher, inverse]</h:li>
						<h:li>Payload sizes [8-4096] bits by 8s</h:li></h:ul><h:p/>
						<h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
						The evaluator shall generate 100 encryption test cases using random data for each combination
						of claimed key size, keyword cipher type, and six supported payload sizes such that the payload
						sizes include the minimum, the maximum, two that are divisible by 128, and two that are not
						divisible by 128.<h:p/>
						The results shall be compared with those generated by a known-good implementation using the
						same inputs.<h:p/>
						The evaluator shall generate 100 decryption test cases using the same parameters as above, but
						with 20 of each 100 test cases having modified ciphertext to produce an incorrect result. To
						determine correctness, the evaluator shall confirm that the results correspond as expected for
						both the modified and unmodified values.<h:p/>					
					</Tests>
				</aactivity>
			</f-element>
			<audit-event/>
		</f-component>
        
                <f-component cc-id="fcs_cop.1" iteration="SigGen" name="Cryptographic Operation -
                  Signature Generation">
          <f-element id="fel-sign-how">
            <title> The TSF shall perform [<h:i>digital signature generation</h:i>] in accordance with a specified 
              cryptographic algorithm 
              <selectables>
                <tabularize id="tab-fcs-cop-siggen-sels" title="Allowable choices for FCS_COP.1/SigGen">
                  <textcol>Identifier</textcol>
                  <reqtext></reqtext>
                  <selectcol>Cryptographic Algorithm</selectcol>
                  <reqtext>and cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic Key Sizes</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations in FCS_COP.1/SigGen.<h:p/></reqtext>
                </tabularize>
                
                <selectable id="sel-fcs-cop-siggen-rsa-pkcs">
                  <col>RSA-PKCS</col>
                  <col>RSASSA-PKCS1-v1_5</col>
                  <col>Modulus of size <selectables>
                    <selectable><h:i>3072</h:i></selectable>
                    <selectable><h:i>4096</h:i></selectable>
                    <selectable><h:i>6144</h:i></selectable>
                    <selectable><h:i>8192</h:i></selectable>
                  </selectables> bits, hash <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables></col>
                  <col>
                    RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
                    FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-cop-siggen-rsa-pss">
                  <col>RSA-PSS</col>
                  <col>RSASSA-PSS</col>
                  <col>Modulus of size <selectables>
                    <selectable><h:i>3072</h:i></selectable>
                    <selectable><h:i>4096</h:i></selectable>
                    <selectable><h:i>6144</h:i></selectable>
                    <selectable><h:i>8192</h:i></selectable>
                  </selectables> bits, hash <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables>, Salt Length (<h:i>sLen</h:i>)
                    such that <assignable><h:i>0 &#8804; <h:i>sLen</h:i> &#8804; <h:i>hLen</h:i> (Hash Output Length)</h:i></assignable>
                    and Mask Generation Function = MGF1</col>
                  <col>
                    RFC 8017 (Section 8.1) [PKCS#1 v2.2]<h:p/>
                    FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-cop-siggen-ecdsa">
                  <col>ECDSA</col>
                  <col>ECDSA</col> 
                  <col>Elliptic Curve <selectables>
                    <selectable><h:i>P-384</h:i></selectable>
                    <selectable><h:i>P-521</h:i></selectable>
                  </selectables>, per-message secret number generation <selectables>
                    <selectable><h:i>extra random bits</h:i></selectable>
                    <selectable><h:i>rejection sampling</h:i></selectable>
                    <selectable><h:i>deterministic</h:i></selectable>
                  </selectables> and hash function using <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables></col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 14888-3:2018 (Subclause 6.6)</h:i></selectable>
                    <selectable><h:i>FIPS PUB 186-5 (Sections 6.3.1, 6.4.1</h:i></selectable>
                  </selectables>[ECDSA]<h:p/>
                    NIST SP-800 186 (Section 4) [NIST Curves]
                  </col>
                </selectable>
       
                
                <!-- ML-DSA Signature Generation -->
                <selectable id="sel-fcs-cop-siggen-mldsa">
                  <col>ML-DSA</col>
                  <col>ML-DSA Signature Generation</col>
                  <col>Parameter set = ML-DSA-87</col>
                  <col>NIST FIPS 204 (Section 5.2)</col>
                </selectable>
                
              </selectables>
            </title>
            <note role="application"> The ST author should choose the algorithm implemented to
              perform digital signatures; if more than one algorithm is available, this requirement
              should be iterated to specify the functionality. For the algorithm chosen, the ST
              author should make the appropriate assignments and selections to specify the parameters
              that are implemented for that algorithm.
            </note>
       <aactivity>
	       <TSS>The evaluator shall examine the TSS and verify that any hash function is the appropriate security
						strength for the signing algorithm.<h:p/>
						The evaluator shall examine the TSS to verify that any one-time values such as nonces or masks
						are constructed and used in accordance with the relevant standards.<h:p/>
						The evaluator shall examine the TSS to verify that the TOE has appropriate measures in place to
						ensure that hash-based signature algorithms do not reuse private keys.</TSS>
					<Guidance/>
					<Tests>
						The following tests are conditional based on the selections made in the SFR. The evaluator
						shall perform the following tests or witness respective tests executed by the developer. The tests
						must be executed on a platform that is as close as practically possible to the operational platform
						(but which may be instrumented in terms of, for example, use of a debug mode). Where the test
						is not carried out on the TOE itself, the test platform shall be identified and the differences
						between test environment and TOE execution environment shall be described.<h:p/>
					
						<!-- RSA-PKCS Signature Generation   -->
						<h:br/><h:b>RSA-PKCS Signature Generation </h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">RSA-PKCS </h:td>
								<h:td valign="top">RSASSA-PKCS1-v1_5</h:td>
								<h:td valign="top">Modulus of size [<h:b>selection:</h:b> <h:i>3072, 4096, 6144, 8192</h:i>] bits,
									hash [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>]</h:td>
								<h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
													NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to perform RSA Digital Signature Generation using PKCS1-v1,5
						signature type, the evaluator shall perform the Generated Data Test using the following input
						parameters:<h:ul>
						<h:li>Modulus size [3072, 4096, 6144, 8192] bits</h:li>
						<h:li>Hash algorithm [SHA-384, SHA-512]</h:li></h:ul>
						<h:br/><h:b>Generated Data Test</h:b><h:p/>
						For each supported combination of the above parameters, the evaluator shall cause the TOE to
						generate three test cases using random data. The evaluator shall compare the results against those
						from a known good implementation.<h:p/>

						<!-- RSA-PSS Signature Generation    -->
						<h:br/><h:b>RSA-PSS Signature Generation </h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">RSA-PSS</h:td>
								<h:td valign="top">RSASSA-PSS</h:td>
								<h:td valign="top">Modulus of size [<h:b>selection:</h:b> <h:i>3072, 4096, 6144, 8192</h:i>] bits,
									hash [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>], Salt Length (<h:i>sLen</h:i>)
												such that [<h:b>assignment:</h:b> <h:i>0 &#8804; <h:i>sLen</h:i> &#8804; <h:i>hLen</h:i> (Hash Output Length)</h:i>]
												and Mask Generation Function = MGF1
												</h:td>
								<h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
													NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to perform RSA Digital Signature Generation using PSS signature type,
						the evaluator shall perform the Generated Data Test using the following input parameters:<h:ul>
						<h:li>Modulus size [3072, 4096, 6144, 8192] bits</h:li>
						<h:li>Hash algorithm [SHA-384, SHA-512]</h:li>
						<h:li>Salt length [Fixed based on implementation]</h:li>
						<h:li>Mask function [MGF1]</h:li></h:ul><h:p/>
						<h:br/><h:b>Generated Data Test</h:b><h:p/>
						For each supported combination of the above parameters, the evaluator shall cause the TOE to
						generate three test cases using random data. The evaluator shall compare the results against those
						from a known good implementation.<h:p/>

						<!-- ECDSA Signature Generation  -->
						<h:br/><h:b>ECDSA Signature Generation </h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ECDSA</h:td>
								<h:td valign="top">ECDSA</h:td>
								<h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> <h:i>P-384, P-521</h:i>], 
									per-message secret number generation
									[<h:b>selection:</h:b> <h:i>extra random bits, rejection sampling, deterministic</h:i>] 
									and hash function using [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>] </h:td>
								<h:td valign="top">[<h:b>selection:</h:b> <h:i>ISO/IEC 14888-3:2018 (Subclause 6.6),
									NIST FIPS PUB 186-5 (Sections 6.3.1, 6.4.1</h:i>] [ECDSA]<h:p/>
									NIST SP-800 186 (Section 4) [NIST Curves] </h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to perform ECDSA Digital Signature Generation using extra random
						bits or rejection sampling for secret number generation, the evaluator shall perform the
						Algorithm Functional Test using the following input parameters:<h:ul>
						<h:li>Elliptic Curve [P-384, P-521]</h:li>
						<h:li>Hash algorithm [SHA-384, SHA-512]</h:li></h:ul><h:p/>
						To test the TOE’s ability to perform ECDSA Digital Signature Generation using deterministic
						secret number generation, the evaluator shall perform the Algorithm Functional Test using the
						following input parameters:	<h:ul>
						<h:li>Elliptic Curve [P-384, P-521]</h:li>
						<h:li>Hash algorithm [SHA-384, SHA-512]</h:li></h:ul>
						<h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
						For each supported combination of the above parameters, the evaluator shall cause the TOE to
						generate 10 test cases using random data. The evaluator shall compare the results against those
						from a known good implementation.<h:p/>

						
						<!-- ML-DSA Signature Generation  -->
						<h:br/><h:b>ML-DSA Signature Generation</h:b><h:p/>
						<h:table border="1">
							<h:tr class="header" bgcolor="#cccccc">
								<h:td valign="top">Identifier</h:td>
								<h:td valign="top">Cryptographic Algorithm Parameters</h:td>
								<h:td valign="top">Cryptographic Key Sizes</h:td>
								<h:td valign="top">List of Standards</h:td>
							</h:tr>
							<h:tr>
								<h:td valign="top">ML-DSA</h:td>
								<h:td valign="top">ML-DSA SigGen</h:td>
								<h:td valign="top">Parameter set = ML-DSA-87</h:td>
								<h:td valign="top">NIST FIPS PUB 204 (Section 5.2)</h:td>
							</h:tr>
						</h:table><h:p/>	
						To test the TOE’s ability to generate digital signatures using ML-DSA, the
						evaluator shall perform the Algorithm Functional Test using the following input parameters:<h:ul>
						<h:li>Parameter set [ML-DSA-87]</h:li>
						<h:li>Seed [32 random bytes] (for non-deterministic signature testing), or</h:li>
						<h:li>Seed [32 zero bytes] (for deterministic signature testing)</h:li>
						<h:li>Message to sign [8-65535] bytes</h:li>
						<h:li><h:i>Mu</h:i> value (if generated externally)</h:li>
						<h:li>Previously generated private key (<h:i>sk</h:i>)</h:li>
						<h:li>Context (for external interface testing)</h:li></h:ul><h:p/>
						<h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
						For each combination of supported parameter set and capabilities, the evaluator shall require the
						implementation under test to generate 15 signatures pairs using 15 different randomly generated
						32-byte seed values. To determine correctness, the evaluator shall
						compare the resulting key pairs with those generated using a known good implementation using
						the same inputs.<h:p/>
						<h:br/><h:b>Known Answer Test for Rejection Cases</h:b><h:p/>
						For each supported parameter set, the evaluator shall cause the TOE to generate signatures using
						the data below and a deterministic seed of all 0’s. Correctness is determined by
						comparing the hash of the resulting signature with the hash in the fourth row 
						for each corresponding test case below.<h:p/>
						The test values are defined as follows:<h:ul>
						<h:li><h:i>Seed</h:i> is the seed to generate the key pair (<h:i>pk, sk</h:i>)</h:li>
						<h:li><h:i>Hash of keys</h:i> is computed by SHA-256(<h:i>pk</h:i>||<h:i>sk</h:i>)</h:li>
						<h:li><h:i>Message</h:i> is the message to be signed</h:li>
						<h:li><h:i>Hash of sig</h:i> is computed by SHA-256(<h:i>sig</h:i>)</h:li></h:ul><h:p/>
						<h:p/><h:b>ML-DSA-87 Test Cases for Rejection Cases</h:b><h:p/>
						<h:pre>
		Test case 87-RC-01
		Seed: 			E4F5AFCF697E0EC3C1BDEB66FAA903221E803902F9C3F716E1056A63D77DC250
		Hash of Keys: 	61618E8DDA6998072C8EB36974E03880D741CAF0BD523356DFC161E7C9E63934
		Message: 		F4F1C05004D5B946F69EAFE104C4020519086ADDB9582A20FDE887D13DFC36B1
		Hash of sig: 	B584E38FA442FC3C81A147D4BDBF058D73C822CAF5CA4C06B0110867F60A8001
						
		Test case 87-RC-02
		Seed: 			8B828D871254D6C57384A8E7025AA3F7160CAD1D2C754499DF3844426062C3DD
		Hash of Keys: 	BB64481317D6C0DBAD20C0C7EF11078AD54E5D574F4A07652115A95F77C655FA
		Message: 		0F9409C5A4930C25B83FC5B77FDB5BB49C75372DE724D9C1A77DB700CF0CF154
		Hash of sig: 	F86B49BE9DEB2B209BDEB4E922E5939E92D38E562C44BB09AFBD67323C345192
						
		Test case 87-RC-03
		Seed: 			E693D282CACB8CE65FD4D108DA7A373F097F0AA9713550BE242AAD5BD3E2E452
		Hash of Keys: 	B0BEAF56713A69BD4AB2CBEE006FA5001E7B41F3AE541E05F088933AA0CC78DF
		Message: 		24DABB9D57ADEBD560ED65D9451C5106D437061708F849BA53F3543CDF9AAAE0
		Hash of sig: 	DBF65CEFF9F96A74AAF6F3AB27B043231BE6AA04FBA2EEC987A24A00BDD6A08E
						
		Test case 87-RC-04
		Seed: 			4002163EB8EED01A8E0919BA8C07D291341EDCAE25B02B9779A2CFFE50561AF0
		Hash of Keys: 	FED1BE685C20ECB322FC40D41DEE7E0E98D0409FBF989CAE71B8AD2D58AD645E
		Message: 		EE316BB5EBED53325B4A55571C60657B53E353B51B831F4A0BBB28107EBA4BA8
		Hash of sig: 	3BE9B5545FDCED92547B3409C83B3312CCB5792A8EC3A4DA63BA692C79BEF17C
						
		Test case 87-RC-05
		Seed: 			9C7AD524F65854C27E565BCEDF8E86D650F13A40D0448F9AE10C05F10F777120
		Hash of Keys: 	0EA872CA5A4BEA94F4E8EF7ED31800727899A51059FDEE111E5CB15F0233B534
		Message: 		CE09831294AA96CAF684B9E667947B021C57B24C138EC7D4DA270694C82F2E08
		Hash of sig: 	3B9526CEE6587F2418BFE603ADB0F7DF0D69EBA31C9F9F005C60C993945EBD33
						
		Test case 87-RC-06
		Seed: 			2EB7676D4A28700DA7772A7A035EB495CAA6F842352A74824EF5FD891BC38B2A
		Hash of Keys: 	D5B73703A1DDC5BCB0D14AE39B193A25D6ADA6535827973181ADB0BE70435A5B
		Message: 		C2B3A0AC483A5517682285C205974B2A506946448A8F7D3E1934C155EFDFE922
		Hash of sig: 	375D598704B722C8A1FEF1626FD7738A532C06329AA4217357460E3B729660F8
						
		Test case 87-RC-07
		Seed: 			E4E80CCE8B26DF1B02B99949851EE2F907FE4F0CC34790352C76D5D91634D073
		Hash of Keys: 	84B7E61684A12698400B09EA332EA3C4FBCFA47FE37FD6AE725CBC5FA8A99D3F
		Message: 		89E6AB43C9CB1CC59C3986D53217A558357E62102A26F666F2B64CD1DBB7A536
		Hash of sig: 	7C4AABD163CAEF8F6EBFDA3E3EEBC0A9604675B0E991ABAFD284F1AE8BA07B2A
						
		Test case 87-RC-08
		Seed: 			5787262B803499223D4E5A8C1EE572E89F7A69B359B3F8505355B0BDEAB95E5C
		Hash of Keys: 	85AE1DE605A7B479C02730BF4B7DD6D0FD8FFE5C980893CA6DAD00BD8BD1CE68
		Message: 		D3230C4E061964BBFB17702432D5D36FC1EB3D1068F8CCAA84044776E3B5CC55
		Hash of sig: 	D3ABE460EE2DD9595F413CFE2780A319E4E4DFD6592995298A7AB0B82A5E2815
						
		Test case 87-RC-09
		Seed: 			CE099B99330537DD153052243FC32ACAD509A126AB982410258858567D410D79
		Hash of Keys: 	E04A9F15EDF8F078EB336CE624249EF2A8EDF2CDBF6A8276E9F5E92ED9B0BAE8
		Message: 		0035931762665F561A1B22176567E3B10FDE2441521F77030733A8E39312EEEE
		Hash of sig: 	3EEF413CB5EB179896ECA172D0DBFB9B251545DC561D61580BD5BBC8B6D734E1

		Test case 87-RC-10
		Seed: 			FC8F2929878CBD81E1CCC23913F290380120C043A4A8A251AEEBF09705B8E590
		Hash of Keys: 	7E2ECCA86F532E8E8092FEBB6E0007F92E7909AD2BCBE2E02AB375DAC9969E5E
		Message: 		D3C28875D2671C0EF23BFDC8869E8ECF8868D3F0561C3134D254F7479D0CE0E5
		Hash of sig: 	EB69A908EDCC04320A0B61AD57E21B044465F2037698636B64229CF2DB259789
						</h:pre>
						
						<h:br/><h:b>Known Answer Test for Large Number of Rejection Cases (Total Rejection Count)</h:b><h:p/>
						For each supported parameter set, the evaluator shall cause the TOE to generate signatures using
						the data below and a deterministic seed of all 0’s. Correctness is determined by
						comparing the hash of the resulting signature with the hash in the fourth row
						of the corresponding test case below.<h:p/>
						<h:p/><h:b>ML-DSA-87 Test Cases for Total Rejection Count</h:b><h:p/>
						<h:pre>
		Test case 87-LN-01
		Seed: 			98B6298051D92BF37293C93C97370747BF527B87B71F6C4264182F45155ADE4C
		Hash of Keys: 	04A135B5C9B7020332C7B16E7108E8FF7FC1EAE1C23C5FA0B5D5CED0FEEE7424
		Message: 		D7B0341269259083ABF3C8DC47559A19D57669B4486E0224F376DC43E577A3D8
		Hash of sig: 	58D72D76EC0FB65BFB9893C4479366B79DD7B8B7577E4291D13514FCC76C26DD

		Test case 87-LN-02
		Seed: 			DFB5BDD90F58571DCA962426C623F13D046BBE814D183886AC90D143EAD725A7
		Hash of Keys: 	2B6AB8CFCCCC41F759CAF01932E9413F5DC6D949BC827F739866929683FB155E
		Message: 		21005DB2B583CC826A9684BFFD0EE00AB97E0479FE4A1D266699337540145778
		Hash of sig: 	C93EA34E00FFFFC3ECEA072D5FB038A83B5539CAF7B831AEDCFA785E50B3CA5E

		Test case 87-LN-03
		Seed: 			5AD414E0DD0EF2FE685F342871875FDF06F503717A86C3B3466565ADD2096417
		Hash of Keys: 	BD9C2D52F3FC78DB17E682DA2E78947ECFC0898333838D60C892700B2B0DDA9F
		Message: 		29139C279816B25F2D6BB52C8247D163544F7BA332C3CF63359B9E23FBC56515
		Hash of sig:	DB4BE2DE19FB40437BDB7E9B6578D665DB05B4E88C16907DF4546EBA9BE03AEA

		Test case 87-LN-04
		Seed: 			484DD2F406A4D15F49A91AD5FC3BDC1D0FF253622EB68F83D6E1C870D0E89E29
		Hash of Keys: 	A719DC9A77C91C46295555C2353BA0CBEA513DA9A92A5C34D2E949EFF46A12D8
		Message: 		6AD6E959F0EA60126364FB7C95FA71133F246A9265A11B4965EE78AB0CB5AF0E
		Hash of sig: 	5050D7A665074EC63D9F3966C1F01A1BFB18F9E83AE0B09F838BC1E2342ED6F4

		Test case 87-LN-05
		Seed: 			B25C1816F82D59940D5CB829BAC364AAD013C4C16415CE1CF6DCC2F15199B391
		Hash of Keys: 	ADBB2CD43F222640BD9FF4E61C80E63853E8DC1F759C581B7447C9C166EAA38E
		Message: 		824E47322895BFFE37B6B4AFC41CF6115C07EEC0C24EB81076C87A1B01AE8617
		Hash of sig: 	667ADA46073BC69D64DC47BB9A76DD0D78302E7415D87D5E816B05FB95F9E84D

		Test case 87-LN-06
		Seed: 			B2CE72B3560AF07E06465881F56ADA00262BA708D87B73F39E04E310F3B8A3E9
		Hash of Keys: 	FD9C4AC53AE803242A62DF933B8E8BAD6CE5207AC4A73683B6D9383B5E70B17A
		Message: 		A1501CC84C917E0D2D7C27C2AC382220BD8FFFE807DB38E37A9E429EC2781911
		Hash of sig: 	779553B195E11558EE59EF3942F5F6B446A2144600D1F4F50B300C6C56504760

		Test case 87-LN-07
		Seed: 			AB01D0E591B7DDCD3C03395AED808FA2763C0A486D44119D621BE0FD0B022B25
		Hash of Keys: 	93B6ADE34F78A4ADB36B2F6D2C51DB793E659E1243E80488AE1C03B65125D6D7
		Message: 		8DE8122D89D15FE84A4C34F6B59B2C4B11F33B6A053154D199B634F557FDF5F6
		Hash of sig: 	0483045999A79B583F403DB96A736F0F0B24E2DFBC4E5CFA9B50E3D910786F07

		Test case 87-LN-08
		Seed: 			15D60D3693762F82C9AC1DCB0576936651AC81D863842EDB91109C8EE83AE705
		Hash of Keys: 	2DF544E2E939AA717741C2437288FAEB308DEB8FF37A2652FAE34BAE8B84D779
		Message: 		F05946A6113905C34163AEF2246FD69016CE24A7BA40F8E7E42EDAC2D0A44605
		Hash of sig: 	F8383917AF79C8E540D2356AB05F08B465BF32DFEC444B787CE31BF48CC6C3DD

		Test case 87-LN-09
		Seed: 			21212285BED53B3411705DAF5F3BDDB6F0618EB571B36EE11A74053407A269F5
		Hash of Keys: 	737061155A9A03F11F9FEBBB940BED4DD54542C4A6212F89A5EB4EC2BE542782
		Message: 		FFE38246BF3DEFD9CAD15CC17CEA511C067D582E04227B479E32F9197CF91482
		Hash of sig: 	C4C12C58032052FB2D21F0C6A7388A63154FB85B74287D2859DE6C1C6F7F277B

		Test case 87-LN-10
		Seed: 			A2744470587C71BA43EC26DC390CE3531978F315993C653E5D3EFD2849D5D9F1
		Hash of Keys: 	B1BF37BFFB11531B6ADD697870D7DB2E2462D0A97A63F09C1D0038457C6D795A
		Message: 		9831A830231A160B9847203341A5F30BF3E87A2A482AEEA6886315C92B5C4E4C
		Hash of sig: 	46C669D2FEB643A38E54FF87B790CC33F44043A1B6B31DB9474D301328CA2A7F
						</h:pre>
						
												
					</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_cop.1" iteration="SigVer" name="Cryptographic Operation - Signature Verification">
          <f-element id="fel-sign-how">
            <title> 
              The TSF shall perform [<h:i>digital signature verification</h:i>] in accordance with a specified 
              cryptographic algorithm  
              <selectables>
                <tabularize id="tab-fcs-cop-sigver-sels" title="Allowable choices for FCS_COP.1/SigVer">
                  <textcol>Identifier</textcol>
                  <reqtext></reqtext>
                  <selectcol>Cryptographic Algorithm</selectcol>
                  <reqtext>and cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic Key Sizes</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations in FCS_COP.1/SigVer.<h:p/></reqtext>
                </tabularize>
                
                <selectable id="sel-fcs-cop-sigver-rsa-pkcs">
                  <col>RSA-PKCS</col>
                  <col>RSASSA-PKCS1-v1_5</col>
                  <col>Modulus of size <selectables>
                    <selectable><h:i>3072</h:i></selectable>
                    <selectable><h:i>4096</h:i></selectable>
                    <selectable><h:i>6144</h:i></selectable>
                    <selectable><h:i>8192</h:i></selectable>
                  </selectables> bits and hash <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables></col>
                  <col>
                    RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
                    FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]
                  </col>
                </selectable>
                
                <selectable id="sel-fcs-cop-sigver-rsa-pss">
                  <col>RSA-PSS</col>
                  <col>RSASSA-PSS</col>
                  <col>Modulus of size <selectables>
                    <selectable><h:i>3072</h:i></selectable>
                    <selectable><h:i>4096</h:i></selectable>
                    <selectable><h:i>6144</h:i></selectable>
                    <selectable><h:i>8192</h:i></selectable>
                  </selectables> bits and hash <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables></col>
                  <col>
                    RFC 8017 (Section 8.1) [PKCS#1 v2.2]<h:p/>
                    FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]
                  </col>
                </selectable>
              
                
                <selectable id="sel-fcs-cop-sigver-ecdsa">
                  <col>ECDSA</col>
                  <col>ECDSA</col> 
                  <col>Elliptic Curve <selectables>
                    <selectable><h:i>P-384</h:i></selectable>
                    <selectable><h:i>P-521</h:i></selectable>
                  </selectables> using hash <selectables>
                    <selectable><h:i>SHA-384</h:i></selectable>
                    <selectable><h:i>SHA-512</h:i></selectable>
                  </selectables></col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 14888-3:2018 (Subclause 6.6)</h:i></selectable>
                    <selectable><h:i>FIPS PUB 186-5 (Section 6.4.2)</h:i></selectable>
                  </selectables>[ECDSA]<h:p/>
                    NIST SP-800 186 (Section 4) [NIST Curves]
                  </col>
                </selectable>
                
                <!-- LMS -->
                <selectable id="sel-fcs-cop-sigver-lms">
                  <col>LMS</col>
                  <col>LMS</col>
                  <col>Private key size = <selectables>
                    <selectable><h:i>192 bits with </h:i><selectables>
                      <selectable><h:i>SHA-256/192</h:i></selectable>
                      <selectable><h:i>SHAKE256/192</h:i></selectable>
                    </selectables></selectable>
                    <selectable><h:i>256 bits with </h:i><selectables>
                      <selectable><h:i>SHA-256</h:i></selectable>
                      <selectable><h:i>SHAKE256</h:i></selectable>
                    </selectables></selectable>
                  </selectables><h:p/>
                    Winternitz parameter = <selectables>
                      <selectable><h:i>1</h:i></selectable>
                      <selectable><h:i>2</h:i></selectable>
                      <selectable><h:i>4</h:i></selectable>
                      <selectable><h:i>8</h:i></selectable></selectables><h:p/>
                    Tree height = <selectables>
                      <selectable><h:i>5</h:i></selectable>
                      <selectable><h:i>10</h:i></selectable>
                      <selectable><h:i>15</h:i></selectable>
                      <selectable><h:i>20</h:i></selectable>
                      <selectable><h:i>25</h:i></selectable></selectables>
                  </col>
                  <col>RFC 8554 [LMS]<h:p/>
                    NIST SP 800-208 [parameters]
                  </col>
                </selectable>
                
                <!-- XMSS -->
                <selectable id="sel-fcs-cop-sigver-xmss">
                  <col>XMSS</col>
                  <col>XMSS</col>
                  <col>Private key size = <selectables>
                    <selectable><h:i>192 bits with </h:i><selectables>
                      <selectable><h:i>SHA-256/192</h:i></selectable>
                      <selectable><h:i>SHAKE256/192</h:i></selectable>
                    </selectables></selectable>
                    <selectable><h:i>256 bits with </h:i><selectables>
                      <selectable><h:i>SHA-256</h:i></selectable>
                      <selectable><h:i>SHAKE256</h:i></selectable>
                    </selectables></selectable>
                  </selectables><h:p/>
                    Tree height = <selectables>
                      <selectable><h:i>10</h:i></selectable>
                      <selectable><h:i>16</h:i></selectable>
                      <selectable><h:i>20</h:i></selectable>
                    </selectables>
                  </col>
                  <col>RFC 8391 [XMSS]<h:p/>
                    NIST SP 800-208 [parameters]
                  </col>
                </selectable>
                
                <!-- ML-DSA Signature Verification -->
                <selectable id="sel-fcs-cop-sigver-mldsa">
                  <col>ML-DSA</col>
                  <col>ML-DSA Signature Verification</col>
                  <col>Parameter set = ML-DSA-87</col>
                  <col>NIST FIPS 204 (Section 5.3)</col>
                </selectable>
                
                
              </selectables>
            </title>
            <note role="application"> The ST author should choose the algorithm implemented to
              perform digital signatures; if more than one algorithm is available, this requirement
              should be iterated to specify the functionality. For the algorithm chosen, the ST
              author should make the appropriate assignments and selections to specify the parameters
              that are implemented for that algorithm.
            </note>
       <aactivity>
         <TSS>
           The evaluator shall examine the TSS to verify that any one-time values such as nonces or masks
           are constructed and used in accordance with the relevant standards.
         </TSS>
         <Guidance/>
         <Tests>
           The following tests are conditional based on the selections made in the SFR. The evaluator
           shall perform the following tests or witness respective tests executed by the developer. The tests
           must be executed on a platform that is as close as practically possible to the operational platform
           (but which may be instrumented in terms of, for example, use of a debug mode). Where the test
           is not carried out on the TOE itself, the test platform shall be identified and the differences
           between test environment and TOE execution environment shall be described.<h:p/>
           
           <!-- RSA-PKCS Signature Verification   -->
           <h:br/><h:b>RSA-PKCS Signature Verification</h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">RSA-PKCS </h:td>
               <h:td valign="top">RSASSA-PKCS1-v1_5</h:td>
               <h:td valign="top">Modulus of size [<h:b>selection:</h:b> <h:i>3072, 4096, 6144, 8192</h:i>] bits,
                 hash [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>]</h:td>
               <h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
                 NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</h:td>
             </h:tr>
           </h:table><h:p/>	
           To test the TOE’s ability to perform RSA Digital Signature Verification using PKCS1-v1,5
           signature type, the evaluator shall perform Generated Data Test using the following input
           parameters:<h:ul>
             <h:li>Modulus size [3072, 4096, 6144, 8192] bits</h:li>
             <h:li>Hash algorithm [SHA-384, SHA-512]</h:li></h:ul><h:p/>
           <h:br/><h:b>Generated Data Test</h:b><h:p/>
           For each supported combination of the above parameters, the evaluator shall cause the TOE to
           generate six test cases using a random message and its signature such that the test cases are
           modified as follows:<h:p/><h:ul>
             <h:li>One test case is left unmodified</h:li>
             <h:li>For one test case the Message is modified</h:li>
             <h:li>For one test case the Signature is modified</h:li>
             <h:li>For one test case the exponent (<h:i>e</h:i>) is modified</h:li>
             <h:li>For one test case the IR is moved</h:li>
             <h:li>For one test case the Trailer is moved</h:li></h:ul><h:p/>
           The TOE must correctly verify the unmodified signatures and fail to verify the modified
           signatures.<h:p/>
           
           <!-- RSA-PSS Signature Verification    -->
           <h:br/><h:b>RSA-PSS Signature Verification </h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">RSA-PSS</h:td>
               <h:td valign="top">RSASSA-PSS</h:td>
               <h:td valign="top">Modulus of size [<h:b>selection:</h:b> <h:i>3072, 4096, 6144, 8192</h:i>] bits,
                 hash [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>]</h:td>
               <h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/>
                 NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</h:td>
             </h:tr>
           </h:table><h:p/>	
           To test the TOE’s ability to perform RSA Digital Signature Verification using PSS signature
           type, the evaluator shall perform the Generated Data Test using the following input parameters:<h:ul>
             <h:li>Modulus size [3072, 4096, 6144, 8192] bits</h:li>
             <h:li>Hash algorithm [SHA-384, SHA-512]</h:li>
             <h:li>Salt length [0-hash length]</h:li>
             <h:li>Mask function [MGF1]</h:li></h:ul><h:p/>
           <h:br/><h:b>Generated Data Test</h:b><h:p/>
           For each supported combination of the above parameters, the evaluator shall cause the TOE to
           generate six test cases using random data such that the test cases are modified as follows:<h:p/><h:ul>
             <h:li>One test case is left unmodified</h:li>
             <h:li>For one test case the Message is modified</h:li>
             <h:li>For one test case the Signature is modified</h:li>
             <h:li>For one test case the exponent (<h:i>e</h:i>) is modified</h:li>
             <h:li>For one test case the IR is moved</h:li>
             <h:li>For one test case the Trailer is moved</h:li></h:ul><h:p/>
           The TOE must correctly verify the unmodified signatures and fail to verify the modified
           signatures.<h:p/>
           
           
           <!-- ECDSA Signature Verification  -->
           <h:br/><h:b>ECDSA Signature Verification </h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">ECDSA</h:td>
               <h:td valign="top">ECDSA</h:td>
               <h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> <h:i>P-384, P-521</h:i>] and hash function using 
                 [<h:b>selection:</h:b> <h:i>SHA-384, SHA-512</h:i>] </h:td>
               <h:td valign="top">[<h:b>selection:</h:b> <h:i>ISO/IEC 14888-3:2018 (Subclause 6.6),
                 NIST FIPS PUB 186-5 (Sections 6.3.1, 6.4.1</h:i>] [ECDSA]<h:p/>
                 NIST SP-800 186 (Section 4) [NIST Curves] </h:td>
             </h:tr>
           </h:table><h:p/>	
           To test the TOE’s ability to perform ECDSA Digital Signature Verification, the evaluator shall
           perform the Algorithm Functional Test using the following input parameters:<h:ul>
             <h:li>Elliptic Curve [P-384, P-521]</h:li>
             <h:li>Hash algorithm [SHA-384, SHA-512]</h:li></h:ul><h:p/>
           <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
           For each supported combination of the above parameters, the evaluator shall cause the TOE to
           generate test cases consisting of messages and signatures such that the 21 test cases are
           modified as follows:<h:p/><h:ul>
             <h:li>Three test cases are left unmodified</h:li>
             <h:li>For three test cases the Message is modified</h:li>
             <h:li>For three test cases the key is modified</h:li>
             <h:li>For three test cases the <h:i>r</h:i> value is modified</h:li>
             <h:li>For three test cases the <h:i>s</h:i> value is modified</h:li>
             <h:li>For three test cases the value <h:i>r</h:i> is zeroed</h:li>
             <h:li>For three test cases the value <h:i>s</h:i> is zeroed</h:li></h:ul><h:p/>
           The TOE must correctly verify the unmodified signatures and fail to verify the modified
           signatures.<h:p/>
           
           <!-- LMS signature Verification  -->
           <h:br/><h:b>LMS Signature Verification </h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">LMS</h:td>
               <h:td valign="top">LMS</h:td>
               <h:td valign="top">Private key size = [<h:b>selection:</h:b>
                 <h:i>192 bits with [<h:b>selection:</h:b> SHA256/192, SHAKE256/192], 
                 256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]</h:i>], 
                 Winternitz parameter = [<h:b>selection:</h:b> <h:i>1, 2, 4, 8</h:i>], 
                 and tree height = [<h:b>selection:</h:b> <h:i>5, 10, 15, 20, 25</h:i>] </h:td>
               <h:td valign="top">RFC 8554 [LMS]<h:p/>
                 NIST SP 800-208 [parameters] </h:td>
             </h:tr>
           </h:table><h:p/>	
           To test the TOE’s ability to verify cryptographic digital signature using LMS, the
           evaluator shall perform the Algorithm Functional Test using the following input parameters:<h:ul>					
             <h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li>
             <h:li>Winternitz [1, 2, 4, 8]</h:li>
             <h:li>Tree height [5, 10, 15, 20, 25]</h:li></h:ul><h:p/>
           <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
           For each supported combination of the above parameters, the evaluator shall generate four test cases
           consisting of signed messages and keys, such that<h:ul>
             <h:li>One test case is unmodified (i.e. correct)</h:li>
             <h:li>For one test case modify the message, i.e. the message is different</h:li>
             <h:li>For one test case modify the signature, i.e. signature is different</h:li>
             <h:li>For one test case modify the signature header so that it is a valid header for a different
               LMS parameter set.</h:li></h:ul><h:p/>
           The TOE must correctly verify the unmodified test case and fail to verify the modified test cases.<h:p/>
           
           <!-- XMSS Signature Verification  -->
           <h:br/><h:b>XMSS Signature Verification</h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">XMSS</h:td>
               <h:td valign="top">XMSS</h:td>
               <h:td valign="top">Private key size = [<h:b>selection:</h:b>
                 <h:i>192 bits with [<h:b>selection:</h:b> SHA256/192, SHAKE256/192], 
                   256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]</h:i>], 
                 and tree height = [<h:b>selection:</h:b> <h:i>10, 16, 20</h:i>] </h:td>
               <h:td valign="top">RFC 8391 [XMSS] <h:p/>
                 NIST SP 800-208 [parameters]</h:td>
             </h:tr>
           </h:table><h:p/>	
           To test the TOE’s ability to verify digital signatures using XMSS or XMSS MT, the evaluator shall
           perform the XMSS digital signature verification test using the following input parameters:<h:ul>
             <h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li>
             <h:li>Tree height [10, 16, 20]</h:li></h:ul><h:p/>
           <h:br/><h:b>XMSS Digital Signature Verification Test</h:b><h:p/>
           For each supported combination of the above parameters, the evaluator shall generate four test
           cases consisting of signed messages and keys, such that<h:ul>
             <h:li>One test case is unmodified (i.e. correct)</h:li>
             <h:li>For one test case modify the message, i.e. the message is different</h:li>
             <h:li>For one test case modify the signature, i.e. signature is different</h:li>
             <h:li>For one test case modify the signature header so that it is a valid header 
               for a different XMSS parameter set</h:li></h:ul><h:p/>
           The evaluator shall verify the correctness of the implementation by verifying that the TOE
           correctly verifies the unmodified test case and fails to verify the modified test cases.<h:p/>	
           
           <!-- ML-DSA Signature Verification  -->
           <h:br/><h:b>ML-DSA Signature Verification</h:b><h:p/>
           <h:table border="1">
             <h:tr class="header" bgcolor="#cccccc">
               <h:td valign="top">Identifier</h:td>
               <h:td valign="top">Cryptographic Algorithm Parameters</h:td>
               <h:td valign="top">Cryptographic Key Sizes</h:td>
               <h:td valign="top">List of Standards</h:td>
             </h:tr>
             <h:tr>
               <h:td valign="top">ML-DSA</h:td>
               <h:td valign="top">ML-DSA SigVer</h:td>
               <h:td valign="top">Parameter set = ML-DSA-87</h:td>
               <h:td valign="top">NIST FIPS PUB 204 (Section 5.2)</h:td>
             </h:tr>
           </h:table><h:p/>				
           To test the TOE’s ability to validate digital signatures using ML-DSA, the
           evaluator shall perform the Algorithm Functional Test using the following input parameters:<h:ul>
             <h:li>Parameter set [ML-DSA-87]</h:li>
             <h:li>Previously generated signed Message [8-65535] bytes</h:li>
             <h:li><h:i>Mu</h:i> value (if generated externally)</h:li>
             <h:li>Context (for external interface testing)</h:li>
             <h:li>Previously generated public key (<h:i>pk</h:i>)</h:li>
             <h:li>Previously generated Signature</h:li></h:ul><h:p/>
           <h:br/><h:b>Algorithm Functional Test</h:b><h:p/>
           For each combination of supported parameter set and capabilities, the evaluator shall require the
           implementation under test to validate 15 signatures. Each group of 15 test
           cases is modified as follows:<h:ul>
             <h:li>Three test cases are left unmodified</h:li>
             <h:li>For three test cases the Signed message is modified</h:li>
             <h:li>For three test cases the component of the signature that commits the signer to the message is
               modified</h:li>
             <h:li>For three test cases the component of the signature that allows the verifier to construct the vector z is
               modified</h:li>
             <h:li>For three test cases the component of the signature that allows the verifier to construct the hint array
               is modified</h:li></h:ul><h:p/>
           The TOE must correctly verify the unmodified signatures and fail to verify the modified
           signatures.
         </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_cop.1" iteration="SKC" name="Cryptographic Operation - Encryption/Decryption">
          <f-element id="fel-encrypt-how">
            <title>
              The TSF shall perform [<h:i>symmetric-key encryption and decryption</h:i>] in accordance with a 
              specified cryptographic algorithm   
              <selectables>
                <tabularize id="fcs-cop-skc-sels" title="Allowable choices for FCS_COP.1/SKC">
                  <textcol>Identifier</textcol>
                  <reqtext></reqtext>
                  <selectcol>Cryptographic Algorithm</selectcol>
                  <reqtext>and cryptographic key sizes</reqtext>
                  <selectcol>Cryptographic Key Sizes</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations in FCS_COP.1/SKC.</reqtext>							
                </tabularize>
                
                <!-- AES-CBC -->
                <selectable id="sel-fcs-cop-skc-aes-cbc">
                  <col>AES-CBC</col>
                  <col>AES in CBC mode with non-repeating and unpredictable IVs</col>
                  <col>256 bits</col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 18033-3:2010 (Subclause 5.2)</h:i></selectable> 
                    <selectable><h:i>FIPS PUB 197</h:i></selectable></selectables> [AES]<h:p/><selectables>
                      <selectable><h:i>ISO/IEC 10116:2017 (Clause 7)</h:i></selectable> 
                      <selectable><h:i>NIST SP 800-38A</h:i></selectable></selectables> [CBC]
                  </col>
                </selectable>
                
                <!-- XTS-AES -->
                <selectable id="sel-fcs-cop-skc-aes-xts">
                  <col>XTS-AES</col>
                  <col>AES in XTS mode with unique tweak values that are consecutive non-negative 
                    integers starting at an arbitrary non-negative integer</col>
                  <col>512 bits</col>
                  <col><selectables>
                    <selectable><h:i>ISO/IEC 18033-3:2010 (Subclause 5.2)</h:i></selectable> 
                    <selectable><h:i>FIPS PUB 197</h:i></selectable></selectables> [AES]<h:p/><selectables>
                      <selectable>IEEE Std. 1619-2018</selectable> 
                      <selectable>NIST SP 800-38E</selectable></selectables> [XTS]
                  </col>
                </selectable>
                
                <!-- AES-CTR -->
                <selectable id="sel-fcs-cop-skc-aes-ctr">
                  <col>AES-CTR</col>
                  <col>AES in Counter Mode with a non-repeating initial counter and with no repeated
                    use of counter values across multiple messages with the same secret key</col>
                  <col>256 bits</col>
                  <col><selectables>
                    <selectable>ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable> 
                    <selectable>FIPS PUB 197</selectable></selectables> [AES]<h:p/><selectables>
                      <selectable>ISO/IEC 10116:2017 (Clause 10)</selectable> 
                      <selectable>NIST SP 800-38A</selectable></selectables> [CBC]
                  </col>
                </selectable>
        
              </selectables>
            </title>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to ensure that it describes the construction of any IVs,
                tweak values, and counters in conformance with the relevant specifications.<h:p/>
                If XTS-AES is claimed then the evaluator shall examine the TSS to verify that the TOE creates
                full-length keys by methods that ensure that the two key halves are different and independent.
              </TSS>
              <Guidance/>
              <Tests>
                The following tests require the developer to provide access to a test platform that
                provides the evaluator with tools that are typically not found on factory products.<h:p/>
                The following tests are conditional based on the selections made in the SFR. The
                evaluator shall perform the following tests or witness respective tests executed by
                the developer. The tests must be executed on a platform that is as close as practically
                possible to the operational platform (but which may be instrumented in terms of,
                for example, use of a debug mode). Where the test is not carried out on the TOE
                itself, the test platform shall be identified and the differences between test
                environment and TOE execution environment shall be described.
                
                <!-- AES-CBC -->
                <h:br/><h:b>AES-CBC</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">AES-CBC</h:td>
                    <h:td valign="top">AES in CBC mode with non-repeating and unpredictable IVs</h:td>
                    <h:td valign="top">256 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 18033-3:2010 (Subclause 5.2),
                      FIPS PUB 197</h:i>] [AES]<h:p/>
                      [<h:b>selection:</h:b>  <h:i>ISO/IEC 10116:2017 (Clause 7), 
                      NIST SP 800-38A</h:i>] [CBC]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                
                To test the TOE’s ability to encrypt and decrypt data using AES in CBC mode, the evaluator 
                shall perform Algorithm Functional Tests and Monte Carlo Tests using the following
                input parameters:<h:ul>
                  <h:li>Key size [256] bits</h:li>
                  <h:li>Direction [encryption, decryption]</h:li></h:ul><h:p/>
                <h:br/><h:b>Algorithm Functional Tests</h:b><h:p/>
                Algorithm Functional Tests are designed to verify the correct operation of the logical
                components of the algorithm implementation under normal operation using different block sizes.
                For AES-CBC, there are two types of AFTs:<h:p/>
                <h:br/><h:b><h:i>Known-Answer Tests</h:i></h:b><h:p/>
                For each combination of direction and claimed key size, the TOE must be tested using the
                GFSBox, KeySbox, VarTxt, and VarKey test cases listed in Appendixes B through E of <h:i>The
                  Advanced Encryption Standard Algorithm Validation Suite (AESAVS)</h:i>, NIST, 15 November 2002.<h:p/>
                <h:br/><h:b><h:i>Multi-Block Message Tests</h:i></h:b><h:p/>
                For each combination of direction and claimed key size, the TOE must be tested against 10 test
                cases consisting of a random IV, random key, and random plaintext or ciphertext. The
                plaintext or ciphertext starts with a length of 16 bytes and increases by 16 bytes for each test case
                until reaching 160 bytes.<h:p/>
                <h:br/><h:b><h:i>Monte Carlo Tests</h:i></h:b><h:p/>
                Monte Carlo tests are intended to test the implementation under strenuous conditions. The TOE
                must process the test cases according to the following algorithm once for each combination of
                direction and key size:<h:p/>
                <h:pre>
                  Key[0] = Key
                  IV[0] = IV
                  PT[0] = PT
                  for i = 0 to 99 {
                  Output Key[i], IV[i], PT[0]
                  for j = 0 to 999 {
                  if (j == 0) {
                  CT[j] = AES-CBC-Encrypt(Key[i], IV[i], PT[j])
                  PT[j+1] = IV[i]
                  } else {
                  CT[j] = AES-CBC-Encrypt(Key[i], PT[j])
                  PT[j+1] = CT[j-1]
                  }
                  }
                  Output CT[j]
                  AES_KEY_SHUFFLE(Key, CT)
                  IV[i+1] = CT[j]
                  PT[0] = CT[j-1]
                  }
                </h:pre><h:p/>	
                where <h:pre>AES_KEY_SHUFFLE</h:pre> is defined as: <h:p/>
                <h:pre>
                  If ( keylen = 128 )
                  Key[i+1] = Key[i] xor MSB(CT[j], 128)
                  If ( keylen = 192 )
                  Key[i+1] = Key[i] xor (LSB(CT[j-1], 64) || MSB(CT[j], 128))
                  If ( keylen = 256 )
                  Key[i+1] = Key[i] xor (MSB(CT[j-1], 128) || MSB(CT[j], 128))
                </h:pre><h:p/>
                The above pseudocode is for encryption. For decryption, swap all instances of CT and PT.<h:p/>
                The initial IV, key, and plaintext or ciphertext should be random.<h:p/>
                The evaluator shall test the decrypt functionality using the same test as above,
                exchanging CT and PT, and replacing AES-CBC-Encrypt with AES-CBC-Decrypt.<h:p/>
                
                
                <!-- XTS-AES -->
                <h:br/><h:b>XTS-AES</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">XTS-AES</h:td>
                    <h:td valign="top">AES in XTS mode with unique tweak values that are consecutive
                      non-negative integers starting at an arbitrary non-negative integer</h:td>
                    <h:td valign="top">512 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 18033-3:2010 (Subclause 5.2),
                      FIPS PUB 197</h:i>] [AES]<h:p/>
                      [<h:b>selection:</h:b> <h:i>IEEE Std. 1619-2018, 
                      NIST SP 800-38E</h:i>] [XTS]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s ability to encrypt and decrypt data using AES in XTS mode, the evaluator shall
                perform the Single Data Unit Test and the Multiple Data Unit Test using the following input
                parameters:<h:ul>
                  <h:li>Direction [encryption, decryption]</h:li>
                  <h:li>Key size [512] bits</h:li>
                  <h:li>Tweak value format [128-bit hex string, data unit sequence number]</h:li></h:ul><h:p/>
                <h:br/><h:b>Single Data Unit Test</h:b><h:p/>
                For each combination of claimed key size, direction, and supported tweak value format, the
                evaluator shall generate 50 test cases consisting of random payload data. The payload data size is
                determined randomly for each test case from supported values within the range [128-65536] bits.
                The payload size and data unit size must be equal.<h:p/>
                <h:br/><h:b>Multiple Data Unit Test</h:b><h:p/>
                For each combination of claimed key size, direction, and supported tweak value format, the
                evaluator shall generate 50 test cases consisting of random payload data. The payload data size is
                determined randomly for each test case from supported values within the range [128-65536] bits.
                Likewise, the data unit size is determined randomly for each test case from supported values
                within the range [128-65535] bits. The payload size and data unit size must not be equal.<h:p/>
                The evaluator shall verify the correctness of the TSF’s implementation by comparing values
                generated by the TSF with those generated by a known good implementation using the same
                input parameters.<h:p/>
                
                <!-- AES-CTR -->
                <h:br/><h:b>AES-CTR</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Identifier</h:td>
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Cryptographic Key Sizes</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">AES-CTR</h:td>
                    <h:td valign="top">AES in Counter Mode with a non-repeating initial counter and
                      with no repeated use of counter values across multiple messages with the 
                      same secret key.</h:td>
                    <h:td valign="top">256 bits</h:td>
                    <h:td valign="top">
                      [<h:b>selection:</h:b> <h:i>ISO/IEC 18033-3:2010 (Subclause 5.2),
                      FIPS PUB 197</h:i>] [AES]<h:p/>
                      [<h:b>selection:</h:b>  <h:i>ISO/IEC 10116:2017 (Clause 10), 
                        NIST SP 800-38A</h:i>] [CTR]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s ability to encrypt and decrypt data using AES in CTR mode, the evaluator shall
                perform the Algorithm Functional Test and the Counter Test using the following input
                parameters:<h:ul>
                  <h:li>Direction [encryption, decryption]</h:li>
                  <h:li>Key size [256] bits</h:li></h:ul><h:p/>
                <h:br/><h:b>Algorithm Functional Tests</h:b><h:p/>
                Algorithm Functional Tests are designed to verify the correct operation of the logical
                components of the algorithm implementation under normal operation using different block sizes.
                For AES-CTR, there are three types of AFTs:<h:p/>
                <h:br/><h:b><h:i>Known-Answer Tests</h:i></h:b><h:p/>
                For each combination of direction and claimed key size, the TOE must be tested using the
                GFSBox, KeySbox, VarTxt, and VarKey test cases listed in Appendixes B through E of <h:i>The
                  Advanced Encryption Standard Algorithm Validation Suite (AESAVS)</h:i>, NIST, 15 November 2002.<h:p/>
                <h:br/><h:b><h:i>Single Block Message Tests</h:i></h:b><h:p/>
                For each combination of direction and claimed key, the evaluator shall generate 10 test cases
                with a data size of 128 bits.<h:p/>
                <h:br/><h:b><h:i>Partial Block Message Tests</h:i></h:b><h:p/>
                Monte Carlo tests are intended to test the implementation under strenuous conditions. The TOE
                must process the test cases according to the following algorithm once for each combination of
                direction and key size:<h:p/>
                For each combination of direction and claimed key, the evaluator shall generate five test cases
                such that the data size is not a multiple of 128 bits.<h:p/>
                The evaluator shall verify the correctness of the TSF’s implementation by comparing values
                generated by the TSF with those generated by a known good implementation using the same
                input parameters.<h:p/>
                <h:br/><h:b><h:i>Counter Test</h:i></h:b><h:p/>
                The evaluator shall generate a single message of 1000 blocks (128000 bits) and either encrypt or
                decrypt it. Back-compute the IVs used and verify that they are unique and increasing (encryption) or
                decreasing (decryption).<h:p/>
                
              </Tests>
            </aactivity>
            <!--
            <rule id="r-wlan-aes">
              <or>
                <and><not><ref-id>mod-wlanclient</ref-id></not></and>
                <and>
                  <ref-id>mod-wlanclient</ref-id>
                  <or><ref-id>s-aes-ccmp</ref-id><ref-id>s-aes-gcmp</ref-id></or>
                </and>
              </or>
            </rule>
            -->
            <!-- <rule id="r-aes-ctr-for-ssh"> -->
            <!--   <if><ref-id>s-ftp_ssh</ref-id></if> -->
            <!--   <then><ref-id>s-aes-ctr</ref-id></then> -->
            <!-- <or><and><ref-id>s-aes-ctr</ref-id><ref-id>s-ftp_ssh</ref-id></and> -->
            <!-- <not><ref-id>s-ftp_ssh</ref-id></not> -->
            <!-- </or> -->
            <!-- </rule> -->
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component id="sfr-fcs-cop-1-xof" cc-id="fcs_cop.1" iteration="XOF" 
          name="Cryptographic Operation - Extendable-Output Function" status="sel-based">
          <depends on-sel="sel-fcs-ckm-ak-lms"/>
          <depends on-sel="sel-fcs-ckm-ak-xmss"/>
          <depends on-sel="sel-fcs-cop-sigver-lms"/>
          <depends on-sel="sel-fcs-cop-sigver-xmss"/>
          <f-element id="fcs-cop-1e1-xof">
            <title>
              The TSF shall perform [<h:i>extendable-output function</h:i>] in accordance with a specified cryptographic algorithm  
              <selectables>
                <tabularize id="fcs-cop-xof-sels" title="Allowable choices for FCS_COP.1/XOF">
                  <selectcol>Cryptographic Algorithm</selectcol>
                  <reqtext>and parameters</reqtext>
                  <selectcol>Parameters</selectcol>
                  <reqtext>that meet the following:</reqtext>
                  <selectcol>List of Standards</selectcol>
                  <reqtext><h:p/><h:p/>The following table provides the allowable choices for
                    completion of the selection operations of FCS_COP.1/XOF.</reqtext>
                </tabularize>
                
                <!-- SHAKE -->
                <selectable id="sel-fcs-cop-xof-shake">
                  <col>SHAKE</col>
                  <col>Functions = [SHAKE128, SHAKE256]
                  </col>
                  <col>NIST FIPS PUB 202 Section 6.2 [SHAKE]</col>
                </selectable>
                
              </selectables>
            </title>
            <note role="application">
              In accordance with CNSA 2.0, SHAKE is permitted to be used only as a component of LMS or XMSS. 
              Therefore this component is claimed only if LMS or XMSS is claimed in FCS_COP.1/SigVer. <h:p/>
              Since LMS and XMSS use both SHAKE128 and SHAKE256 internally, claiming and testing of both
              functions is mandatory.
            </note>
            <aactivity>
              <TSS/>
              <Guidance/>
              <Tests>
                The following tests are conditional based on the selections made in the SFR. The evaluator
                shall perform the following tests or witness respective tests executed by the developer. The tests
                must be executed on a platform that is as close as practically possible to the operational platform
                (but which may be instrumented in terms of, for example, use of a debug mode). Where the test
                is not carried out on the TOE itself, the test platform shall be identified and the differences
                between test environment and TOE execution environment shall be described.<h:p/>
                
                <!-- SHAKE -->
                <h:br/><h:b>SHAKE</h:b><h:p/>
                <h:table border="1">
                  <h:tr class="header" bgcolor="#cccccc">
                    <h:td valign="top">Cryptographic Algorithm</h:td>
                    <h:td valign="top">Parameters</h:td>
                    <h:td valign="top">List of Standards</h:td>
                  </h:tr>
                  <h:tr>
                    <h:td valign="top">SHAKE</h:td>
                    <h:td valign="top">Function = [SHAKE128, SHAKE256]</h:td>
                    <h:td valign="top">NIST FIPS PUB 202 Section 6.2 [SHAKE]</h:td>
                  </h:tr>
                </h:table><h:p/>	
                To test the TOE’s implementation of the SHAKE Extendable Output Function the evaluator shall
                perform the Algorithm Functional Test, Monte Carlo Test, and Variable Output Test using the
                following input parameters:<h:ul>
                  <h:li>Function [SHAKE128, SHAKE256]</h:li>
                  <h:li>Output length [16-65536] bits</h:li></h:ul><h:p/>
                <h:br/><h:b><h:i>Algorithm Functional Test</h:i></h:b><h:p/>
                For each supported function, generate test cases consisting of random data for every message
                length from 0 bits (if supported) to <h:i>rate</h:i>-1 bits, where <h:i>rate</h:i> equals<h:p/><h:ul>
                  <h:li>1344 for SHAKE128, and</h:li>
                  <h:li>1088 for SHAKE256.</h:li></h:ul><h:p/>
                Additionally, generate tests cases of random data for messages of every multiple of (rate+1) bits
                starting at length rate, and continuing until 65535 is exceeded. For SHAKE128, this should
                result in a total of 1391 test cases.<h:p/>
                <h:br/><h:b><h:i>Monte Carlo Test</h:i></h:b><h:p/>
                The Monte Carlos test takes in a single 128-bit message (SEED) and desired output length in
                bits, and runs 100 iterations of the chained computation. MaxOutBytes and MinOutBytes are the
                largest and smallest supported input and output sizes in bytes, respectively.<h:p/>
                <h:pre>
                  Range = maxOutBytes - minOutBytes + 1
                  OutputLen = maxOutBytes
                  For j = 0 to 99
                  MD[0] = SEED
                  For i = 1 to 1000
                  MSG[i] = 128 leftmost bits of MD[i-1]
                  if (MSG[i] &lt; 128 bits)
                  Append 0 bits on rightmost side of MSG[i] til MSG[i] is 128 bits
                  MD[i] = SHAKE(MSG[i], OutputLen * 8)
                  
                  RightmostOutputBits = 16 rightmost bits of MD[i] as an integer
                  OutputLen = minOutBytes + (RightmostOutputBits % Range)
                  Output MD[1000], OutputLen
                  SEED = MD[1000]
                </h:pre><h:p/>
                <h:br/><h:b><h:i>Variable Output Test</h:i></h:b><h:p/>
                This test measures the ability of the TOE to generate output digests of varying sizes.<h:p/>
                The evaluator shall generate 512 test cases such that the input for each test case consists of 128-
                bits of random data, and the output length includes the minimum supported value, the maximum
                supported value, and 510 random values between the minimum and maximum digest sizes
                supported by the implementation.<h:p/>
                
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
       
<!--
	<ext-comp-def fam-id="FCS_RBG_EXT" title="Random Bit Generation">
	  <fam-behavior>Components in this family address the requirements for random bit and number generation. This is a
	    new family defined for the FCS class.</fam-behavior>
	</ext-comp-def>
        
        <f-component cc-id="fcs_rbg_ext.1" name="Random Bit Generation">
          <comp-lev> requires random bit generation to be performed in accordance with selected standards and seeded by an entropy source.</comp-lev>
          <management> There are no management activities foreseen.</management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
            <h:ul>
              <h:li>Failure of the randomization process</h:li>
            </h:ul>
          </audit>
          <dependencies>
            <no-link>FCS_COP.1</no-link> Cryptographic Operation
          </dependencies>
          
          <f-element id="fel-rbg-how">
            <title>
              The OS shall perform all deterministic random bit generation (DRBG) services in
              accordance with NIST Special Publication 800-90A using
              <selectables linebreak="yes">
                <selectable>Hash_DRBG (any)</selectable>
                <selectable>HMAC_DRBG (any)</selectable>
                <selectable>CTR_DRBG (AES)</selectable>
              </selectables>
	      .
            </title>
            <note role="application">
NIST SP 800-90A contains three different methods of generating random numbers;
each of these, in turn, depends on underlying cryptographic primitives (hash functions/ciphers).
The ST author will select the function used and include the specific underlying cryptographic primitives used in the requirement or in the TSS.
While any of the identified hash functions (SHA-224, SHA-256, SHA-384, SHA-512) are allowed for Hash_DRBG or HMAC_DRBG,
only AES-based implementations for CTR_DRBG are allowed.
            </note>
            <aactivity>
	      <Tests>
	      <h:p>
	      The evaluator shall perform the following tests:
	      </h:p><h:p>
              The evaluator shall perform 15 trials for the RNG implementation. If the RNG
              is configurable, the evaluator shall perform 15 trials for each configuration. The
              evaluator shall also confirm that the operational guidance contains appropriate
              instructions for configuring the RNG functionality.
	      </h:p><h:p>
	      If the RNG has  prediction resistance enabled, each trial consists of (1) instantiate DRBG, (2)
              generate the first block of random bits (3) generate a second block of random bits
              (4) uninstantiate. The evaluator verifies that the second block of random bits is
              the expected value. The evaluator shall generate eight input values for each
              trial. The first is a count (0 – 14). The next three are entropy input, nonce, and
              personalization string for the instantiate operation. The next two are additional
              input and entropy input for the first call to generate. The final two are
              additional input and entropy input for the second call to generate. These values
              are randomly generated. "generate one block of random bits" means to generate
              random bits with number of returned bits equal to the Output Block Length (as
              defined in NIST SP 800-90A).
	      </h:p><h:p>
	      If the RNG does not have prediction resistance,
              each trial consists of (1) instantiate DRBG, (2) generate the first block of
              random bits (3) reseed, (4) generate a second block of random bits (5)
              uninstantiate. The evaluator verifies that the second block of random bits is the
              expected value. The evaluator shall generate eight input values for each trial.
              The first is a count (0 – 14). The next three are entropy input, nonce, and
              personalization string for the instantiate operation. The fifth value is
              additional input to the first call to generate. The sixth and seventh are
              additional input and entropy input to the call to reseed. The final value is
              additional input to the second generate call.
	      </h:p><h:p>
	      The following list contains more information on some of the input values to be generated/selected by the evaluator.
	      <h:ul>
		<h:li> <h:b>Entropy input:</h:b> The length of the entropy input value must equal the seed
                  length.</h:li>
		  
                  <h:li><h:b>Nonce:</h:b> If a nonce is supported (CTR_DRBG with no Derivation Function does
                  not use a nonce), the nonce bit length is one-half the seed length. </h:li>
                  <h:li><h:b>Personalization string:</h:b> The length of the personalization string must be
                  less than or equal to seed length. If the implementation only supports one
                  personalization string length, then the same length can be used for both values.
                  If more than one string length is support, the evaluator shall use personalization
                  strings of two different lengths. If the implementation does not use a
                  personalization string, no value needs to be supplied. </h:li>
                  <h:li><h:b>Additional input:</h:b> The additional input bit lengths have the same defaults
                  and restrictions as the personalization string lengths.</h:li>
		</h:ul>
	      </h:p>
	      </Tests>
            </aactivity>
          </f-element>
          
          <f-element id="fel-rbg-seed-how">
            <title>
              The deterministic RBG used by the OS shall be seeded by an entropy source that
              accumulates entropy from a
              <selectables linebreak="yes">
                <selectable>software-based noise source</selectable>
                <selectable>platform-based noise source</selectable>
              </selectables>
              with a minimum of 256 bits
              <selectables linebreak="yes"> 
                 <selectable>128 bits</selectable> 
                 <selectable>256 bits</selectable> 
               </selectables> 
              of entropy at least equal to the greatest security strength (according to NIST SP 800-57)
              of the keys and hashes that it will generate.
	    </title>
            <note role="application">
	      <h:p>
		For the first
		selection in this requirement, the ST author selects 'software-based noise source' if
		any additional noise sources are used as input to the DRBG.
	      </h:p><h:p>
	      In the second selection in this requirement, the ST author selects the
              appropriate number of bits of entropy that corresponds to the greatest security
              strength of the algorithms included in the ST.
	      Security strength is defined in Tables
              2 and 3 of NIST SP 800-57A.
	      For example, if the implementation includes 3072-bit RSA
              (security strength of 128 bits), AES 256 (security strength 256 bits), and
              HMAC-SHA-256 (security strength 256 bits), then the ST author would select 256 bits.
	    </h:p>
            </note>
            <aactivity>
	    <Tests>
	      <h:p>
		Documentation will be produced - and the evaluator shall perform the
		activities - in accordance with <xref to="entropyappendix"/> and
		the
	        <h:a href="https://niap-ccevs.org/Documents_and_Guidance/ccevs/Entropy%20Documentation%20and%20Assessment%20Clarification.pdf"
		     >Clarification to the Entropy Documentation and Assessment Annex</h:a>.
	      </h:p><h:p>
              In the future, specific statistical testing (in line with NIST SP 800-90B) will
              be required to verify the entropy estimates.
	    </h:p>
	    </Tests>
            </aactivity>
          </f-element>
        </f-component>
        -->
        
        <f-component cc-id="fcs_rbg.1" name="Random Bit Generation (RBG)">
          <f-element id="fel-rbg-init-seed">
            <title>
              The TSF shall perform deterministic random bit generation services using 
              <selectables linebreak="yes">
                <selectable>Hash_DRBG (any)</selectable>
                <selectable>HMAC_DRBG (any)</selectable>
                <selectable>CTR_DRBG (AES)</selectable>
              </selectables>
              in accordance
              with [<h:i>NIST SP 800-90A</h:i>] after initialization with a seed.              
            </title>
            <note role="application">
              NIST SP 800-90A contains three different methods of generating random numbers;
              each of these, in turn, depends on underlying cryptographic primitives (hash functions/ciphers).
              The ST author will select the function used and include the specific underlying cryptographic primitives used in the requirement or in the TSS.              
            </note>
            <aactivity level="element">
              <TSS>The evaluator shall verify that the TSS identifies the DRBGs used by the TOE.</TSS>
              <Guidance>If the DRBG functionality is configurable, the evaluator shall verify that the operational guidance includes instructions on how to configure this behavior.</Guidance>
              <Tests>
                <h:p>
                  The evaluator shall perform the following tests:
                </h:p><h:p>
                  The evaluator shall perform 15 trials for the RNG implementation. If the RNG
                  is configurable, the evaluator shall perform 15 trials for each configuration. The
                  evaluator shall also confirm that the operational guidance contains appropriate
                  instructions for configuring the RNG functionality.
                </h:p><h:p>
                  If the RNG has  prediction resistance enabled, each trial consists of (1) instantiate DRBG, (2)
                  generate the first block of random bits (3) generate a second block of random bits
                  (4) uninstantiate. The evaluator verifies that the second block of random bits is
                  the expected value. The evaluator shall generate eight input values for each
                  trial. The first is a count (0 – 14). The next three are entropy input, nonce, and
                  personalization string for the instantiate operation. The next two are additional
                  input and entropy input for the first call to generate. The final two are
                  additional input and entropy input for the second call to generate. These values
                  are randomly generated. "generate one block of random bits" means to generate
                  random bits with number of returned bits equal to the Output Block Length (as
                  defined in NIST SP 800-90A).
                </h:p><h:p>
                  If the RNG does not have prediction resistance,
                  each trial consists of (1) instantiate DRBG, (2) generate the first block of
                  random bits (3) reseed, (4) generate a second block of random bits (5)
                  uninstantiate. The evaluator verifies that the second block of random bits is the
                  expected value. The evaluator shall generate eight input values for each trial.
                  The first is a count (0 – 14). The next three are entropy input, nonce, and
                  personalization string for the instantiate operation. The fifth value is
                  additional input to the first call to generate. The sixth and seventh are
                  additional input and entropy input to the call to reseed. The final value is
                  additional input to the second generate call.
                </h:p><h:p>
                  The following list contains more information on some of the input values to be generated/selected by the evaluator.
                  <h:ul>
                    <h:li> <h:b>Entropy input:</h:b> The length of the entropy input value must equal the seed
                      length.</h:li>
                    
                    <h:li><h:b>Nonce:</h:b> If a nonce is supported (CTR_DRBG with no Derivation Function does
                      not use a nonce), the nonce bit length is one-half the seed length. </h:li>
                    <h:li><h:b>Personalization string:</h:b> The length of the personalization string must be
                      less than or equal to seed length. If the implementation only supports one
                      personalization string length, then the same length can be used for both values.
                      If more than one string length is support, the evaluator shall use personalization
                      strings of two different lengths. If the implementation does not use a
                      personalization string, no value needs to be supplied. </h:li>
                    <h:li><h:b>Additional input:</h:b> The additional input bit lengths have the same defaults
                      and restrictions as the personalization string lengths.</h:li>
                  </h:ul>
                </h:p>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-rbg-init-seed-how">
            <title>
              The TSF shall use a <selectables>
                <selectable id="internal-seed">TSF noise source <assignable>name of noise source</assignable></selectable>
                <selectable id="internal-seeds"><h:b>multiple TSF noise sources <assignable>names of noise sources</assignable></h:b></selectable>
                <selectable id="external-seed">TSF interface for seeding</selectable>
              </selectables>
              for initialized seeding.
            </title>
            <note role="application">
              <h:p>
                For the 
                selection in this requirement, the ST author selects "TSF noise source" if
                a single noise source is used as input to the DRBG. The ST author selects "multiple TSF noise sources" if a seed is formed from a combination of two or more noise sources within the TOE boundary. If the TSF implements two or more separate DRBGs that are seeded in separate manners, this SFR should be iterated for each DRBG. It multiple distinct noise sources exist such that each DRBG only uses one of them, then each iteration would select "TSF noise source"; "multiple TSF noise sources" is only selected if a single DRBG uses multiple noise sources for its seed. The ST author selects "TSF interface for seeding" if noise source data is generated outside the TOE boundary.
              </h:p>
              <h:p>
                If "TSF noise source" is selected, FCS_RBG.3 must be claimed.
              </h:p>
              <h:p>
                If "multiple TSF noise sources" is selected, FCS_RBG.4 and FCS_RBG.5 must be claimed. 
              </h:p>
              <h:p>
                If "TSF interface for seeding" is selected, FCS_RBG.2 must be claimed. 
              </h:p>
            </note>
            <aactivity level="element">
              <no-tests>
                Documentation will be produced and the evaluator shall perform the
                activities in accordance with <xref to="entropyappendix"/> and
                the
                <h:a
                  href="https://niap-ccevs.org/Documents_and_Guidance/ccevs/Entropy%20Documentation%20and%20Assessment%20Clarification.pdf">
                  Clarification to the Entropy Documentation and Assessment Annex</h:a>.
              </no-tests>
              
            </aactivity>
          </f-element>
          
          <f-element id="fel-rbg-init-seed-when">
            <title>
              The TSF shall update the RBG state by <selectables>
                <selectable>reseeding</selectable>
                <selectable>uninstantiating and reinstantiating</selectable>
              </selectables> using a <selectables>
                <selectable>TSF noise source <assignable>name of noise source</assignable></selectable>
                <selectable>TSF interface for seeding</selectable></selectables>
              in the following situations: <selectables linebreak="yes">
                <selectable>never</selectable>
                <selectable>on demand</selectable>
                <selectable>on the condition: <assignable>condition</assignable></selectable>
                <selectable>after <assignable>time</assignable></selectable>
              </selectables>
              in accordance with <assignable>list of standards</assignable>.
            </title>
            <aactivity level="element">              
              <TSS>
                The evaluator shall verify that the TSS identifies how the DRBG state is updated, and the situations under which this may occur.
              </TSS>
              <Guidance>If the ST claims that the DRBG state can be updated on demand, the evaluator shall verify that the operational guidance has instructions for how to perform this operation.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>    
        
        <f-component cc-id="fcs_rbg.2" name="Random Bit Generation (External Seeding)"  status="sel-based">
          <depends on="external-seed"/>
          <f-element id="fe1-rbg-seed">
            <title>
              The TSF shall be able to accept a minimum input of <assignable>minimum input length greater than zero</assignable>
              from a TSF interface for the purpose of seeding.
            </title>
            <note role="application">
              This requirement is claimed when a DRBG is seeded with entropy from one or more noise source that is outside the TOE
              boundary. Typically the entropy produced by an environmental noise source is conditioned such that the input length has
              full entropy and is therefore  usable as the seed. However, if this is not the case, it should be noted what the minimum
              entropy rate of the noise source is so that the TSF can collect a sufficiently large sample of noise data to be
              conditioned into a seed value.
            </note>
            <aactivity>
              <h:p>
                The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, the TSF external interface used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data such that it can be determined that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.
              </h:p>
              <TSS/>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_rbg.3" name="Random Bit Generation (Internal Seeding - Single Source)" status="sel-based">
          <depends on="internal-seed"/>
          <f-element id="fel-rbg-seed-int-sing">
            <title>
              The TSF shall be able to seed the RBG using a <selectables onlyone="yes">
                <selectable>TSF software-based noise source</selectable>
                <selectable>TSF hardware-based noise source <assignable>name of noise source</assignable></selectable></selectables>
              with a minimum of <assignable>number of bits</assignable> bits of min-entropy.
            </title>        
            <note role="application">This requirement is claimed when a DRBG is seeded with entropy from a single noise source that is within the TOE boundary. Min-entropy should be expressed as a ratio of entropy bits to sampled bits so that the total amount of data needed to ensure full entropy is known, as well as the conditioning function by which that data is reduced in size to the seed.</note>
            
            <aactivity>
              <h:p>
                The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, the TSF noise source used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data such that it can be determined that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.
              </h:p>
              <TSS/>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_rbg.4" name="Random Bit Generation (Internal Seeding - Multiple Sources)" status="sel-based">
          <depends on="internal-seeds"/>
          <f-element id="fel-rbg-seed-int-mult">
            <title>
              The TSF shall be able to seed the RBG using <selectables>
                <selectable><assignable>number</assignable> TSF software-based noise source(s)</selectable>
                <selectable><assignable>number</assignable> TSF hardware-based noise source(s)</selectable>
              </selectables>.
            </title>
            <note role="application">
              This requirement is claimed when a DRBG is seeded with entropy from multiple noise sources that are within the TOE boundary. 
              FCS_RBG.5 defines the mechanism by which these sources are combined to ensure sufficient minimum entropy.
            </note>
            <aactivity>
              <h:p>
                The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, each TSF noise source used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data from each data source.
              </h:p>
              <TSS/>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fcs_rbg.5" name="Random Bit Generation (Combining Noise Sources)" status="sel-based">
          <depends on="internal-seeds"/>
          <f-element id="fel-rbg-comb">
            <title>
              The TSF shall <assignable>combining operation</assignable> <selectables>
                <selectable>output from TSF noise source(s)</selectable>
                <selectable>input from TSF interface(s) for seeding</selectable></selectables>
              to create the entropy input into the derivation function as defined in <assignable>list of standards</assignable>, resulting
              in a minimum of <assignable>number of bits</assignable> bits of min-entropy.              
            </title>        
            <aactivity>
              <h:p>
                Using the entropy sources specified in FCS_RBG.4, the evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it describes the method by which the various entropy sources are combined into a single seed. This should include an estimation of the rate at which each noise source outputs data and whether this is dependent on any system-specific factors so that each source's relative contribution to the overall entropy is understood. The evaluator shall verify that the resulting combination of sampled data and the min-entropy rate of the sampled data is described in sufficient detail to determine that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.
              </h:p>
              <TSS/>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>  
        
        <f-component cc-id="fcs_rbg.6" name="Random Bit Generation Service" status="optional">
          <f-element id="fel-external-service">
            <title>
              The TSF shall provide a <selectables>
                <selectable>hardware</selectable>
                <selectable>software</selectable>
                <selectable><assignable>other interface type</assignable></selectable>
              </selectables> 
              interface to make the RBG output, as specified in FCS_RBG.1 Random bit generation (RBG),
              available as a service to entities outside of the TOE.
            </title>        
            <note role="application">This SFR is defined for the case where an operating system includes a mechanism for </note>
          <aactivity>              
            <TSS>
              The evaluator shall verify that the TSS identifies the interface that the TSF makes available for calling applications to obtain DRBG output. 
            </TSS>
            <Guidance>The evaluator shall verify that the guidance documentation includes an API specification for the random bit generation service such that it is clear how a calling application is able to obtain DRBG output from the TSF.</Guidance>
            <Tests>The evaluator shall invoke the API specified by the guidance documentation to determine that the TSF provides DRBG output upon proper invocation of the API.</Tests>
          </aactivity>
          </f-element>
          <audit-event/>
        </f-component>    
        

	<ext-comp-def fam-id="FCS_STO_EXT" title="Storage of Sensitive Data">
	  <fam-behavior>Components in this family describe the requirements for storing sensitive data (such as cryptographic
	    keys). This is a new family defined for the FCS class.</fam-behavior>
	</ext-comp-def>
        
        <f-component cc-id="fcs_sto_ext.1" name="Storage of Sensitive Data">
          <comp-lev> requires the TSF to include a mechanism that encrypts
            sensitive data and that can be invoked by third-party applications in addition to internal TSF usage.</comp-lev>
          <management>There are no management activities foreseen.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
            <no-link>FCS_COP.1</no-link> Cryptographic Operation
          </dependencies>
          
          <f-element id="fel-store-sdata">
            <title>
	      The TSF shall implement functionality to encrypt sensitive data
	      stored in non-volatile storage and provide interfaces to applications to invoke this functionality.
            </title>
	    <note role="application">Sensitive data will be identified in the TSS by the ST
	    author, and minimally includes credentials and keys.  The interface for invoking the
	    functionality could take a variety of forms: it could consist of an API,
	    or simply well-documented conventions for accessing credentials stored as files.
	    </note>
            <aactivity>
	      <TSS>
	      The evaluator shall check the TSS to ensure that it lists all persistent
              sensitive data for which the OS provides a storage capability.  For each of these
              items, the evaluator shall confirm that the TSS lists for what purpose it can be used,
              and how it is stored.
	      The evaluator shall confirm that cryptographic operations used to protect the data occur as
	      specified in FCS_COP.1/SKC.
	      </TSS>
	      <Guidance>
		The evaluator shall consult the developer documentation to verify that instructions
		exists on applications should securely store credentials.
	      </Guidance>
        <Tests>TBD</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>

      </section>
      <section title="User Data Protection (FDP)" id="fdp">
	<ext-comp-def title="Access Controls for Protecting User Data" fam-id="FDP_ACF_EXT">
	  <fam-behavior>This family specifies methods for ensuring that data stored or maintained by the TSF cannot be accessed
	    without authorization. This family differs from FDP_ACF in CC Part 2 by defining technology-specific
	    details for the implementation of these functions.</fam-behavior>
	</ext-comp-def>
        <f-component cc-id="fdp_acf_ext.1" name="Access Controls for Protecting User Data">
          
          <comp-lev> requires the TSF to prevent unprivileged users
            from accessing operating system objects owned by other users.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
          <h:ul>
            <h:li>Configuration of object ownership and allowed access</h:li>
          </h:ul>
          </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
          <h:ul>
            <h:li>Successful and unsuccessful attempts to access data</h:li>
          </h:ul></audit>
          <dependencies>No dependencies.</dependencies>
          
          <f-element id="fel-protect-user-data">
            <title>
	      The TSF shall implement access controls which can prohibit unprivileged users from
              accessing files and directories owned by other users.
            </title>
	    <note role="application">
	      Effective protection by access controls may also depend
	      upon system configuration.  This requirement is designed to ensure
	      that, for example, files and directories owned by one user in a multi user system
	      can be protected from access by another user in that system.
            </note>
            <aactivity>
	      <TSS>
	      <h:p>
	      The evaluator shall confirm that the TSS comprehensively describes the access control policy enforced by the OS.
              The description must include the rules by which accesses to particular files and directories
	      are determined for particular users.
              The evaluator shall inspect the TSS to ensure that it describes the access control rules
              in such detail that given any possible scenario between a user and a file governed by
              the OS the access control decision is unambiguous.
	      </h:p>
	      </TSS>
        <Guidance>TBD</Guidance>
	      <Tests>
	      <h:p>
              The evaluator shall create two new standard user accounts on the system and conduct the following tests:
              <testlist>
                <test>
                  The evaluator shall authenticate to the system as the first user and create a file within that user&apos;s home directory.
		  The evaluator shall then log off the system and log in as the second user.
		  The evaluator shall then attempt to read the file created in the first user's home directory.
		  The evaluator shall ensure that the read attempt is denied.
                </test>
                <test>
                  The evaluator shall authenticate to the system as the first user and create a file within that user's home directory.
		  The evaluator shall then log off the system and log in as the second user.
		  The evaluator shall then attempt to modify the file created in the first user's home directory.
		  The evaluator shall ensure that the modification is denied.
                </test>
                <test>
                  The evaluator shall authenticate to the system as the first user and create a file within that user's user directory.
		  The evaluator shall then log off the system and log in as the second user.
		  The evaluator shall then attempt to delete the file created in the first user's home directory.
		  The evaluator shall ensure that the deletion is denied.
                </test>
                <test>
                  The evaluator shall authenticate to the system as the first user.
		  The evaluator shall attempt to create a file in the second user's home directory.
                  The evaluator shall ensure that the creation of the file is denied.
                </test>
                <test>
                  The evaluator shall authenticate to the system as the first user and attempt to modify the file created in the first user's home directory.
                  The evaluator shall ensure that the modification of the file is accepted.
                </test>
                <test>
                  The evaluator shall authenticate to the system as the first user and attempt to delete the file created in the first user's directory.
                  The evaluator shall ensure that the deletion of the file is accepted.
                </test>
              </testlist>
	      </h:p>
	      </Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Successful and unsuccessful attempts to access data</audit-event-descr>
          </audit-event>
        </f-component>
	  
        <ext-comp-def fam-id="FDP_IFC_EXT" title="Information Flow Control">
          <fam-behavior>This family defines the ability of the TSF to control information flows by ensuring that it is possible to
            use IPsec to encapsulate all traffic bound to or from the TOE. This family differs from FDP_IFC in CC Part
            2 by defining technology-specific details for the implementation of these functions.</fam-behavior>
	</ext-comp-def>

        <f-component cc-id="fdp_ifc_ext.1" name="Information Flow Control" status="sel-based">
	  <depends on="s-itc-ipsec"/>
	  <depends><optional/></depends>
          
          <comp-lev> requires the TSF to provide the ability to protect IP traffic
            using IPsec.</comp-lev>
          <management>There are no management activities foreseen.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
            <no-link>FTP_ITC_EXT.1</no-link> Trusted Channel Communication
          </dependencies>
          
          <f-element id="fel-dit-vpn">
            <title> The OS shall
	    <selectables linebreak="yes">
              <selectable>provide an interface which allows a VPN client to protect all IP traffic using IPsec</selectable>
              <selectable id="s-provides-vpnclient">provide a VPN client that can protect all IP traffic using IPsec</selectable>
            </selectables>
	    with the exception of IP traffic required to establish the VPN connection
	    and
	    <selectables>
	      <selectable>signed updates directly from the OS vendor</selectable>
	      <selectable exclusive="yes">no other traffic</selectable>
	    </selectables>
	    .
            </title>
	    <note role="application">
	      <h:p>
		Typically, the traffic required to establish the VPN connection is referred to as "Control Plane" traffic,
		whereas the IP traffic protected by the IPsec VPN is referred to as "Data Plane" traffic.
		All Data Plane traffic must flow through the VPN connection and the VPN must not split-tunnel.
	      </h:p>
	      <h:p>
		  If no native IPsec client is validated or third-party VPN clients may
		  also implement the required Information Flow Control, the first
		  option must be selected. In these cases, the TOE provides an API to
		  third-party VPN clients that allows them to configure the TOE's
		  network stack to perform the required Information Flow Control.
	      </h:p>
	      <h:p>
		If the TSF implements a native VPN client, then the ST author must select 
		<xref to="s-provides-vpnclient"/> and includes the PP-Module for VPN Client
		as part of the ST.
		  <!-- If the native VPN client is to be validated  -->
		  <!-- (<xref to="s-itc-ipsec"/> is selected in FTP_ITC_EXT.1.1  -->
		  <!-- and the TSF is validated against the  -->
		  <!-- <h:i>Module for Virtual Private Network (VPN) Clients</h:i>), -->
		  <!-- the ST author will also -->
		  <!-- include FDP_IFC_EXT.1 from this package. -->
	      </h:p>
	      <h:p>
		  In the future, this requirement may also make a distinction between the
		  current requirement (which requires that when the IPsec trusted
		  channel is enabled, all traffic from the TSF is routed through that
		  channel) and having an option to force the establishment of an IPsec
		  trusted channel to allow any communication by the TSF.
	      </h:p>
	    </note>
            <aactivity>
	      <TSS>
	      The evaluator shall verify that the TSS section of the ST describes the
              routing of IP traffic when a VPN client is enabled.
	      The evaluator shall ensure that the description indicates which traffic does not go
              through the VPN and which traffic does, and that a configuration exists for each
              in which only the traffic identified by the ST author as necessary
              for establishing the VPN connection (IKE traffic and perhaps HTTPS or DNS traffic) is
              not encapsulated by the VPN protocol (IPsec).
	      </TSS>
        <Guidance>TBD</Guidance>
	      <Tests>
	      The evaluator shall perform the following test:
	      <testlist><test><steplist>
		<step>The evaluator shall enable a network connection.
		  The evaluator shall sniff packets while performing running applications that use the network such as web browsers and email clients.
		  The evaluator shall verify that the sniffer captures the traffic generated by these actions, turn off the sniffing tool, and save the session data.
		  </step>
		  <step>
                  The evaluator shall configure an IPsec VPN client that supports the routing specified in this requirement.
		  The evaluator shall turn on the sniffing tool, establish the VPN connection, and perform the same actions with the device as performed in the first step.
		  The evaluator shall verify that the sniffing tool captures traffic generated by these actions, turn off the sniffing tool, and save the session data.
                  </step>
                  <step>
		  The evaluator shall examine the traffic from both step one and step two to verify that all non-excepted Data Plane traffic in Step 2 is encapsulated by IPsec.
		  The evaluator shall examine the Security Parameter Index (SPI) value present in the encapsulated packets captured in Step 2 from the TOE to the Gateway and will verify this value is the same for all actions used to generate traffic through the VPN.
		  Note that it is expected that the SPI value for packets from the Gateway to the TOE is different than the SPI value for packets from the TOE to the Gateway.
		  </step>
		  <step>
                  The evaluator shall perform a ping on the TOE host on the local network and verify that no packets sent are captured with the sniffer.
		  The evaluator shall attempt to send packets to the TOE outside the VPN tunnel (i.e. not through the VPN gateway), including from the local network, and verify that the TOE discards them.
		  </step>
	      </steplist></test></testlist>
	      </Tests>
	    </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      
      
      <section title="Identification and Authentication (FIA)" id="fia">
        <f-component cc-id="fia_afl.1" name="Authentication Failure Handling">
          <f-element id="fel-id-and-auth">
            <title>
            The TSF shall detect when
            <selectables linebreak='yes'>
              <selectable><assignable>positive integer number</assignable></selectable>
              <selectable>an administrator configurable positive integer within <assignable>range of acceptable values</assignable></selectable>
            </selectables>
            unsuccessful authentication attempts occur related to
	    <h:b>
	      events with
            <selectables linebreak="yes">
              <selectable>authentication based on user name and password</selectable>
              <selectable>authentication based on user name and a PIN that
	      releases an asymmetric key stored in OE-protected storage</selectable>
              <selectable>authentication based on X.509 certificates</selectable>
            </selectables>.
	    </h:b>
	    </title>
        <note role="application">
          Selections in FIA_AFL.1 and FIA_UAU.5 must match.
            </note>
            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
		  The evaluator shall set an administrator-configurable threshold for
		  failed attempts, or note the ST-specified assignment. The evaluator
		  will then (per selection) repeatedly attempt to authenticate with an
		  incorrect password, PIN, or certificate until the number of attempts
		  reaches the threshold.  Note that the authentication attempts and
		  lockouts must also be logged as specified in FAU_GEN.1.
	      </Tests>
	    </aactivity>
          </f-element>
          <f-element id="fel-bad-attempts">
            <title>
	      When the defined number of unsuccessful authentication attempts <h:b>for an
	      account</h:b> has been [<h:i>met</h:i>], The TSF shall:
	      <h:b>
	      <selectables>
		<selectable>Account Lockout</selectable>
		<selectable>Account Disablement</selectable>
		<selectable>Mandatory Credential Reset</selectable>
		<selectable><assignable>list of actions</assignable></selectable>
	      </selectables>
	      </h:b>.
            </title>
            <note role="application">
            	The action to be taken will be populated in the assignment of the ST and defined
            	in the administrator guidance.
            </note>
            <aactivity>
	      <Tests>
              <testlist>
                <test>
                  [conditional, to be performed if "authentication based on user name and password" is selected in FIA_AFL.1
                  and FIA_UAU.5]: The evaluator shall attempt to authenticate repeatedly to the system with a
                  known bad password. Once the defined number of failed authentication attempts has been
                  reached the evaluator shall ensure that the account that was being used for testing
                  has had the actions detailed in the assignment list above applied to it. The evaluator shall ensure that
                  an event has been logged to the security event log detailing that the account has had these actions applied.
                </test>
                <test>
                  [conditional, to be performed if "authentication based on user name and a PIN that releases an                  
                  asymmetric key stored in OE-protected storage" is selected in FIA_AFL.1 and FIA_UAU.5]: The 
                  evaluator shall attempt to authenticate repeatedly to the system with a
                  known bad PIN. Once the defined number of failed authentication attempts has been
                  reached the evaluator shall ensure that the account that was being used for testing
                  has had the actions detailed in the assignment list above applied to it. The evaluator shall ensure that
                  an event has been logged to the security event log detailing that the account has had these actions applied.
                </test>
                <test>
                  [conditional, to be performed if "authentication based on X.509 certificates" is selected in                  
                  FIA_AFL.1 and FIA_UAU.5]:The evaluator shall attempt to authenticate repeatedly to the system 
                  using a known bad certificate.
                  Once the defined number of failed authentication attempts has been
                  reached the evaluator shall ensure that the account that was being used for testing
                  has had the actions detailed in the assignment list above applied to it. The evaluator shall ensure that
                  an event has been logged to the security event log detailing that the account has had these actions applied.
                </test>
              </testlist>
              </Tests>
	    </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        
        <f-component cc-id="fia_uau.5" name="Multiple Authentication Mechanisms">
          <f-element id="fel-mult-auth">
            <title>
	      The <refinement>OS</refinement> shall provide 
	      <h:b><selectables linebreak='yes'>
		<selectable id="s-pass">authentication based on username and password</selectable>
		<selectable id="s-pin">authentication based on username and a PIN that releases an asymmetric key stored
		in OE-protected storage</selectable>
		<selectable id="s-otp">combination of authentication based on user name, password, and time-based one-time password</selectable>
		<selectable id="s-x509-auth">authentication based on X.509 certificates</selectable>
		<selectable id="s-uau-ssh">for use in SSH only, <snip>SSH public key-based authentication</snip> as specified by the <xref to="pkg-ssh"/></selectable>
	      </selectables>
	      </h:b>
	      to support user authentication.
            </title>
            <note role="application">
	      <h:p>
	        The <xref to="s-uau-ssh"/> selection can only be included, and must be included, if
		    FTP_ITC_EXT.1.1 selects <xref to="s-ftp_ssh"/>
	      </h:p><h:p>
	        If "authentication based on X.509 certificates" is claimed, the TOE must claim conformance to <xref to="X509"/>.
	      </h:p>.
	    </note>
            <aactivity>
	      <Tests>
		<h:div>
		  <depends on="s-pass"/>
		  <!-- If <xref to="s-pass"/> is selected, the evaluator shall configure the OS with a -->
		  <!-- known user name and password and conduct the following tests: -->
		  <testlist>
                    <test>
		      The evaluator shall attempt to authenticate to the OS using
		      the known user name and password. The evaluator shall ensure
		      that the authentication attempt is successful.
                    </test>
                    <test>
		      The evaluator shall attempt to authenticate to the OS using
		      the known user name but an incorrect password. The evaluator
		      will ensure that the authentication attempt is unsuccessful.
                    </test>
		  </testlist>
		</h:div>
		<h:div>
		  <depends on="s-pin"/>
		  The evaluator shall examine the TSS for guidance on supported
		  protected storage and will then configure the TOE or OE to establish a PIN
		  which enables release of the asymmetric key from the protected storage (such as a TPM, a hardware token, or
		  isolated execution environment) with which the
		  OS can interface.  The evaluator shall then conduct the following tests:
		  <testlist>
		    <test>
		      The evaluator shall attempt to  authenticate to the OS using the known user name and PIN.
		      The evaluator shall ensure that the authentication attempt is successful.
		    </test>
		    <test>
		      The evaluator shall attempt to  authenticate to the OS using the known user name but an incorrect
		      PIN. The evaluator shall ensure that the authentication attempt is
		      unsuccessful.
		    </test>
		  </testlist>
		</h:div>
		<h:div><depends on="s-otp"/>
		  The evaluator shall configure the OS to authentication to authenticate to the OS using
		  a username, password, and one-time password mechanism.
		  The evaluator shall then perform the following tests.
		  <testlist>
		    <test>
	  	      The evaluator shall attempt to authenticate using a valid username, valid password, and valid one-time password.
		      The evaluator shall ensure that the authentication attempt is successful.
		    </test>
		    <test>
	  	      The evaluator shall attempt to authenticate using a valid username, invalid password, and valid one-time password.
		      The evaluator shall ensure that the authentication attempt fails.
		    </test>
		    <test>
	  	      The evaluator shall attempt to authenticate using a valid username, valid password, and invalid one-time password.
		      The evaluator shall ensure that the authentication attempt fails.
		    </test>
		    <test>
	  	      The evaluator shall attempt to authenticate using a valid username, invalid password, and invalid one-time password.
		      The evaluator shall ensure that the authentication attempt fails.
		    </test>
		  </testlist>
		</h:div>

		<h:p>
		  Authentication mechanisms related to <xref to="s-x509-auth"/> are tested under FIA_X509_EXT.1 as defined in the <xref to="X509"/>
		  and <xref to="s-uau-ssh"/> are tested in the <xref to="pkg-ssh"/>.
		</h:p>
              </Tests>
	    </aactivity>
          </f-element>
           <f-element id="fel-auth-how">
            <title>
The TSF shall authenticate any user's claimed identity according to the
              <assignable>
              	rules describing how the multiple authentication
		mechanisms provide authentication
              </assignable>.
            </title>

              <aactivity>
		<TSS>
		  The evaluator shall ensure that the TSS describes
		  the rules as to how each authentication mechanism specified in
		  FIA_UAU.5.1 is implemented and used.
		  Example rules are how the authentication mechanism authenticates the user
		  (i.e. how does the TSF verify that the correct password or authentication
		  factor is used),
		  the result of a successful authentication
		  (i.e. is the user input used to derive or unlock a key) and which
		  authentication mechanism can be used at which authentication factor
		  interfaces (i.e. if there are times, for example, after a reboot,
		  that only specific authentication mechanisms can be used).
		  Rules regarding how the authentication factors interact in terms of
		  unsuccessful authentication are covered in FIA_AFL.1.
		</TSS>
	      <Guidance>
	      <h:p>
		The evaluator shall verify that
		configuration guidance for each authentication mechanism is
		addressed in the AGD guidance.
	      </h:p>
	      </Guidance>
	      <Tests>
		
              <!-- <testlist> -->
              <!--   <test>For each -->
	      <!-- 	authentication mechanism selected, the evaluator shall enable that -->
	      <!-- 	mechanism and verify that it can be used to authenticate the user at -->
	      <!-- 	the specified authentication factor interfaces. </test> -->
	      <!-- 	<test> -->
	      <h:p>
		  For each authentication mechanism rule, the evaluator shall ensure that
		  the authentication mechanism(s) behave as documented in the TSS.
	      </h:p>
	      <!-- 	</test> -->
              <!-- </testlist> -->
	      </Tests>
          </aactivity>
          </f-element>
          <audit-event/>
        </f-component>

<!--
        <ext-comp-def fam-id="FIA_X509_EXT" title="Authentication Using X.509 Certificates">
          <fam-behavior>This family defines the behavior, management, and use of X.509 certificates for functions to be
            performed by the TSF. Components in this family require validation of certificates according to a
            specified set of rules and use of certificates for authentication for protocols and integrity verification.
            This is a new family defined for the FIA class.</fam-behavior>
	</ext-comp-def>

	<f-component cc-id="fia_x509_ext.1" id="fc-cert-val" name="X.509 Certificate Validation">
	  
	  <comp-lev> requires the TSF to check and validate certificates in
	    accordance with the RFCs and rules specified in the component.</comp-lev>
	  <management>The following actions could be considered for the management functions in FMT:
	    <h:ul>
	      <h:li>Import and removal of X.509v3 certificates</h:li>
	      <h:li>Approval of import and removal of X.509v3 certificates</h:li>
	    </h:ul>
	  </management>
	  <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
	    <h:ul>
	      <h:li>Failure of certificate validation</h:li>	      
	    </h:ul>
	  </audit>
	  <dependencies>
	    <no-link>FCS_COP.1</no-link> Cryptographic Operation<h:br/>
	    <no-link>FPT_STM.1</no-link> Reliable Time Stamps
	  </dependencies>
	  
          <f-element id="fel-cert-val">
            <title>
	      The OS shall implement functionality to validate certificates in accordance with the following rules:
	      <h:ul>
		<h:li>RFC 5280 certificate validation and certificate path validation</h:li>
		<h:li>The certificate path must terminate with a trusted CA certificate</h:li>
    <h:li>The OS shall validate a certificate path by ensuring the presence of the 
	        basicConstraints extension, that the CA flag is set to TRUE for all CA certificates,
          and that any path constraints are met.</h:li>
    <h:li>The TSF shall validate that any CA certificate includes "Certificate Signature Generation" as a purpose the key usage field</h:li>
    <h:li>The OS shall validate the revocation status of the certificate using 
		<selectables>
		  <selectable>OCSP as specified in RFC 6960</selectable>
		  <selectable>CRL as specified in RFC 8603</selectable>
		  <selectable>an OCSP TLS Status Request Extension (OCSP stapling) as specified in RFC 6066</selectable>
		  <selectable> OCSP TLS Multi-Certificate Status Request Extension (i.e., OCSP Multi-Stapling) as specified in RFC 6961</selectable>
		</selectables>
		with
		<selectables>
		  <selectable>no exceptions</selectable>
		  <selectable id="s-revoc-exceptions"><readable>exceptional use cases</readable><assignable>exceptional use cases and alternative status check</assignable></selectable>
		</selectables></h:li>
		<h:li>The OS shall validate the extendedKeyUsage field according to the following rules:
		<h:ul>
		  <h:li>Certificates used for trusted updates and executable code integrity verification shall have the Code Signature Generation Purpose (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.</h:li>
		  <h:li>Server certificates presented for TLS shall have the Server Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage field.</h:li>	
		  <h:li>Client certificates presented for TLS shall have the Client Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the EKU field.</h:li>
		  <h:li>S/MIME certificates presented for email encryption and signature shall have the Email Protection purpose (id-kp 4 with OID 1.3.6.1.5.5.7.3.4) in the EKU field.</h:li>
		  <h:li>OCSP certificates presented for OCSP responses shall have the OCSP Signature Generation Purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the EKU field.</h:li>
		  <h:li>Server certificates presented for EST shall have the CMC Registration Authority (RA) purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the EKU field. (conditional)</h:li>
		</h:ul>
		</h:li>
	      </h:ul>				
	      .
            </title>
            <note role="application">
	      <h:p>
		FIA_X509_EXT.1.1 lists the rules for validating certificates.
		The ST author will select whether revocation status is verified using OCSP or CRLs.
		FIA_X509_EXT.2 requires that certificates are used for HTTPS, TLS, and DTLS;
		this use requires that the <h:i>extendedKeyUsage</h:i> rules are verified.
	      </h:p>
	      <h:p>
		OCSP stapling and OCSP multi-stapling only support TLS server certificate validation. If other certificate types are validated, either OCSP or CRL should be claimed.
		If OCSP is not supported the EKU provision for checking the OCSP Signature Generation purpose is met by default.
	      </h:p>
	      <h:p>
		If the OS receives server certificates presented for EST, then the ST author should make the selection for EST in the SFR.
	      </h:p>

	      <h:p>
		If the OS cannot perform revocation checking in accordance with one of the specified revocation methods,
		then the specific use cases where revocation checking is not possible must be described, along with any alternative to certificate status checking for each use case.
		For example, for the use case "update functions when network connections are not available, notice of a compromised certificate disables automatic updates."
	      </h:p>
	      
            </note>
            <aactivity>
	      <TSS>
		<h:p>
		The evaluator shall ensure the TSS describes where the
		check of validity of the certificates takes place.
		The evaluator ensures the TSS also provides a description of the certificate path validation algorithm.
		</h:p>
		<h:p>
		  If there are exceptional use cases where the OS cannot perform revocation checking in accordance with
		  at least one of the revocation methods, the evaluator shall ensure the TSS describes each revocation
		  checking exception use case and, for each exception, the alternate functionality the TOE implements 
		  to determine the status of the certificate and disable functionality dependent on the validity of 
		  the certificate.
		</h:p>
	      </TSS>
	      <Tests> 
The tests described must be performed in conjunction with the other certificate services evaluation activities, including the functions in FIA_X509_EXT.2.1.
The evaluator shall create a chain of at least four certificates: the node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.

	<testlist>
<test> The evaluator shall demonstrate that validating a certificate without a valid certification path results in the function failing, for each of the following reasons, in turn:
by establishing a certificate path in which one of the issuing certificates is not a CA certificate,
by omitting the basicConstraints field in one of the issuing certificates,
by setting the basicConstraints field in an issuing certificate to have CA=False,
by omitting the CA signing bit of the key usage field in an issuing certificate, and
by setting the path length field of a valid CA field to a value strictly less than the certificate path.
The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and demonstrate that the function succeeds.
The evaluator shall then remove trust in one of the CA certificates, and show that the function fails.
</test>
<test> The evaluator shall demonstrate that validating an expired certificate results in the function failing.</test>
<test> [Conditional, to be performed for use cases identified in exceptions that cannot be configured to allow revocation checking]
The evaluator shall test that the OS can properly handle revoked certificates - conditional on whether CRL, OCSP, OCSP stapling, or OCSP multi-stapling is selected; if multiple methods are selected, then a test will be performed for each method.
The evaluator shall test revocation of the node certificate and revocation of the intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the root CA).
If OCSP stapling per RFC 6066 is the only supported revocation method, testing revocation of the intermediate CA certificate is omitted.
The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds.
The evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the validation function fails.
If the exceptions are configurable, the evaluator shall attempt to configure the exceptions to allow revocation checking for each function indicated in FIA_X509_EXT.2.</test>
<test> If any OCSP option is selected, the evaluator shall configure the OCSP server or use a man-in-the-middle tool to present a certificate that does not have the OCSP signing purpose and verify that validation of the OCSP response fails.
If CRL is selected, the evaluator shall configure the CA to sign a CRL with a certificate that does not have the cRLsign key usage bit set and verify that validation of the CRL fails.</test>
<test> The evaluator shall modify any byte in the first eight bytes of the certificate and demonstrate that the certificate fails to validate.
(The certificate will fail to parse correctly.)</test>
<test> The evaluator shall modify any byte in the last eight bytes of the certificate and demonstrate that the certificate fails to validate.
(The signature on the certificate will not validate.)</test>
<test> The evaluator shall modify any byte in the public key of the certificate and demonstrate that the certificate fails to validate.
(The signature of the certificate will not validate.)</test>
<test>
      <depends on="s-ec-certs"/>
      <depends on="sel-rfc6187"><external-doc ref="pkg-ssh"/></depends>
      <testlist><test id="t-ecdsa-valid">
	The evaluator shall establish a valid, trusted certificate chain consisting of an EC leaf certificate, an EC Intermediate CA certificate not designated as a trust anchor, and an EC certificate designated as a trusted anchor, where the elliptic curve parameters are specified as a named curve.
    The evaluator shall confirm that the TOE validates the certificate chain.
  </test>
  <test>
      The evaluator shall replace the intermediate certificate in the certificate chain for <xref to="t-ecdsa-valid"/> with a modified certificate, where the modified intermediate CA has a public key information field where the EC parameters uses an explicit format version of the Elliptic Curve parameters in the public key information field of the intermediate CA certificate from <xref to="t-ecdsa-valid"/>, and the modified Intermediate CA certificate is signed by the trusted EC root CA, but having no other changes.
The evaluator shall confirm the TOE treats the certificate as invalid.
      </test></testlist>
</test>
    <test>
    <depends on="s-revoc-exceptions"/>
    For each exceptional use case for revocation checking described in the ST, the evaluator shall attempt to establish the conditions of the use case, designate the certificate as invalid and perform the function relying on the certificate. The evaluator shall observe that the alternate revocation checking mechanism successfully prevents performance of the function.
</test>
</testlist>

<h:div>
  [Conditional, to be performed if "authentication based on X.509 certificates" is selected in FIA_UAU.5]:
  The evaluator shall generate an X.509v3 certificate for a user with the Client Authentication Extended Key Usage field set.
  The evaluator shall provision the OS for authentication with the X.509v3 certificate.
  The evaluator shall ensure that the certificates are validated by the OS as per
  FIA_X509_EXT.1.1 and then conduct the following two tests:
  <testlist>
    <test>
      The evaluator shall attempt to authenticate to the OS using the X.509v3 certificate.
      The evaluator shall ensure that the authentication attempt is successful.
    </test>
    <test>
      The evaluator shall generate a second certificate identical to
      the first except for the public key and any values derived
      from the public key.
      The evaluator shall attempt to authenticate to the OS with this certificate.
      The evaluator shall ensure that the authentication attempt is unsuccessful.
    </test>
  </testlist>
</h:div>


</Tests>

			  
			  </aactivity>
          </f-element>
          <f-element id="fel-cacert">
            <title>
The OS shall only treat a certificate as a CA certificate if the
basicConstraints extension is present and the CA flag is set to TRUE.
	    </title>
            <note role="application"> This requirement applies to certificates that are used and
              processed by the TSF and restricts the certificates that may be
              added as trusted CA certificates. </note>
            <aactivity>
	      <Tests>
The tests described must be performed in conjunction with the other
certificate services evaluation activities, including the functions in
FIA_X509_EXT.2.1.
The evaluator shall create a chain of at least four certificates:
the node certificate to be tested, two Intermediate CAs, and the
              self-signed Root CA.
<testlist>
  <test> The evaluator shall construct a certificate path, such that the certificate
  of the CA issuing the OS&apos;s certificate does not contain the
  <h:i>basicConstraints</h:i> extension. The validation of the certificate path fails. </test>
  <test> The evaluator shall construct a certificate path, such that the certificate
  of the CA issuing the OS&apos;s certificate has the CA flag in the
  <h:i>basicConstraints</h:i> extension not set. The validation of the certificate path fails. </test>
  <test> The evaluator shall construct a certificate path, such that the certificate
  of the CA issuing the OS&apos;s certificate has the CA flag in the
  <h:i>basicConstraints</h:i> extension set to TRUE. The validation of the certificate path
  succeeds. </test>
</testlist>
              </Tests>
	    </aactivity>
          </f-element>
        </f-component>
        <f-component cc-id="fia_x509_ext.2" name="X.509 Certificate Authentication">
          
          <comp-lev> requires the TSF to use certificates for authentication
            functions.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
            <h:ul>
              <h:li>Import and removal of X.509v3 certificates</h:li>
              <h:li>Approval of import and removal of X.509v3 certificates</h:li>
            </h:ul>
          </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
            <h:ul>
              <h:li>Success or failure of authentication attempt</h:li>	      
            </h:ul>
          </audit>
          <dependencies>
            <no-link>FIA_X509_EXT.1</no-link> X.509 Certificate Validation
          </dependencies>
          
          <f-element id="fel-cert-auth">
            <title> The OS shall use X.509v3 certificates as defined by RFC 5280 to support
              authentication for
			  <selectables>
			  <selectable>TLS</selectable>
			  <selectable>DTLS</selectable>
			  <selectable>HTTPS</selectable>
			  <selectable><assignable>other protocols</assignable></selectable>
			  </selectables>
			  connections.
	    </title>
            <aactivity>
	      <Tests>
	      <h:p>
		The evaluator shall acquire or develop an application that uses the selected OS
		mechanism with an X.509v3 certificate. The evaluator shall then run the
		application and ensure that the provided certificate is used to authenticate the
		connection.
	      </h:p>
	      <h:p>
		The evaluator shall repeat the activity for all selections listed.
	      </h:p>
	      </Tests>
	    </aactivity>
          </f-element>
        </f-component>
        
        -->
        
      </section>
      
      <section title="Security Management (FMT)" id="fmt">
        <ext-comp-def fam-id="FMT_MOF_EXT" title="Management of Functions Behavior">
          <fam-behavior>This family defines the administrative privileges required to modify the behavior of the security
            functions that are defined specifically for operating systems.</fam-behavior>
	</ext-comp-def>
        <f-component cc-id="fmt_mof_ext.1" name="Management of Functions Behavior">
          
          <comp-lev> requires the TSF to define a set of
            management functions for the TOE and the privileges that are required to administer them.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
          <h:ul>
            <h:li>Configuration of the roles that may manage the behavior of the TSF management functions</h:li>
          </h:ul>
          </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the
            PP or ST:
          <h:ul>
            <h:li>Successful or unsuccessful management of the behavior of any TOE functions</h:li>
            <h:li>Change in permissions to a set of users that have the ability to manage a given function</h:li>
          </h:ul>
          </audit>
          <dependencies>
            <no-link>FMT_SMF_EXT.1</no-link> Specification of Management Functions
          </dependencies>
          
	  <f-element id="fel-man-sec-func">
	    <title>
	      The TSF shall restrict the ability to perform the function indicated in the "Administrator" column in 
              FMT_SMF_EXT.1.1 to the administrator.
	    </title>
	    <note role="application">
        The functions with an "M" in the "Administrator" column must be restricted
        to (or overridden by) the administrator in the TOE.
	The functions with an "O" in the "Administrator" column may be restricted
        to (or overridden by) the administrator when implemented in the TOE at
        the discretion of the ST author.  For such functions, the ST author indicates this
        by replacing an "O" with an "M" in the ST.
	    </note>
            <aactivity>
	      <TSS>
	      <h:p>
		The evaluator shall verify that the TSS describes those management functions
		that are restricted to Administrators, including how the user is prevented
		from performing those functions, or not able to use any interfaces that
		allow access to that function.
	      </h:p>

	      </TSS>
              <Guidance>TBD</Guidance>
		<Tests>
		The evaluator shall also perform the following test.
  	      <testlist><test>For each function that is indicated as restricted to the administrator,
              the evaluation will perform the function as an administrator, as specified in the
              Operational Guidance, and determine that it has the expected effect as outlined by
              the Operational Guidance and the SFR.  The evaluator shall then perform the function
              (or otherwise attempt to access the function) as a non-administrator and observe
              that they are unable to invoke that functionality.
              </test></testlist>
		</Tests>
            </aactivity>
	  </f-element>
          <audit-event>
            <audit-event-descr>Successful or unsuccessful management of the behavior of any TOE
              functions</audit-event-descr>            
          </audit-event>
          <audit-event>
            <audit-event-descr>Change in permissions to a set of users that have the ability to
              manage a given function</audit-event-descr>
          </audit-event>
	</f-component>

        <ext-comp-def fam-id="FMT_SMF_EXT" title="Specification of Management Functions">
	  <fam-behavior>This family defines management functions that are defined specifically for operating systems.</fam-behavior>
	</ext-comp-def>
	<f-component cc-id="fmt_smf_ext.1" name="Specification of Management Functions">
	  
	  <comp-lev> requires the TSF to define a set of
	    management functions for the TOE.</comp-lev>
	  <management>There are no management functions foreseen.</management>
	  <audit>There are no auditable events foreseen.
	  </audit>
	  <dependencies>No dependencies.</dependencies>
	  
	  <f-element id="fel-manage-functions">
	    <title>
	      The TSF shall be capable of performing the following management functions:
	      <h:br/>
	      <management-function-set default="O">
		<manager cid="a">Administrator</manager>
		<manager cid="u">User</manager>
		<management-function><text>Enable/disable <selectables><selectable>screen lock</selectable><selectable>session timeout</selectable></selectables></text><M ref="a"/></management-function>
		<management-function><text>Configure <selectables><selectable>screen lock</selectable><selectable>session</selectable></selectables> inactivity timeout</text><M ref="a"/></management-function>
		<management-function><text>import keys/secrets into  the secure key storage</text></management-function>
		<management-function><text>Configure local audit storage capacity</text></management-function>
		<management-function><text>Configure minimum password length</text></management-function>
		<management-function><text>Configure minimum number of special characters in password</text></management-function>
		<management-function><text>Configure minimum number of numeric characters in password</text></management-function>
		<management-function><text>Configure minimum number of uppercase characters in password</text></management-function>
		<management-function><text>Configure minimum number of lowercase characters in password</text></management-function>
		<management-function><text>
Configure lockout policy for unsuccessful authentication attempts through
                  <selectables>
		    <selectable>timeouts between attempts</selectable>
		    <selectable>limiting number of attempts during a time period</selectable>
		  </selectables>
		</text></management-function>
		<management-function><text>Configure host-based firewall</text></management-function>
		<management-function><text>Configure name/address of directory server with which to bind</text></management-function>
		<management-function><text>Configure name/address of remote management server from which to receive management settings</text></management-function>
		<management-function><text>Configure name/address of audit/logging server to which to send audit/logging records</text></management-function>
		<management-function><text>Configure audit rules</text></management-function>
		<management-function><text>Configure name/address of network time server</text></management-function>
		<management-function><text>Enable/disable automatic software update</text></management-function>
		<management-function><text>Configure Wi-Fi interface</text></management-function>
		<management-function><text>Enable/disable Bluetooth interface</text></management-function>
		<management-function><text>Enable/disable <assignable> list of other external interfaces</assignable></text></management-function>
		<management-function><text><assignable>list of other management functions to be provided by the TSF</assignable></text></management-function>
	      </management-function-set>
	     .
	    </title>
	    <note role="application">
	      <h:p>
          The ST should indicate which of the optional management functions are implemented in the TOE.
          This can be done by copying the above table into the ST and adjusting the "Administrator"
          and "User" columns to "M" according to which capabilities are present or not present,
          and for which privilege level. The Application Note for FMT_MOF_EXT.1 explains
          how to indicate Administrator or User capability.
	      </h:p>
	      <h:p>
          The terms "Administrator" and "User" are defined in the <xref g="glossary"/>.
          The intent of this requirement is to ensure that the ST is populated with the
          relevant management functions that are provided by the OS.	      </h:p>
	      <h:p>
Sophisticated account management policies, such as intricate password complexity requirements and handling of temporary accounts, are a function of directory servers.
The OS can enroll in such account management and enable the overall information system to achieve such policies by binding to a directory server.
	      </h:p>
	    </note>
	    <aactivity>
	      <TSS>TBD</TSS>
	      <Guidance>
		The evaluator shall verify that every management function captured in the ST is described in the operational guidance and that the description contains the information required to perform the management duties associated with the management function.
	      </Guidance>
	      <Tests>
	      The evaluator shall test the OS's ability to provide the management functions by configuring the operating system and testing each option selected from above.
	      The evaluator is expected to test these functions in all the ways in which the ST and guidance documentation state the configuration can be managed.
	      </Tests>
	    </aactivity>
	  </f-element>
	  <audit-event/>
	</f-component>
      </section>
      <section title="Protection of the TSF (FPT)" id="fpt">

        <ext-comp-def fam-id="FPT_ACF_EXT" title="Access Controls">
          <fam-behavior>This family defines specific TOE components that are protected against unprivileged access. This is a new
            family defined for the FPT class.</fam-behavior>
	</ext-comp-def>
	
        <f-component cc-id="fpt_acf_ext.1" name="Access Controls">
          
          <comp-lev> requires the TSF to prohibit unauthorized users from reading or
            modifying specific TSF data.</comp-lev>
          <management>There are no management functions foreseen.</management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
            <h:ul>
              <h:li>Unauthorized attempts to perform operations against protected data</h:li>
            </h:ul>
          </audit>
          <dependencies>No dependencies.</dependencies>
          
          <f-element id="fel-protect-priv">
            <title> The TSF shall implement access controls which prohibit unprivileged users from
              modifying: <h:ul>
                <h:li>Kernel and its drivers/modules</h:li>
                <h:li>Security audit logs</h:li>
                <h:li>Shared libraries</h:li>
                <h:li>System executables</h:li>
                <h:li>System configuration files</h:li>
                <h:li><assignable>other objects</assignable></h:li>
              </h:ul>
	     .
            </title>
            <aactivity>
	      <TSS>
	      The evaluator shall confirm that the TSS specifies the locations of kernel drivers/modules, security
	      audit logs, shared libraries, system executables, and system configuration files.  Every
	      file does not need to be individually identified, but the system's conventions for storing and protecting
	      such files must be specified.
	      </TSS>
        <Guidance>TBD</Guidance>
	      <Tests>
	      The evaluator shall create an unprivileged user account.
	      Using this account, the evaluator shall ensure that the following tests result in a negative
              outcome (i.e., the action results in the OS denying the evaluator permission to
              complete the action):
              <testlist>
                <test>The evaluator shall attempt to modify all kernel drivers and modules.</test>
                <test>The evaluator shall attempt to modify all security audit logs generated by the logging subsystem.</test>
                <test>The evaluator shall attempt to modify all shared libraries that are used throughout the system.</test>
                <test>The evaluator shall attempt to modify all system executables.</test>
                <test>The evaluator shall attempt to modify all system configuration files.</test>
                <test>The evaluator shall attempt to modify any additional components selected.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-no-read">
            <title> The TSF shall implement access controls which prohibit unprivileged users from
              reading: <h:ul>
                <h:li>Security audit logs</h:li>
                <h:li>System-wide credential repositories</h:li>
                <h:li><assignable>list of other objects</assignable></h:li>
              </h:ul>
	     .
            </title>
            <note role="application">
	      "Credential repositories" refer, in this case, to structures containing cryptographic keys or passwords.
	    </note>
            <aactivity>
	      <Tests>
	      The evaluator shall create an unprivileged user account.
	      Using this account, the evaluator shall ensure that the following tests result in a negative
              outcome (i.e., the action results in the OS denying the evaluator permission to
              complete the action):
              <testlist>
                <test>The evaluator shall attempt to read security audit logs generated by the auditing subsystem</test>
                <test>The evaluator shall attempt to read system-wide credential repositories</test>
                <test>The evaluator shall attempt to read any other object specified in the assignment</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Unauthorized attempts to perform operations against protected data</audit-event-descr>
          </audit-event>
        </f-component>

        <ext-comp-def fam-id="FPT_ASLR_EXT" title="Address Space Layout Randomization">
          <fam-behavior>This family defines the ability of the TOE to implement address space layout randomization (ASLR). This
            is a new family defined for the FPT class.</fam-behavior>
	</ext-comp-def>
	
        <f-component cc-id="fpt_aslr_ext.1" name="Address Space Layout Randomization">
          
          <comp-lev> defines the ability of the TOE to use ASLR as
            well as the objects that ASLR is applied to.</comp-lev>
          <management>There are no management functions foreseen.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>No dependencies.</dependencies>
          
          <f-element id="fel-aslr">
            <title>The TSF shall always randomize process address space memory locations with
	    <selectables>
	      <selectable>8</selectable>
	      <selectable><assignable>number greater than 8</assignable></selectable>
	    </selectables>
	    bits of entropy except for
                <assignable>list of explicit exceptions</assignable>.
            </title>
            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
The evaluator shall select 3 executables included with the TSF.
If the TSF includes a web browser it must be selected.
If the TSF includes a mail client it must be selected.
For each of these apps, the evaluator shall launch the same executables on two separate instances of the
OS on identical hardware and compare all memory mapping locations.
The evaluator shall ensure that no memory mappings are placed in the same location.
If the rare chance occurs that two mappings are the same for a single executable and
not the same for the other two, the evaluator shall repeat the test with that executable to verify
that in the second test the mappings are different.
This test can also be completed on the same hardware and rebooting between application launches.
	      </Tests>
	    </aactivity>
          </f-element>
<!--          <f-element>
            <title>The OS shall always randomize kernel address space memory locations</title>
                <note role="application">
                  Randomizing the location of the kernel address spaces provides some defense against
		  kernel-level exploits.
                </note>
            <aactivity>
	      The evaluator shall review the TSS to ensure that ASLR applies to the kernel.
	    </aactivity>
          </f-element> -->
          <audit-event/>
	</f-component>
        <!-- <f-component id="fpt_php_ext.1" name="External Interface Controls">-->
        <!--   <f-element> -->
        <!--     <title> -->
	<!--       The OS shall provide a mechanism to  -->
	<!--       <selectables> -->
	<!-- 	<selectable>users</selectable> -->
	<!-- 	<selectable>administrators</selectable> -->
	<!--       </selectables> -->
	<!--       to disable external interfaces (physical and logical) and -->
        <!--       services exposed to untrusted networks and devices:  -->
        <!--       <selectables linebreak="yes"> -->
        <!--         <selectable>WiFi</selectable> -->
        <!--         <selectable>Bluetooth</selectable> -->
        <!--         <selectable>NFC</selectable> -->
        <!--         <selectable>USB</selectable> -->
        <!--         <selectable>FireWire</selectable> -->
        <!--         <selectable><assignable>list of other external interfaces</assignable></selectable> -->
        <!--       </selectables> -->
	<!--       . -->
        <!--     </title> -->
        <!--     <note role="application"> -->
	<!--       Different hardware platforms present different external interfaces. -->
	<!--       The selection of tests to run against an OS varies depending on the hardware the OS  -->
	<!--       is running on.  -->
	<!--       However, where an OS supports an external interface -->
        <!--       type (e.g., FireWire) it is important that the OS also offers the ability to disable -->
        <!--       that interface.  -->
	<!--       Requirements that ensure secure communication over WiFi are defined in the  -->
	<!--       <a href="https://www.niap-ccevs.org/pp/PP_WLAN_AS_EP_V1.0/" -->
	<!-- 	 >ND CPP EP Wireless LAN Access System</a>. -->
	      
	<!--     </note> -->
        <!--     <aactivity> -->
	<!--       The evaluator shall install the OS onto a platform that has capabilities commiserate -->
	<!--       with the OS capabilities (e.g., a USB capable OS must be evaluated on a USB capable -->
	<!--       platform) and ensure that the following tests (where applicable) -->
        <!--       succeed: <testlist> -->
        <!--         <test> The evaluator shall attempt to connect to a Wireless network and ensure that the OS successfully connects and allows network traffic to flow.</test> -->
        <!--         <test>  -->
	<!-- 	  The evaluator shall connect to a Wireless network and then disable the WiFi -->
        <!--           network interface from within the OS.  -->
	<!-- 	  The evaluator shall ensure that the WiFi connection is terminated and that the OS -->
	<!-- 	  does not list any wireless network as accessible. -->
	<!-- 	  The evaluator shall run a wireless sniffer (e.g. Kismet, aircrack) and ensure that -->
	<!-- 	  no signals, attributable to the test platform, are detected. -->
	<!-- 	</test> -->
        <!--         <test> The evaluator shall attempt to pair, and connect, a Bluetooth device to the OS and ensure that the OS successfully connects to the device.</test> -->
        <!--         <test> -->
	<!-- 	  The evaluator shall pair, and connect, a Bluetooth device to the OS and then -->
        <!--           disable the Bluetooth interface within the OS.  -->
	<!-- 	  The evaluator shall ensure that the Bluetooth connection is terminated and that -->
	<!-- 	  the OS does not list any devices as accessible. -->
	<!-- 	  The evaluator shall run a Bluetooth sniffer (e.g. UberTooth, Wireshark) -->
	<!-- 	  and ensure that no signals, attributable to the test platform, are detected. -->
	<!-- 	</test> -->
        <!--         <test> The evaluator shall attempt to pair, and connect, a NFC device to the OS and ensure that the OS successfully connects to the device.</test> -->
        <!--         <test> The evaluator shall pair, and connect, an NFC device to the OS and then disable -->
        <!--           the NFC interface within the OS. The evaluator shall ensure that the NFC connection -->
        <!--           is terminated. -->
	<!-- 	  The evaluator shall run a NFC sniffer  -->
	<!-- 	  and ensure that no signals, attributable to the test platform, are detected. -->
	<!-- 	</test> -->
        <!--         <test> The evaluator shall connect a USB device to the OS and then disable the USB -->
        <!--           interface within the OS. The evaluator shall ensure that the USB device no longer -->
        <!--           functions within the OS. </test> -->
        <!--         <test> The evaluator shall connect a FireWire device to the OS and ensure that the OS successfully connects to the device.</test> -->
        <!--         <test> The evaluator shall connect a FireWire device to the OS and then disable the -->
        <!--           FireWire interface within the OS. The evaluator shall ensure that the FireWire -->
        <!--           device no longer functions within the OS. </test> -->
        <!--         <test>If any additional components have been listed in the selection, the evaluator shall connect each component to the OS and ensure that the OS successfully connects to it.</test> -->
        <!--         <test> If any additional components have been listed in the selection, the evaluator -->
        <!--           shall connect each component to the OS and then disable the component interface -->
        <!--           within the OS. The evaluator shall ensure that the component device no longer -->
        <!--           functions within the OS. </test> -->
        <!--       </testlist> -->
        <!--     </aactivity> -->
        <!--   </f-element> -->
        <!-- </f-component> -->
        
        <ext-comp-def fam-id="FPT_BLT_EXT" title="Limitation of Bluetooth Profile Support">
          <fam-behavior>This family defines requirements for limiting Bluetooth capabilities without user action.
            This is a new family defined for the FPT class.</fam-behavior>
        </ext-comp-def>
        
        <f-component cc-id="fpt_blt_ext.1" name="Limitation of Bluetooth Profile Support" status="objective">
         
          <comp-lev> requires the TSF to maintain a disabled by default posture for Bluetooth profiles.</comp-lev>
          <management>There are no management activities foreseen.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>No dependencies.</dependencies>
                    
          <f-element id="fel-bluetooth-stop">
            <title>
	      The TSF shall disable support for
 	      <assignable>list of Bluetooth profiles</assignable>
	      Bluetooth profiles when they are not currently being used by
              an application on the TOE and shall require explicit user action to enable
              them.
	    </title>
            <note role="application">
		<h:p>
		Some Bluetooth services incur more serious consequences if
		unauthorized remote devices gain access to them.
		Such services should be protected by measures like disabling support for
		the associated Bluetooth profile unless it is actively being used by an application on the OS
		(in order to prevent discovery by a Service Discovery Protocol search), and then requiring explicit user
		action to enable those profiles in order to use the services.
		It may be further appropriate to require additional user action before granting a remote device access
		to that service.
		</h:p>
		<h:p>
		  For example, it may be appropriate to disable the
		  OBEX Push Profile until a user  pushes a button in an application
		  indicating readiness to transfer an object.
		  After completion of the object transfer,
		  support for the OBEX profile should be suspended until the next time the user requests
		  its use.
		</h:p>
	    </note>
            <aactivity>
              <TSS>The evaluator shall ensure that the TSS lists all Bluetooth profiles that are
                disabled while not in use by an application and which need explicit user action in
                order to become enabled.
	      </TSS>
              <Guidance>There are no guidance evaluation activities for this component.</Guidance>
	      <Tests>The evaluator shall perform the following tests:
	      <testlist>
                <test>
		  The evaluator shall perform this test with a test device that does not have a trust relationship with the TOE.
		  While the service is not in active use by an application on the TOE, the
                  evaluator shall attempt to discover a service associated with a "protected"
                  Bluetooth profile (as specified by the requirement) on the TOE via a Service
                  Discovery Protocol search.
		  The evaluator shall verify that the service does not
                  appear in the Service Discovery Protocol search results.
		  Next, the evaluator shall attempt to gain remote access to the service from a device that does not
                  currently have a trusted device relationship with the TOE.
		  The evaluator shall verify that this attempt fails due to the unavailability of the service and
                  profile.
		</test>
                <test>The evaluator shall repeat Test 1 with a device that currently has a trusted
                device relationship with the TOE and verify that the same behavior is exhibited.
                </test>
              </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>


        <ext-comp-def fam-id="FPT_SBOP_EXT" title="Stack Buffer Overflow Protection">
          <fam-behavior>This family requires the TSF to be compiled using stack-based buffer overflow protections. This is a new
            family defined for the FPT class.</fam-behavior>
	</ext-comp-def>
        
        
        <f-component cc-id="fpt_fls.1" name="Failure with Preservation of Secure State">
          <f-element id="fel-pres-sec-state">
            <title>
              The TSF shall preserve a secure state when the following types of failures occur: [<h:i>DRBG self-test failure</h:i>].              
            </title>
            <note role="application">The intent of this requirement is to ensure that cryptographic services requiring random bit generation cannot be performed if a failure of a self-test defined in FPT_TST.1 occurs.</note>
            <aactivity>              
              <TSS>
                The evaluator shall verify that the TSF describes how the TOE enters an error state in the event of a DRBG self-test failure.
              </TSS>
              <Guidance>
                The evaluator shall verify that the guidance documentation describes the error state that results from a DRBG self-test failure and the actions that a user or administrator should take in response to attempt to resolve the error state.
              </Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>	     

	<f-component cc-id="fpt_sbop_ext.1" name="Stack Buffer Overflow Protection">
	  
	  <comp-lev> requires the TSF to be compiled using stack-based
	    buffer overflow protections or to store data in such a manner that a stack-based buffer overflow cannot
	    compromise the TSF.</comp-lev>
	  <management>There are no management activities foreseen.</management>
	  <audit>There are no auditable events foreseen.</audit>
	  <dependencies>No dependencies.</dependencies>
	  
          <f-element id="fel-sbop">
            <title>
The TSF shall <selectables>
  <selectable>employ stack-based buffer overflow protections</selectable>
  <selectable>not store parameters or variables in the same data structures as control flow values</selectable>
</selectables>.
</title>

            <note role="application">
Many OSes store control flow values (i.e. return addresses) in stack data structures that also contain parameters and variables.
For these OSes, it is expected that most of the OS, to include the kernel, libraries, and application software from the OS vendor be compiled with stack-based buffer overflow protection enabled.
OSes that store parameters and variables separately from control flow values do not need additional stack protections.
            </note>
            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
<h:p>For stack-based OSes, the evaluator shall determine that the TSS contains a description of stack-based buffer overflow protections used by the OS.
These are referred to by a variety of terms. These include, but are not limited to, ASLR, tagging, stack cookie, stack guard, and stack canaries.
The TSS must include a rationale for any binaries that are not protected in this manner.
The evaluator shall also preform the following test:
            <testlist>
                <test>
                  [Conditional: if stack-based overflow detection can be determined by inventorying]: The evaluator shall inventory the kernel, libraries, and application binaries
                  to determine those that do not implement stack-based buffer overflow protections. This list should
                  match up with the list provided in the TSS.
                </test>
            </testlist>
</h:p>

<h:p>For OSes that store parameters/variables separately from control flow values, the evaluator shall verify that the TSS describes what data structures control values, parameters, and variables are stored.
The evaluator shall also ensure that the TSS includes a description of the safeguards that ensure parameters and variables do not intermix with control flow values.
</h:p>
              </Tests>
	    </aactivity>
          </f-element>
	  <audit-event/>
        </f-component>

	<ext-comp-def fam-id="FPT_SRP_EXT" title="Software Restriction Policies">
	  <fam-behavior>This family defines the ability of the TOE to restrict the execution of software unless it meets defined
	    criteria. This is a new family defined for the FPT class.</fam-behavior>
	</ext-comp-def>

	<f-component cc-id="fpt_srp_ext.1" name="Software Restriction Policies" status="objective">
	  
	  <comp-lev> defines the criteria the TSF can use to prevent execution
	    of restricted programs.</comp-lev>
	  <management>The following actions could be considered for the management functions in FMT:
	  <h:ul>
	    <h:li>Specification of restriction policies</h:li>
	  </h:ul></management>
	  <audit>There are no auditable events foreseen.</audit>
	  <dependencies>No dependencies.</dependencies>
	  
          <f-element id="fel-srp">
            <title> The TSF shall restrict execution to only programs which match an administrator-specified
              <selectables linebreak="yes">
                <selectable id="s-srp-path">file path</selectable>
                <selectable id="s-srp-signature">file digital signature</selectable>
                <selectable id="s-srp-version">version</selectable>
                <selectable id="s-srp-hash">hash</selectable>
                <selectable id="s-srp-other"><readable>other</readable><assignable>other characteristics</assignable></selectable>
              </selectables>
	     .
            </title>
            <note role="application">
              The assignment permits implementations which provide a low
              level of granularity such as a volume.
	      The restriction is only against direct execution of
              executable programs.
	      It does not forbid interpreters which may take data as an input, even if
              this data can subsequently result in arbitrary computation.
            </note>
            <aactivity>
	      <TSS>
		The evaluator shall ensure that the description of the supported characteristics in the TSS is consistent with the SFR.
		The evaluator shall also ensure that any characteristics specified by the ST-author are described in sufficient detail to understand how to test those characteristics.
	      </TSS>
	      <Guidance>
		The evaluator shall ensure that the characteristics are described in sufficient detail for administrators to configure policies using them, and that the list of characteristics in the guidance is consistent with the information in the TSS.
	      </Guidance>
	      <Tests>
		There are two tests for each selection above.
              <testlist>
                <test>
		  <depends on="s-srp-path"/>
                  The evaluator shall configure the OS to only allow code execution from the core
                  OS directories. The evaluator shall then attempt to execute code from a directory
                  that is in the allowed list. The evaluator shall ensure that the code they
                  attempted to execute has been executed.
                </test>
                <test>
		  <depends on="s-srp-path"/>
                  The evaluator shall configure the OS to only allow code execution from the core
                  OS directories. The evaluator shall then attempt to execute code from a directory
                  that is not in the allowed list. The evaluator shall ensure that the code they
                  attempted to execute has not been executed.
                </test>
                <test>
		  <depends on="s-srp-signature"/>
                  The evaluator shall configure the OS to only allow code that has been signed by
                  the OS vendor to execute. The evaluator shall then attempt to execute code signed
                  by the OS vendor. The evaluator shall ensure that the code they
                  attempted to execute has been executed.
                </test>
                <test>
		  <depends on="s-srp-signature"/>
                  The evaluator shall configure the OS to only allow code that has been signed by
                  the OS vendor to execute. The evaluator shall then attempt to execute code signed
                  by another digital authority. The evaluator shall ensure that the code they
                  attempted to execute has not been executed.
                </test>
                <test>
		  <depends on="s-srp-version"/>
                  The evaluator shall configure the OS to allow execution of a specific
                  application based on version. The evaluator shall then attempt to execute the same
                  version of the application. The evaluator shall ensure that the code they attempted
                  to execute has been executed.
                </test>
                <test>
		  <depends on="s-srp-version"/>
                  The evaluator shall configure the OS to allow execution of a specific
                  application based on version. The evaluator shall then attempt to execute an older
                  version of the application. The evaluator shall ensure that the code they attempted
                  to execute has not been executed.
                </test>
                <test>
		  <depends on="s-srp-hash"/>
                  The evaluator shall configure the OS to allow execution based on the hash of the application
                  executable. The evaluator shall then attempt to execute
                  the application with the matching hash. The evaluator shall
                  ensure that the code they attempted to execute has been executed.
                </test>
                <test>
		  <depends on="s-srp-hash"/>
                  The evaluator shall configure the OS to allow execution based on the hash of the application
                  executable. The evaluator shall modify the
                  application in such a way that the application hash is changed. The evaluator
                  will then attempt to execute the application with the matching hash. The evaluator shall
                  ensure that the code they attempted to execute has not been executed.
                </test>
		<test>
		  <depends on="s-srp-other"/>
		  The evaluator shall attempt to run an application that should be allowed based on the defined software restriction policy and ensure that it runs.
		</test>
		<test>
		  <depends on="s-srp-other"/>
		  The evaluator shall then attempt to run an application that should not be allowed the defined software restriction policy and ensure that it does not run.
		</test>
              </testlist>
              
              </Tests>
	    </aactivity>
          </f-element>
	  <audit-event/>
        </f-component>
        
        
        <f-component cc-id="fpt_tst.1" name="TSF Self-Testing">
          <f-element id="fel-tsf-self-test">
            <title>
              The TSF shall run a suite of the following self-tests <selectables>
                <selectable>during initial start-up</selectable>
                <selectable>periodically during normal operation</selectable>
                <selectable>at the request of the authorized user</selectable>
                <selectable>at the conditions <assignable>conditions under which self-test should occur</assignable></selectable>
              </selectables>
              to demonstrate the correct operation of [<h:i>[TSF DRBG specified in FCS_RBG.1]</h:i>].              
            </title>
          </f-element>
          
          <f-element id="fel-tsf-ver-int-data">
            <title>
              The TSF shall provide authorized users with the capability to verify the integrity of [<h:i>[DRBG seed/output data]</h:i>].
            </title>
          </f-element>
          
          <f-element id="fel-tsf-ver-int">
            <title>
              The TSF shall provide authorized users with the capability to verify the integrity of [<h:i>[TSF DRBG specified in FCS_RBG.1]</h:i>].
            </title>
            <note role="application">This SFR is a required dependency of FCS_RBG.1. It is intended to require that any DRBG implemented by the TOE undergo health testing to ensure that the random bit generation functionality has not been degraded. If the TSF supports multiple DRBGs, this SFR should be iterated to describe the self-test behavior for each.</note>
            <aactivity>
              <TSS>
                <h:p>
                  The	evaluator shall examine the TSS to ensure that it details the self-tests that are run by the TSF along with how they are run. This description should include an outline of what the tests are actually doing. The evaluator shall ensure that the TSS makes an argument that the tests are sufficient to demonstrate that the DRBG is operating correctly.
                </h:p><h:p>
                  Note that this information may also be placed in the entropy documentation specified by <xref to="entropyappendix"/>. 
                </h:p>
              </TSS>
              <Guidance>
                <h:p>
                  If a self-test can be executed at the request of an authorized user, the evaluator shall verify that the operational guidance provides instructions on how to execute that self-test.
                </h:p>
              </Guidance>
              <Tests>
                <h:p>
                  For each self-test, the evaluator shall verify that evidence is produced that the self-test is executed when specified by FPT_TST.1.1.
                </h:p><h:p>
                  If a self-test can be executed at the request of an authorized user, the evaluator shall verify that following the steps documented in the operational guidance to perform the self-test will result in execution of the self-test.
                </h:p>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>

        <ext-comp-def fam-id="FPT_TST_EXT" title="Boot Integrity">
          <fam-behavior>This family defines the ability of the TOE to provide a mechanism that can be used to verify its integrity
            when started.</fam-behavior>
	</ext-comp-def>
        <f-component cc-id="fpt_stm.1" name="Reliable Time Stamps">
          <f-element id="fel-timestamp">
            <title>The TSF shall be able to provide reliable time stamps <refinement>for its own use</refinement>. </title>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to ensure that it lists each security
                function that makes use of time. The TSS provides a description of how the time is
                maintained and considered reliable in the context of each of the time related
                functions. This documentation must identify whether the TSF uses a NTP server or the
                cell carrier’s network time as the primary time sources. <h:br/><h:br/></TSS>
              <Guidance>The evaluator examines the operational guidance to ensure it describes how
                to set the time.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator uses the operational guide to set the time. The evaluator
                        shall then use an available interface to observe that the time was set
                        correctly.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <f-component cc-id="fpt_tst_ext.1" name="Boot Integrity">
          
          <comp-lev> defines the mechanisms that the TSF uses to assert its own integrity at
            startup.</comp-lev>
          <management>There are no management functions foreseen.</management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
          <h:ul>
            <h:li>Failure of the integrity checking mechanism</h:li>
          </h:ul>
          </audit>
          <dependencies>
          <no-link>FCS_COP.1</no-link> Cryptographic Operation<h:br/>
          <no-link>FIA_X509_EXT.1</no-link> X.509 Certificate Validation
          </dependencies>
          
          <f-element id="fel-boot">
            <title>The TSF shall verify the integrity of the bootchain up through the OS kernel and
              <selectables linebreak="yes">
                <selectable id="s-verify-all-code">all executable code stored in mutable media</selectable>
                <selectable><assignable>list of other executable code</assignable></selectable>
                <selectable exclusive="yes">no other executable code</selectable>
              </selectables>
	      prior to its execution through the use of
              <selectables linebreak="yes">
                <selectable>a digital signature using a hardware-protected asymmetric key</selectable>
		<selectable id="s-boot-x509">a digital signature using an X.509 certificate with hardware-based protection</selectable>
                <selectable>a hardware-protected hash</selectable>
              </selectables>
	     .
            </title>
            <note role="application">
	      <h:p>
              The bootchain of the OS is the sequence of software, to include the OS loader, the kernel, system
              drivers or modules, and system files, which ultimately result in loading the OS.
	          The first part of the OS, usually referred to as the first-stage bootloader,
	          must be loaded by the platform.
	          Assessing its integrity, while critical, is the platform's responsibility; and therefore outside
	          the scope of this PP. 
		      All software loaded after this stage is potentially within the control of the OS and is in scope.
	      </h:p>
	      <h:p>
              The verification may be transitive in nature:
	      a hardware-protected public key, X.509 certificate, or hash may be used to verify the mutable bootloader code
              which contains a key, certificate, or hash used by the bootloader to verify the mutable OS kernel code,
              which contains a key, certificate, or hash to verify the next layer of executable code, and so on.
	      However, the way in which the hardware stores and protects these keys is out of scope.
	      </h:p>
	      <h:p>
              If all executable code (including bootloader(s), kernel, device drivers, pre-loaded applications, user-loaded
              applications, and libraries) is verified, <xref to="s-verify-all-code"/> should
              be selected.
              </h:p>
	      <h:p>
		If certificates are used, they can be hardware-protected trust store elements or leaf certificates in a certificate chain that terminates in a root CA which is an element of a hardware protected trust store.
		If the certificates themselves are not trust store elements, revocation information is expected to be available for each CA certificate in the chain that is not a trust element, in accordance with FIA_X509_EXT.1 as defined in the <xref to="X509"/>.
	      </h:p>
            </note>
            <aactivity>
	      <TSS>
	      <h:p>
              The evaluator shall verify that the TSS section of the ST includes a comprehensive description of the boot
              procedures, including a description of the entire bootchain, for the TSF.
              The evaluator shall ensure that the OS cryptographically verifies each
	      piece of software it loads in the bootchain to include bootloaders and the kernel.
	      Software loaded for execution directly by the platform (e.g. first-stage bootloaders) is out of scope.
	      For each additional category of executable code verified before
              execution, the evaluator shall verify that the description in the TSS describes how that
              software is cryptographically verified.
	      </h:p>
	      <h:p>
              <!-- Out of scope, for now:
			  The evaluator shall verify that the TSS contains a justification for the protection of the
              cryptographic key or hash, preventing it from being modified by unverified or
              unauthenticated software.
              <br/> -->
              The evaluator shall verify that the TSS contains a description of the
              protection afforded to the mechanism performing the cryptographic verification.
	      </h:p>
	      </TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
	      <h:p>
              The evaluator shall also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall perform actions to cause TSF software to load and observe that the
                  integrity mechanism does not flag any executables as containing integrity errors and that the
                  OS properly boots.
                </test>
                <test>
                  The evaluator shall modify a TSF executable that is part of the bootchain verified by the TSF (i.e. Not the first-stage bootloader)
		  and attempt to boot.
		  The evaluator shall ensure that an integrity violation is triggered and the OS does not boot
		  (Care must be taken so that the integrity
                  violation is determined to be the cause of the failure to load the module, and not the fact that
                  in such a way to invalidate the structure of the module.).
                </test>
                <test>
		  <depends on="s-boot-x509"/>
                  If the ST author indicates that the integrity verification is performed
                  using public key in an X509 certificate, the evaluator shall verify that the boot integrity mechanism includes a certificate
                  validation according to in accordance with FIA_X509_EXT.1 as defined in the <xref to="X509"/> for all certificates in the chain from the certificate used for
				  boot integrity to a certificate in the trust store that are not themselves in the trust store.
				  This means that, for each X.509 certificate in this chain that is not a trust store element, the evaluator must ensure that revocation information is available to the TOE during the bootstrap mechanism (before the TOE becomes fully operational).

 
                </test>
              </testlist>
	      </h:p>
              </Tests>
	    </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure of the integrity checking mechanism</audit-event-descr>
          </audit-event>
        </f-component>

	<ext-comp-def fam-id="FPT_TUD_EXT" title="Trusted Update">
	  <fam-behavior>This family defines the ability of the TOE to provide mechanisms for assuring the integrity of updates to
	    the TSF or to non-TOE components that rely on the TSF to function. This is a new family defined for
	    the FPT class.</fam-behavior>
	</ext-comp-def>
	
        <f-component cc-id="fpt_tud_ext.1" name="Integrity for Installation and Update">
          
          <comp-lev> requires the TOE to provide a mechanism to verify the integrity of
            updates to itself.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
          <h:ul>
            <h:li>Configuration of update checking mechanism</h:li>
            <h:li>Initiation of update</h:li>
          </h:ul>
          </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
            <h:ul>
              <h:li>Failure of the integrity checking mechanism</h:li>
              <h:li>Successful completion of updates</h:li>
            </h:ul>
          </audit>
          <dependencies>
            <no-link>FCS_COP.1</no-link> Cryptographic Operation
          </dependencies>
          
          <f-element id="fel-os-update">
            <title>The TSF shall provide the ability to check for updates to the OS
              software itself and shall use a digital signature scheme specified in FCS_COP.1/SigGen to validate the authenticity of the response. </title>
            <note role="application">
				This requirement is about the ability to check for the availability of
			    authentic updates, while the installation of authentic updates is covered by
                FPT_TUD_EXT.1.2.
				Use of the digital signature scheme ensures that an attacker cannot influence the response, 
				regarding of whether updates are available.
			</note>
            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
              <h:p>The evaluator shall check for an update using procedures described in the
              documentation and verify that the OS provides a list of available updates.
			  Testing this capability may require
			  installing and temporarily placing the system into a
			  configuration in conflict with secure configuration guidance
			  which specifies automatic update.
			  </h:p>
			  <h:p>The evaluator is also to ensure that the response to this query is authentic by using a digital signature scheme specified in FCS_COP.1/SigGen. 
				The digital signature verification may be performed as part of a network protocol occurs over a trusted channel as described in FTP_ITC_EXT.1.)
				If the signature verification is not performed as part of a trusted channel, the evaluator shall send a query response with a bad signature and verify that the signature verification fails.
				The evaluator shall then send a query response with a good signature and verify that the signature verification is successful.</h:p>
	      <h:p>For the following tests, the evaluator shall initiate the download of an update and
	        capture the update prior to installation.
	        The download could originate from the vendor's website, an enterprise-hosted
	        update repository, or another system (e.g. network peer).
	        All supported origins
	        for the update must be indicated in the TSS and evaluated.</h:p>
	        <testlist>
	          <test>
	            The evaluator shall ensure that the update has a digital
	            signature belonging to the vendor prior to its installation.
	            The evaluator shall modify the downloaded update in such a way
	            that the digital signature is no longer valid. The evaluator
	            will then attempt to install the modified update. The
	            evaluator shall ensure that the OS does not install the
	            modified update.
	          </test>
	          <test>
	            The evaluator shall ensure that the update has a digital
	            signature belonging to the vendor. The evaluator shall then
	            attempt to install the update (or permit installation to continue).
	            The evaluator shall ensure that
	            the OS successfully installs the update.
	          </test>
	        </testlist>
	      </Tests>
	    </aactivity>
          </f-element>
          <f-element id="fel-verify-updates">
            <title>
              The TSF shall 
		<selectables>
			<selectable>cryptographically verify</selectable>
			<selectable>invoke platform-provided functionality to cryptographically verify</selectable>
		</selectables>
              updates to itself using a digital
              signature prior to installation using schemes specified in FCS_COP.1/SigGen.
	    </title>
		 <note role="application">The intent of the requirement is to ensure that only digitally signed and verified TOE updates are applied to the TOE.</note>
           
          </f-element>
          <audit-event>
            <audit-event-descr>Failure of the integrity checking mechanism</audit-event-descr>
          </audit-event>
          <audit-event>
            <audit-event-descr>Successful completion of updates</audit-event-descr>
          </audit-event>
	
        </f-component>
        <f-component cc-id="fpt_tud_ext.2" name="Integrity for Installation and Update of Application Software">
          
          <comp-lev> requires the TOE to provide a mechanism to
            verify the integrity of updates to non-TSF applications that are running on the TOE.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
            <h:ul>
              <h:li>Configuration of update checking mechanism</h:li>
              <h:li>Initiation of update</h:li>
            </h:ul>
          </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
            <h:ul>
              <h:li>Failure of the integrity checking mechanism</h:li>
              <h:li>Successful completion of updates</h:li>
            </h:ul>
          </audit>
          <dependencies>
            <no-link>FCS_COP.1</no-link> Cryptographic Operation
          </dependencies>
          
          <!-- TO DO: Cite references. -->
          <f-element id="fel-app-check-update">
            <title>
	          The TSF shall provide the ability to check for updates to
              application software and shall use a digital signature scheme specified in 
		      FCS_COP.1/SigGen to validate the authenticity of the response.
	        </title>
            <note role="application">This requirement is about the ability to check for authentic updates,
              while the actual installation of such updates is covered by FPT_TUD_EXT.2.2.
			  Use of the digital signature scheme ensures that an attacker cannot influence the response,
			  regarding of whether updates are available.
            </note>

            <aactivity>
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
	      <Tests>
			  <h:p>
	      The evaluator shall check for updates to application software
			  using procedures described in the
			  documentation and verify that the OS provides a list of available
			  updates.  Testing this capability may require
			  temporarily placing the system into a configuration in conflict
			  with secure configuration guidance which specifies automatic
			  update.
			  </h:p>
			  <h:p>
				The evaluator shall also ensure that the response to this query is authentic by using a digital signature scheme specified in FCS_COP.1/SigGen.
    			The digital signature verification may be performed as part of a network protocol
			     as described in FTP_ITC_EXT.1. 
                If the signature verification is not performed as part of a trusted channel, the evaluator shall send a query response with a bad signature and verify that the signature verification fails. 
				The evaluator shall then send a query response with a good signature and verify that the signature verification is successful.
			  </h:p>
	        The evaluator shall initiate an update to an application.  This may vary depending on the application,
	        but it could be through the application vendor&apos;s website, a commercial app store, or another system.
	        All origins supported by the OS must be indicated in the TSS and evaluated.  However, this only includes
	        those mechanisms for which the OS is providing a trusted installation and update functionality.
	        It does not include user or administrator-driven download and installation of arbitrary files.
	        <testlist>
	          <test>
	            The evaluator shall ensure that the update has a digital
	            signature which chains to the OS vendor or another trusted
	            root managed through the OS.  The evaluator shall modify the
	            downloaded update in such a way that the
	            digital signature is no longer valid. The evaluator shall then attempt to install the
	            modified update. The evaluator shall ensure that the OS does not install the modified
	            update.
	          </test>
	          <test>
	            The evaluator shall ensure that the update has a digital
	            signature belonging to the OS vendor or another trusted root
	            managed through the OS. The evaluator shall then attempt to
	            install the update.  The evaluator shall ensure that the OS
	            successfully installs the update.
	          </test>
	        </testlist>
              </Tests>
	    </aactivity>
          </f-element>
          <f-element id="fel-verify-app-updates">
            <title>
	      The TSF shall cryptographically verify the integrity of updates
	      to applications using a digital signature specified by
	      FCS_COP.1/SigGen prior to installation.
	    </title>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure of the integrity checking mechanism</audit-event-descr>
          </audit-event>
          <audit-event>
            <audit-event-descr>Successful completion of updates</audit-event-descr>
          </audit-event>

        </f-component>


        <ext-comp-def fam-id="FPT_W^X_EXT" title="Write XOR Execute Memory Pages">
          <fam-behavior>
            This family defines the ability of the TOE to implement data execution prevention (DEP) by preventing
            memory from being both writable and executable. This is a new family defined for the FPT class.
          </fam-behavior>
        </ext-comp-def>
        <f-component cc-id="fpt_w^x_ext.1" name="Write XOR Execute Memory Pages" status="optional">
          
          <comp-lev> defines the ability of the TOE to prevent memory
            from being simultaneously writable and executable unless otherwise specified.</comp-lev>
          <management>There are no management functions foreseen.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>No dependencies.</dependencies>
          
          <f-element id="fel-no-rw-mem">
            <title> The TSF shall prevent allocation of any memory region with both write and
              execute permissions except for <assignable>list of exceptions</assignable>.
            </title>
            <note role="application">Requesting a memory mapping with both write and execute
              permissions subverts the platform protection provided by DEP.
              If the OS provides no exceptions (such as for just-in-time compilation),
              then "no exceptions" should be indicated in the assignment.
              Full realization of this requirement requires hardware support, but this is commonly available.
            </note>
            <aactivity>
              <TSS>
                The evaluator shall inspect the vendor-provided developer documentation and
                verify that no memory-mapping can be made with
                write and execute permissions except for the cases listed in the assignment.
              </TSS>
              <Guidance>TBD</Guidance>           
              <Tests>
                The evaluator shall also perform the following tests.
                <testlist>
                  <test>
                    The evaluator shall acquire or construct a test program which attempts
                    to allocate memory that is both writable and executable.
                    The evaluator shall run the program and confirm that it fails to
                    allocate memory that is both writable and executable.
                  </test>
                  <test>
                    The evaluator shall acquire or construct a test program which
                    allocates memory that is executable and then
                    subsequently requests additional write/modify permissions on that memory.
                    The evaluator shall run the program and confirm that at no time
                    during the lifetime of the process is the memory both writable and executable.
                  </test>
                  <test>
                    The evaluator shall acquire or construct a test program which
                    allocates memory that is writable and then
                    subsequently requests additional execute permissions on that memory.
                    The evaluator shall run the program and confirm that at no time
                    during the lifetime of the process is the memory both writable and executable.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>

      </section>
 
      <section title="TOE Access (FTA)" id="fta">
        <f-component cc-id="fta_tab.1" name="Default TOE access banners" status="optional">
          <f-element id="fel-banner">
            <title>
            Before establishing a user session, the [<h:i>TSF</h:i>] shall display an [<h:i>advisory
            warning</h:i>] message <h:b>regarding unauthorized use of the OS</h:b>.
            </title>
            <aactivity>
        <TSS>TBD</TSS>
        <Guidance>TBD</Guidance>
	      <Tests>
            The evaluator shall configure the OS, per instructions in the OS manual,
            to display the advisory warning message "TEST TEST Warning Message TEST TEST".
            The evaluator shall then log out and confirm that the advisory message is
            displayed before logging in can occur.
              </Tests>
	    </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
       
      </section>
      <section title="Trusted Path/Channels (FTP)" id="ftp">

        <ext-comp-def fam-id="FTP_ITC_EXT" title="Trusted Channel Communication">
          <fam-behavior>This family defines the ability of the TOE to use specific trusted communications channels to
            communicate with specific non-TOE entities in the Operational Environment. This family differs from
            FTP_ITC in Part 2 by defining technology-specific details for the implementation of these functions.</fam-behavior>
	</ext-comp-def>
	
      	<f-component cc-id="ftp_itc_ext.1" name="Trusted Channel Communication">
      	  
      	  <comp-lev> defines the specific secure communications protocols
      	    the TSF uses to communicate with a specific set of non-TOE entities in the Operational Environment.</comp-lev>
      	  <management>There are no management functions foreseen.</management>
      	  <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP or ST:
      	    <h:ul>
      	      <h:li>Initiation of trusted channel</h:li>
      	      <h:li>Termination of trusted channel</h:li>
      	      <h:li>Failure of trusted channel functions</h:li>
      	    </h:ul>
      	  </audit>
      	  <dependencies>
      	    <no-link>FCS_DTLSC_EXT.1</no-link> DTLS Client Protocol<h:br/> 
      	    <no-link>FCS_IPSEC_EXT.1</no-link> IPsec<h:br/>
      	    <no-link>FCS_SSH_EXT.1</no-link> SSH Protocol<h:br/>
      	    <no-link>FCS_TLSC_EXT.1</no-link> TLS Client Protocol
      	  </dependencies>
      	  
      	  <f-element id="fel-trust-comms">
      	    <title>
              The TSF shall use
      	      <selectables linebreak='yes'>
                <selectable id="tls">TLS as conforming to the <xref to="pkg-tls"/> as a
    	  	    <selectables>
    	  	      <selectable id="s-tls-client"><readable>client(TLS)</readable>client</selectable>
    	  	      <selectable id="s-tls-server"><readable>server(TLS)</readable>server</selectable>
              </selectables></selectable>
              <selectable id="dtls">DTLS as conforming to the <xref to="pkg-tls"/> as a
    	  	    <selectables>
    	  	      <selectable id="s-dtls-client"><readable>client(DTLS)</readable>client</selectable>
    	  	      <selectable id="s-dtls-server"><readable>server(DTLS)</readable>server</selectable>
    	  	    </selectables></selectable>
      	      <selectable id="s-itc-ipsec">IPsec as conforming to the PP-Module for Virtual Private Network (VPN) Clients</selectable>
      	      </selectables>
      	        and <selectables linebreak='yes'>
      	          <selectable id="s-ftp_ssh"><snip>SSH</snip> as conforming to the <xref to="pkg-ssh"/> as a
      	          <selectables>
      	          <selectable id="s-ssh-client"><readable>client(SSH)</readable>client</selectable>
      	            <selectable id="s-ssh-server"><readable>server(SSH)</readable>server</selectable>
      	          </selectables></selectable>
      	          <selectable>no other protocols</selectable>
      	        </selectables>
		    to provide a trusted communication channel between itself and
		    authorized IT entities supporting the following capabilities:
		    <selectables>
		      <selectable>audit server</selectable>
		      <selectable>authentication server</selectable>
		      <selectable>management server</selectable>
		      <selectable><assignable>other capabilities</assignable></selectable>
		    </selectables> using certificates as defined in [<h:i><xref to="X509"/></h:i>]
		    that is logically distinct from other communication
		    channels and provides assured identification of its end points and protection of the channel
		    data from disclosure and detection of modification of the channel data.
      	    </title>
      	    <ext-comp-def-title>
      	      <title>
      	        The TSF shall use
      	        <assignable>trusted protocol</assignable>, to provide a trusted communication channel between itself and authorized IT
      	        entities supporting the following capabilities:
      	        <selectables>
      	          <selectable>audit server</selectable>
      	          <selectable>authentication server</selectable>
      	          <selectable>management server</selectable>
      	          <selectable><assignable>other capabilities</assignable></selectable>
      	        </selectables> using certificates as defined in <assignable>requirement or standard defining the use of certificates</assignable>
      	        that is logically distinct from other communication channels and provides assured identification of its end points and
      	        protection of the channel data from disclosure and detection of modification of the channel data.
      	      </title>
      	    </ext-comp-def-title>
      	    <note role="application">
             <h:p>
               The ST author must include the security functional requirements for the trusted
               channel protocol selected in FTP_ITC_EXT.1.1 in the main body of the ST.
             </h:p>
      	     <h:p>
      	       If TLS or DTLS is selected, the TSF must be validated against the appropriate requirements in the <xref to="pkg-tls"/>.
      	     </h:p>
      	     <h:p>
      	        If <xref to="s-itc-ipsec"/> is selected, then FDP_IFC_EXT.1 must be included in the ST.
      	    </h:p>
      	    <h:p>
      	        If <xref to="s-ftp_ssh"/> is selected, the TSF must be validated against
      	        the <xref to="pkg-ssh"/> and the corresponding selection is expected to be made in FIA_UAU.5.1.
      	        The ST author must include the security functional requirements for the trusted channel protocol
      	        selected in FTP_ITC_EXT.1 in the main body of the ST.
      	    </h:p>
      	      <h:p>
      	        Claims from the <xref to="X509"/> are only required to the extent that they are needed to support the functionality required by the trusted protocols that are claimed.
      	      </h:p><h:p>
      	        If the TSF implements a protocol that requires the validation of a certificate presented by an external entity, FIA_X509_EXT.1 and FIA_X509_EXT.2 will be claimed, as will FIA_TSM_EXT.1 for management of the trust store.
      	      </h:p><h:p>
      	        If the TSF implements a protocol that requires the presentation of any certificates to an external entity, FIA_XCU_EXT.2 will be claimed. FIA_X509_EXT.3 will also be claimed, along with any applicable dependencies, depending on how the certificates presented by the TOE are obtained.  
      	      </h:p>
      	      <!--
	          <h:p>
		          <rule id="r-need-client-tls">
		          <doc ref="pkg-tls"><ref-id>tlsc_impl</ref-id></doc>
		          </rule>
		          <rule id="r-tlss">
		          <if><ref-id>s-tls-server</ref-id></if>
		          <then><doc ref="pkg-tls"><ref-id>tlss_impl</ref-id></doc></then>
		          </rule>
		          <rule id="r-dtlsc">
		          <if><ref-id>s-dtls-client</ref-id></if>
		          <then><doc ref="pkg-tls"><ref-id>dtlsc_impl</ref-id></doc></then>
		          </rule>
		          <rule id="r-dtlss">
		          <if><ref-id>s-dtls-server</ref-id></if>
		          <then><doc ref="pkg-tls"><ref-id>dtlss_impl</ref-id></doc></then>
		          </rule>
	         </h:p>
<rule id="r-sshclient">
  <if><ref-id>s-ssh-client</ref-id></if>
  <then><doc ref="pkg-ssh"><ref-id>ssh-client</ref-id></doc></then>
</rule>
<rule id="r-sshserver">
  <if><ref-id>s-ssh-server</ref-id></if>
  <then><doc ref="pkg-ssh"><ref-id>ssh-server</ref-id></doc></then>
</rule> -->
      	      <!-- this rule isn't associated with the SFR but it was placed here for ordering purposes -->
      	      <!--
      	      <rule id="r-bluetooth-ccm">
      	        <or>
      	          <and><not><ref-id>mod-bluetooth</ref-id></not></and>
      	          <and>
      	            <ref-id>mod-bluetooth</ref-id>
      	            <or>
      	              <and><not><ref-id>p-256-keygen</ref-id></not><not><ref-id>s-aes-ccm</ref-id></not><not><ref-id>s-128</ref-id></not></and>
      	              <and><ref-id>p-256-keygen</ref-id><ref-id>s-aes-ccm</ref-id><ref-id>s-128</ref-id></and>
      	            </or>
      	          </and>
      	        </or>
      	      </rule>
-->

      	    </note>
      	    <aactivity>
      	      <TSS>TBD</TSS>
      	      <Guidance>TBD</Guidance>
	      <Tests>
	         The evaluator shall configure the OS to communicate with another trusted IT product as identified in the third selection.
      	   The evaluator shall monitor network traffic while the OS performs communication with each of the servers identified in the
      	   third selection. The evaluator shall ensure that for each session a trusted channel was established in conformance with the
      	   selected protocols.
      	      </Tests>
	    </aactivity>
      	  </f-element>
      	  <audit-event>
      	    <audit-event-descr>Initiation of trusted channel</audit-event-descr>
      	  </audit-event>
      	  <audit-event>
      	    <audit-event-descr>Termination of trusted channel</audit-event-descr>
      	  </audit-event>
      	  <audit-event>
      	    <audit-event-descr>Failure of trusted channel functions</audit-event-descr>      	    
      	  </audit-event>
      	  
      	</f-component>
        <f-component cc-id="ftp_trp.1" name="Trusted Path">
            <f-element id="fel-trust-ends">
	      <title>
The TSF shall provide a communication path between itself and
<selectables><selectable id="s-remote">remote</selectable><selectable id="s-local">local</selectable></selectables>
users that is logically distinct from other communication paths and provides assured
identification of its endpoints and protection of the communicated data from
[<h:i>modification, disclosure</h:i>].
              </title>
	      <note role="application">
		<h:p>
This requirement ensures that all remote administrative actions are protected.
Authorized remote administrators must initiate all communication with the OS via
a trusted path and all communication with the OS by remote administrators must
be performed over this path. The data passed in this trusted communication
channel is encrypted as defined in FTP_ITC_EXT.1.1.
If <xref to="s-local"/> users access is selected and no unprotected traffic is sent to remote
users, then this requirement is met.
If <xref to="s-remote"/> users access is selected, the
ST author must include the security functional requirements for the trusted
channel protocol selected in
FTP_ITC_EXT.1.1 in the main body of the ST.
		</h:p>
	      </note>
            </f-element>
            <f-element id="fel-trust-users">
              <title> The TSF shall permit
                <selectables>
                  <selectable>the TSF</selectable>
                  <selectable>local users</selectable>
                  <selectable>remote users</selectable>
                </selectables>
                to initiate communication via the trusted path.
              </title>
            </f-element>
            <f-element id="fel-trust-path">
              <title> The TSF shall require use of the trusted path for <selectables>
                <selectable>initial user authentication</selectable>
                <selectable><h:i>[all remote administrative actions]</h:i></selectable>
              </selectables>           
              </title>
              <note role="application">
		    <h:p>
		        This requirement ensures that authorized remote administrators initiate all communication
            with the OS via a trusted path, and that all communication with the OS by remote administrators
            is performed over this path. The data passed in this trusted communication channel is encrypted as
            defined in FTP_ITC_EXT.1.
	      </h:p>
        <h:p>
          If <h:i>"remote"</h:i> is selected in FTP_TRP.1.1, <h:i>"all remote administrative actions"</h:i>
          must be selected in FTP_TRP.1.3.
        </h:p>
        <h:p>
          If <h:i>"local"</h:i> is selected in FTP_TRP.1.1, then <h:i>"initial user authentication"</h:i> must be selected
          in FTP_TRP.1.3.
        </h:p>
              </note>
              <aactivity>
		<TSS>
                The evaluator shall examine the TSS to determine that the methods of remote or local OS administration
                are indicated, along with how those communications are protected. [Conditional: if "remote" is selected
                in FTP_TRP.1.1], the evaluator shall also confirm that all protocols listed in the TSS in support of OS
                administration are consistent with those specified in the requirement, and are included in the requirements
                in the ST.
		</TSS>
		<Guidance>
		            The evaluator shall confirm that the operational guidance contains instructions for establishing the remote
                administrative sessions or initial user authentication for each supported method.
		</Guidance>
	      <Tests>

The evaluator shall also perform the following tests:
                <testlist>
                  <test>
                    The evaluator shall ensure that communications using each remote or local administration method is
                    tested during the course of the evaluation, setting up the connections or initial user authentication
                    as described in the operational guidance and ensuring that communication is successful.
                  </test>
                  <test>
                    [Conditional: if "remote" is selected in FTP_TRP.1.1]: For each method of remote administration supported,
                    the evaluator shall follow the operational guidance to ensure that there is no available interface that can be
                    used by a remote user to establish a remote administrative sessions without invoking the trusted path.
                  </test>
                  <test>
                    [Conditional: if “remote” is selected in FTP_TRP.1.1]: The evaluator shall ensure, for each method of remote
                    administration, the channel data is not sent in plaintext.
                  </test>
                  <test>
                    [Conditional: if “remote” is selected in FTP_TRP.1.1]: The evaluator shall ensure, for each method of remote
                    administration, modification of the channel data is detected by the OS.
                  </test>
                </testlist>
		</Tests>
	      </aactivity>
            </f-element>
          <audit-event/>
        </f-component>
      </section>
    </sec:SFRs>
    
    <sec:Security_Assurance_Requirements>
      <h:p>
	The Security Functional Requirements (SFRs) in <xref to="SFRs"/> are specified to 
        mitigate the threats defined in <xref to="Threats"/>.
	The PP identifies the Security Assurance Requirements (SARs) to frame
	the extent to which the evaluator assesses the documentation applicable for the
	evaluation and performs independent testing.
      </h:p>
      <h:p>
	This section lists the set of SARs from CC part 3
	that are required in evaluations against this PP.
        Individual evaluation activities to be performed are specified both in 
        <xref to="Security_Requirements"/> as well as in this section.
      </h:p>
      <h:p>
      The general model for evaluation of TOEs against STs written to conform to this PP is as follows:
      <h:br/>
      After the ST has been approved for evaluation, the ITSEF
      will obtain the OS, supporting environmental IT, and the administrative/user guides for
      the OS. The ITSEF is expected to perform actions mandated by the Common Evaluation
      Methodology (CEM) for the ASE and ALC SARs.
      The ITSEF also performs the evaluation activities contained within 
      <xref to="Security_Requirements"/>, which are intended to be an interpretation of the
      other CEM assurance requirements as they apply to the specific technology instantiated in the
      OS.
      The evaluation activities that are captured in 
      <xref to="Security_Requirements"/> also provide
      clarification as to what the developer needs to provide to demonstrate the OS is compliant
      with the PP.
      </h:p>

      <section title="Class ASE: Security Target" id="ase">
        The following ASE components as defined in <xref to="bibCEM"/> are required:
        <h:ul>
        <h:li>Conformance claims (ASE_CCL.1)</h:li>
        <h:li>Extended components definition (ASE_ECD.1)</h:li>
        <h:li>ST introduction (ASE_INT.1)</h:li>
        <h:li>Security objectives for the operational environment (ASE_OBJ.1)</h:li>
        <h:li>Direct rationale security requirements (ASE_REQ.1)</h:li>
        <h:li>Security problem definition (ASE_SPD.1)</h:li>
        <h:li>TOE summary specification (ASE_TSS.1)</h:li>
        </h:ul>
        The requirements for exact conformance of the Security Target are described in 
        <xref to="Conformance_Claims"/>.
      </section>

      <section title="Class ADV: Development" id="adv">The information about the OS is contained in the guidance documentation available to the end user as
        well as the TSS portion of the ST. The OS developer must concur with the description of the product that is
        contained in the TSS as it relates to the functional requirements. The evaluation activities
        contained in <xref to="SFRs"/> should provide the ST authors with
        sufficient information to determine the appropriate content for the TSS section.
          <a-component cc-id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">The
          functional specification describes the TSFIs. It is not
          necessary to have a formal or complete specification of these interfaces. Additionally,
          because OSes conforming to this PP will necessarily have interfaces to
          the operational environment that are not directly invokable by OS
          users, there is little point specifying that such interfaces be described in and of
          themselves since only indirect testing of such interfaces may be possible. For this PP,
          the activities for this family should focus on understanding the interfaces presented in
          the TSS in response to the functional requirements and the interfaces
          presented in the AGD documentation. No additional "functional specification" documentation
          is necessary to satisfy the evaluation activities specified. The interfaces that need to be
          evaluated are characterized through the information needed to perform the assurance
          activities listed, rather than as an independent, abstract list.

            <a-element type="D">
              <title>The developer shall provide a functional specification.</title>
            </a-element>
            <a-element type="D">
              <title>The developer shall provide a tracing from the functional specification to the
              SFRs.</title>
              <note role="application">As indicated in the introduction to this section, the
              functional specification is comprised of the information contained in the AGD_OPE and
              AGD_PRE documentation. The developer may reference a website accessible to application
              developers and the evaluator. The evaluation activities in the functional requirements
              point to evidence that should exist in the documentation and TSS
              section; since these are directly associated with the SFRs, the tracing in element
              ADV_FSP.1.2D is implicitly already done and no additional documentation is
              necessary.</note>
            </a-element>
	  

            <a-element type="C">
              <title>The functional specification shall describe the purpose and method of use for
              each SFR-enforcing and SFR-supporting TSFI.</title>
            </a-element>
            <a-element type="C">
              <title>The functional specification shall identify all parameters associated with each
              SFR-enforcing and SFR-supporting TSFI.</title>
            </a-element>
            <a-element type="C">
              <title>The functional specification shall provide rationale for the implicit
              categorization of interfaces as SFR-non-interfering.</title>
            </a-element>
            <a-element type="C">
              <title>
		The tracing shall demonstrate that the SFRs trace to TSFIs
		in the functional specification.
	      </title>
            </a-element>
	  
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall determine that the functional specification is an accurate
              and complete instantiation of the SFRs.</title>
              <aactivity>There are no specific evaluation activities associated with these SARs, except
              ensuring the information is provided. The functional specification documentation is
              provided to support the evaluation activities described in <xref to="SFRs"/>, and
              other activities described for AGD, ATE, and AVA SARs. The requirements on the content
              of the functional specification information is implicitly assessed by virtue of the
              other evaluation activities being performed; if the evaluator is unable to perform an
              activity because there is insufficient interface information, then an adequate
              functional specification has not been provided.
	      </aactivity>
            </a-element>
	  
        </a-component>
      </section>
      <section id="agd" title="Class AGD: Guidance Documentation">The guidance documents will be
        provided with the ST. Guidance must include a description of how the IT
        personnel verifies that the operational environment can fulfill its role for the security
        functionality. The documentation should be in an informal style and readable by the IT
        personnel. Guidance must be provided for every operational environment that the product
        supports as claimed in the ST. This guidance includes instructions to
        successfully install the TSF in that environment; and Instructions to
        manage the security of the TSF as a product and as a component of the
        larger operational environment. Guidance pertaining to particular security functionality is
        also provided; requirements on such guidance are contained in the Evaluation Activities
        specified with each requirement.
	<a-component cc-id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">

	    <a-element type="D">
	      <title>The developer shall provide operational user guidance.</title>
	      <note role="application">The operational user guidance does not have to be contained in a
	      single document. Guidance to users, administrators and application developers can be
              spread among documents or web pages.
	      Rather than repeat information here, the developer should
              review the evaluation activities for this component to ascertain the specifics of the
              guidance that the evaluator shall be checking for. This will provide the necessary
              information for the preparation of acceptable guidance.</note>
            </a-element>
          

            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, the
              user-accessible functions and privileges that should be controlled in a secure
              processing environment, including appropriate warnings.</title>
              <note role="application">User and administrator are to be considered in the definition
              of user role.</note>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, how to use the
              available interfaces provided by the <h:b>OS</h:b> in a secure manner.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, the available
              functions and interfaces, in particular all security parameters under the control of
              the user, indicating secure values as appropriate.</title>
              <note role="application">
		This portion of the operational user guidance should be presented
		in the form of a checklist that can be quickly executed by IT personnel (or end-users,
		when necessary) and suitable for use in compliance activities.
		When possible, this guidance is to be expressed in the eXtensible Configuration
		Checklist Description Format (XCCDF) to
		support security automation.
		Minimally, it should be presented in a structured
		format which includes a title for each configuration item,
		instructions for achieving the secure configuration, and any relevant rationale.
              </note>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall, for each user role, clearly present each
              type of security-relevant event relative to the user-accessible functions that need to
              be performed, including changing the security characteristics of entities under the
              control of the TSF.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall identify all possible modes of operation of
                the <h:b>OS</h:b> (including operation following failure or operational
              error), their consequences, and implications for maintaining secure operation.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall, for each user role, describe the security
              measures to be followed in order to fulfill the security objectives for the
              operational environment as described in the ST.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall be clear and reasonable.</title>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence. </title>
              <aactivity>Some of the contents of the operational guidance are verified by the
              evaluation activities in <xref to="SFRs"/> and evaluation of the OS according to the <xref to="bibCEM"/>.
              The following additional information is also required.
              If cryptographic functions are provided by the OS, the operational guidance ill contain instructions for configuring
              the cryptographic engine associated with the evaluated configuration of the OS.
              It will provide a warning to the administrator that use of other
              cryptographic engines was not evaluated nor tested during the CC evaluation of the
              OS.
              The documentation must describe the process for verifying
              updates to the OS by verifying a digital signature – this may be
              done by the OS or the underlying platform.
              The evaluator shall
              verify that this process includes the following steps: Instructions for obtaining the
              update itself.
              This should include instructions for making the update accessible to
              the OS (e.g., placement in a specific directory).
              Instructions for initiating the update process, as well as discerning whether the process was
              successful or unsuccessful.
              This includes generation of the hash/digital signature.
              The OS will likely contain security functionality that does not
              fall in the scope of evaluation under this PP.
              The operational guidance will make it
              clear to an administrator which security functionality is covered by the evaluation
              activities. </aactivity>
          </a-element>
	  
        </a-component>
        <a-component cc-id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">

            <a-element type="D">
              <title>The developer shall provide the <h:b>OS</h:b>, including its preparative
              procedures.</title>
              <note role="application">As with the operational guidance, the developer should look to
              the evaluation activities to determine the required content with respect to preparative
              procedures.</note>
            </a-element>
	  

            <a-element type="C">
              <title>The preparative procedures shall describe all the steps necessary for secure
                acceptance of the delivered <h:b>OS</h:b> in accordance with the developer&apos;s
              delivery procedures.</title>
            </a-element>
            <a-element type="C">
              <title>The preparative procedures shall describe all the steps necessary for secure
                installation of the <h:b>OS</h:b> and for the secure preparation of the
              operational environment in accordance with the security objectives for the operational
              environment as described in the ST.</title>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall apply the preparative procedures to confirm that the <h:b>OS</h:b> can be prepared securely for operation.</title>
              <aactivity>As indicated in the introduction above, there are significant expectations
              with respect to the documentation—especially when configuring the operational
              environment to support OS functional requirements. The evaluator
              will check to ensure that the guidance provided for the OS
              adequately addresses all platforms claimed for the OS in the ST. </aactivity>
            </a-element>
	  
        </a-component>
      </section>
      <section id="alc" title="Class ALC: Life-cycle Support"> At the assurance level provided
        for OSes conformant to this PP, life-cycle support is limited to end-user-visible aspects of
        the life-cycle, rather than an examination of the OS vendor&apos;s development and configuration
        management process. This is not meant to diminish the critical role that a developer&apos;s
        practices play in contributing to the overall trustworthiness of a product; rather, it is a
        reflection on the information to be made available for evaluation at this assurance level.
          <a-component cc-id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">This component is
          targeted at identifying the OS such that it can be distinguished from
          other products or versions from the same vendor and can be easily specified when being
          procured by an end user.

            <a-element type="D">
              <title>The developer shall provide the <h:b>OS</h:b> and a reference for the
                <h:b>OS</h:b>.</title>
            </a-element>
	  

            <a-element type="C">
              <title>The TSF shall be labeled with a unique reference.</title>
              <note role="application">Unique reference information includes:
	      <h:ul>
		<h:li>OS Name</h:li>
		<h:li>OS Version</h:li>
		<h:li>OS Description</h:li>
		<h:li>Software Identification (SWID) tags, if available</h:li>
              </h:ul>
              </note>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
              <aactivity>The evaluator shall check the ST to ensure that it contains
              an identifier (such as a product name/version number) that specifically identifies the
              version that meets the requirements of the ST. Further, the
              evaluator shall check the AGD guidance and OS samples received for
              testing to ensure that the version number is consistent with that in the ST. If the vendor maintains a web site advertising the OS, the evaluator shall examine the information on the web site to
              ensure that the information in the ST is sufficient to distinguish
              the product.</aactivity>
            </a-element>
	  
        </a-component>
        <a-component cc-id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">
	  Given the scope of the OS and its associated evaluation
	  evidence requirements, this component&apos;s evaluation activities are covered
	  by the evaluation activities listed for ALC_CMC.1.

            <a-element type="D">
              <title>
                The developer shall provide a configuration list for the <h:b>OS</h:b>.
	      </title>
            </a-element>
	  

            <a-element type="C">
              <title>The configuration list shall include the following: the <h:b>OS</h:b>
              itself; and the evaluation evidence required by the SARs.</title>
            </a-element>
            <a-element type="C">
              <title>The configuration list shall uniquely identify the configuration items.</title>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements
              for content and presentation of evidence.</title>
              <aactivity>
		<h:p>
		  The "evaluation evidence required by the SARs" in this PP is limited to the
              information in the ST coupled with the guidance provided to
              administrators and users under the AGD requirements. By ensuring that the OS is specifically identified and that this identification is
              consistent in the ST and in the AGD guidance (as done in the
              evaluation activity for ALC_CMC.1), the evaluator implicitly confirms the information
              required by this component. Life-cycle support is targeted aspects of the developer&apos;s
              life-cycle and instructions to providers of applications for the developer&apos;s devices,
              rather than an in-depth examination of the TSF manufacturer&apos;s
              development and configuration management process. This is not meant to diminish the
              critical role that a developer&apos;s practices play in contributing to the overall
              trustworthiness of a product; rather, it&apos;s a reflection on the information to be made
              available for evaluation.
	      </h:p><h:p>
	      The evaluator shall ensure that the developer has
              identified (in guidance documentation for application developers concerning the
              targeted platform) one or more development environments appropriate for use in
              developing applications for the developer&apos;s platform. For each of these development
              environments, the developer will provide information on how to configure the
              environment to ensure that buffer overflow protection mechanisms in the environment(s)
              are invoked (e.g., compiler and linker flags). The evaluator shall ensure that this documentation
              also includes an indication of whether such protections are on by default, or have to
              be specifically enabled. The evaluator shall ensure that the TSF is
              uniquely identified (with respect to other products from the TSF
              vendor), and that documentation provided by the developer in association with the
              requirements in the ST is associated with the TSF
              using this unique identification.
	      </h:p>
	      </aactivity>
          </a-element>
	  
        </a-component>
        
        
        <a-component cc-id="alc_flr.1" name="Basic Flaw Remediation (ALC_FLR.1)" status="optional">
          <a-element type="D">
            <title>The developer shall document and provide flaw remediation procedures addressed to TOE
              developers.</title>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the procedures used to
              track all reported security flaws in each release of the TOE.</title>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that a description of the nature and effect
              of each security flaw be provided, as well as the status of finding a correction to that flaw.</title>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that corrective actions be identified for
              each of the security flaws.</title>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the methods used to
              provide flaw information, corrections and guidance on corrective actions to TOE users.</title>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for
              content and presentation of evidence.</title>
            <aactivity>Evaluated as specified by <xref to="bibCEM"/>.</aactivity>
          </a-element>  
        </a-component>
        
        
        
        <a-component cc-id="alc_flr.2" name="Flaw Reporting Procedures (ALC_FLR.2)" status="optional">
          <a-element type="D">
            <title>
              The developer shall document and provide flaw remediation procedures addressed to TOE
              developers.</title>
          </a-element>
          <a-element type="D">
            <title>
              The developer shall establish a procedure for accepting and acting upon all reports of
              security flaws and requests for corrections to those flaws.
            </title>
          </a-element>
          <a-element type="D">
            <title>
              The developer shall provide flaw remediation guidance addressed to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures documentation shall describe the procedures used to track all
              reported security flaws in each release of the TOE.</title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall require that a description of the nature and effect of each
              security flaw be provided, as well as the status of finding a correction to that flaw.</title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall require that corrective actions be identified for each of the
              security flaws.</title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures documentation shall describe the methods used to provide flaw
              information, corrections and guidance on corrective actions to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall describe a means by which the developer receives
              from TOE users reports and enquiries of suspected security flaws in the TOE.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The procedures for processing reported security flaws shall ensure that any reported
              flaws are remediated and the remediation procedures issued to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The procedures for processing reported security flaws shall provide safeguards that any
              corrections to these security flaws do not introduce any new flaws.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation guidance shall describe a means by which TOE users report to the
              developer any suspected security flaws in the TOE.
            </title>
          </a-element>
          <a-element type="E">
            <title>
              The evaluator shall confirm that the information provided meets all requirements for content and
              presentation of evidence.</title>
            <aactivity>Evaluated as specified by <xref to="bibCEM"/>.</aactivity>
          </a-element>  
        </a-component>		
        
        
        <a-component cc-id="alc_flr.3" name="Systematic Flaw Remediation (ALC_FLR.3)" status="optional">
          <a-element type="D">
            <title>
              The developer shall document and provide flaw remediation procedures addressed to TOE
              developers.
            </title>
          </a-element>
          <a-element type="D">
            <title>
              The developer shall establish a procedure for accepting and acting upon all reports of security
              flaws and requests for corrections to those flaws.
            </title>
          </a-element>
          <a-element type="D">
            <title>
              The developer shall provide flaw remediation guidance addressed to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures documentation shall describe the procedures used to track all
              reported security flaws in each release of the TOE.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall require that a description of the nature and effect of each
              security flaw be provided, as well as the status of finding a correction to that flaw.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall require that corrective actions be identified for each of the
              security flaws.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures documentation shall describe the methods used to provide flaw
              information, corrections and guidance on corrective actions to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall describe a means by which the developer receives from
              TOE users reports and enquiries of suspected security flaws in the TOE.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation procedures shall include a procedure requiring timely response and
              the automatic distribution of security flaw reports and the associated corrections to
              registered users who might be affected by the security flaw.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The procedures for processing reported security flaws shall ensure that any reported flaws are
              remediated and the remediation procedures issued to TOE users.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The procedures for processing reported security flaws shall provide safeguards that any
              corrections to these security flaws do not introduce any new flaws.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation guidance shall describe a means by which TOE users report to the
              developer any suspected security flaws in the TOE.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation guidance shall describe a means by which TOE users may register
              with the developer, to be eligible to receive security flaw reports and corrections.
            </title>
          </a-element>
          <a-element type="C">
            <title>
              The flaw remediation guidance shall identify the specific points of contact for all reports
              and enquiries about security issues involving the TOE.
            </title>
          </a-element>
          <a-element type="E">
            <title>
              The evaluator shall confirm that the information provided meets all requirements for content and
              presentation of evidence.</title>
            <aactivity>Evaluated as specified by <xref to="bibCEM"/>.</aactivity>
          </a-element>  
        </a-component>	

        <!-- <ext-comp-def fam-id="ALC_TSU_EXT" title="Timely Security Updates"> -->
	<!--   <fam-behavior>This family of requirements defines the scenarios when the vendor must issue updates.</fam-behavior> -->
	<!-- </ext-comp-def> -->

	<a-component cc-id="alc_tsu_ext.1" name="Timely Security Updates"> This component requires the
          OS developer, in conjunction with any other necessary parties, to provide information as
          to how the end-user devices are updated to address security issues in a timely manner. The
          documentation describes the process of providing updates to the public from the time a
          security flaw is reported/discovered, to the time an update is released. This description
          includes the parties involved (e.g., the developer, carriers(s)) and the steps that are
          performed (e.g., developer testing, carrier testing), including worst case time periods,
          before an update is made available to the public.

            <a-element type="D">
              <title>The developer shall provide a description in the TSS of how timely security
              updates are made to the OS.</title>
            </a-element>
            <a-element type="D">
              <title> The developer shall provide a description in the TSS of how users are notified
              when updates change security properties or the configuration of the product. </title>
            </a-element>
	  

            <a-element type="C">
              <title>The description shall include the process for creating and deploying security
              updates for the OS software.</title>
            </a-element>
            <a-element type="C">
              <title>The description shall include the mechanisms publicly available for reporting
              security issues pertaining to the OS.</title>
              <note> The reporting mechanism could include web sites, email addresses, as well as a
              means to protect the sensitive nature of the report (e.g., public keys that could be
              used to encrypt the details of a proof-of-concept exploit). </note>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all
              requirements for content and presentation of evidence.</title>
              <aactivity>
		<h:p>
		The evaluator shall verify that the TSS contains a description of the timely
              security update process used by the developer to create and deploy security updates.
              The evaluator shall verify that this description addresses the entire application. The
              evaluator shall also verify that, in addition to the OS developer&apos;s process, any
              third-party processes are also addressed in the description. The evaluator shall also
              verify that each mechanism for deployment of security updates is described.
	      </h:p><h:p>
	      The
              evaluator shall verify that, for each deployment mechanism described for the update
              process, the TSS lists a time between public disclosure of a vulnerability and public
              availability of the security update to the OS patching this vulnerability, to include
              any third-party or carrier delays in deployment. The evaluator shall verify that this
              time is expressed in a number or range of days.
	      </h:p><h:p>
	      The evaluator shall verify that
              this description includes the publicly available mechanisms (including either an email
              address or website) for reporting security issues related to the OS. The evaluator
              will verify that the description of this mechanism includes a method for protecting
              the report either using a public key for encrypting email or a trusted channel for a
              website.
	    </h:p>
	    </aactivity>
            </a-element>
	  
        </a-component>
      </section>
      <section id="ate" title="Class ATE: Tests">Testing is specified for functional aspects of
        the system as well as aspects that take advantage of design or implementation weaknesses.
        The former is done through the ATE_IND family, while the latter is through the AVA_VAN
        family. At the assurance level specified in this PP, testing is based on advertised
        functionality and interfaces with dependency on the availability of design information. One
        of the primary outputs of the evaluation process is the test report as specified in the
        following requirements.
	<a-component cc-id="ate_ind.1" name="Independent Testing - Conformance (ATE_IND.1)">
	  Testing is performed to confirm the
          functionality described in the TSS as well as the administrative
          (including configuration and operational) documentation provided. The focus of the testing
          is to confirm that the requirements specified in <xref to="SFRs"/> being met,
          although some additional testing is specified for SARs in
          <xref to="Security_Assurance_Requirements"/>. 
          The
          evaluation activities identify the additional testing activities associated with these
          components. The evaluator produces a test report documenting the plan for and results of
          testing, as well as coverage arguments focused on the platform/OS
          combinations that are claiming conformance to this PP.
	  Given the scope of the OS and its associated evaluation evidence requirements, this component&apos;s
          evaluation activities are covered by the evaluation activities listed for ALC_CMC.1.

            <a-element type="D">
              <title>The developer shall provide the <h:b>OS</h:b> for testing.</title>
            </a-element>
	  

            <a-element type="C">
              <title>The <h:b>TSF</h:b> shall be suitable for testing.</title>
            </a-element>
	  

            <a-element type="E">
              <title>The evaluator <h:i>shall confirm</h:i> that the information provided meets all
              requirements for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall test a subset of the TSF to confirm that
              the TSF operates as specified.</title>
              <note role="application">The evaluator shall test the OS on the most current fully
              patched version of the platform.</note>
              <aactivity>
		<h:p>
		  The evaluator shall prepare a test plan and report documenting the testing
              aspects of the system, including any application crashes during testing. The evaluator
              will determine the root cause of any application crashes and include that information
              in the report.
              The test plan covers all of the testing actions contained in the <xref to="bibCEM"/>
              and the body of this PP&apos;s evaluation activities.
	      </h:p><h:p>
	      While it is
              not necessary to have one test case per test listed in an evaluation activity, the
              evaluator must document in the test plan that each applicable testing requirement in
              the ST is covered. The test plan identifies the platforms to be
              tested, and for those platforms not included in the test plan but included in the
                ST, the test plan provides a justification for not testing the
              platforms. This justification must address the differences between the tested
              platforms and the untested platforms, and make an argument that the differences do not
              affect the testing to be performed. It is not sufficient to merely assert that the
              differences have no affect; rationale must be provided. If all platforms claimed in
              the ST are tested, then no rationale is necessary. The test plan
              describes the composition of each platform to be tested, and any setup that is
              necessary beyond what is contained in the AGD documentation. It should be noted that
              the evaluator is expected to follow the AGD documentation for installation and setup
              of each platform either as part of a test or as a standard pre-test condition. This
              may include special test drivers or tools. For each driver or tool, an argument (not
              just an assertion) should be provided that the driver or tool will not adversely
              affect the performance of the functionality by the OS and its
              platform.
	      </h:p><h:p>
	      This also includes the configuration of the cryptographic engine to be
              used. The cryptographic algorithms implemented by this engine are those specified by
              this PP and used by the cryptographic protocols being evaluated (IPsec, TLS). The test
              plan identifies high-level test objectives as well as the test procedures to be
              followed to achieve those objectives. These procedures include expected results.
	      </h:p><h:p>
              The test report (which could just be an annotated version of the test plan) details
              the activities that took place when the test procedures were executed, and includes
              the actual results of the tests. This will be a cumulative account, so if there was a
              test run that resulted in a failure; a fix installed; and then a successful re-run of
              the test, the report would show a "fail" and "pass" result (and the supporting
              details), and not just the "pass" result.
	    </h:p>
	    </aactivity>
            </a-element>
	  
        </a-component>
      </section>
      <section id="ava" title="Class AVA: Vulnerability Assessment">For the first generation of
        this protection profile, the evaluation lab is expected to survey open sources to discover
        what vulnerabilities have been discovered in these types of products. In most cases, these
        vulnerabilities will require sophistication beyond that of a basic attacker. Until
        penetration tools are created and uniformly distributed to the evaluation labs, the
        evaluator shall not be expected to test for these vulnerabilities in the OS.
        The labs will be expected to comment on the likelihood of these vulnerabilities given
        the documentation provided by the vendor. This information will be used in the development
        of penetration testing tools and for the development of future protection profiles.
        <a-component cc-id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">

          <a-element type="D">
            <title>The developer shall provide the <h:b>OS</h:b> for testing.</title>
          </a-element>
	  

	  <a-element type="C">
	    <title>The <h:b>TSF</h:b> shall be suitable for testing.</title>
          </a-element>
	  

          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements
            for content and presentation of evidence.</title>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall perform a search of public domain sources to identify
              potential vulnerabilities in the <h:b>OS</h:b>.</title>
            <note role="application">Public domain sources include the Common Vulnerabilities
              and Exposures (CVE) dictionary for publicly-known vulnerabilities. Public domain
              sources also include sites which provide free checking of files for viruses.</note>
            <!-- their Usage statement does not permit us to mention VirusTotal by name without permission -->
          </a-element>
          <a-element type="E">
            <title>The evaluator shall conduct penetration testing, based on the identified
              potential vulnerabilities, to determine that the <h:b>OS</h:b> is resistant to
              attacks performed by an attacker possessing Basic attack potential.</title>
            <aactivity>
	      <h:p>
	      The evaluator shall generate a report to document their
              findings with respect to this requirement. This report could physically be part of the
              overall test report mentioned in ATE_IND, or a separate document. The evaluator
              performs a search of public information to find vulnerabilities that have been found
              in similar applications with a particular focus on network protocols the application
              uses and document formats it parses.
              The evaluator documents the sources consulted and
              the vulnerabilities found in the report.
	      </h:p><h:p>
              For each vulnerability found, the evaluator
              either provides a rationale with respect to its non-applicability, or the evaluator
              formulates a test (using the guidelines provided in ATE_IND) to confirm the
              vulnerability, if suitable. Suitability is determined by assessing the attack vector
              needed to take advantage of the vulnerability. If exploiting the vulnerability
              requires expert skills and an electron microscope, for instance, then a test would not
              be suitable and an appropriate justification would be formulated.
	    </h:p>
	    </aactivity>
          </a-element>
	  
        </a-component>
      </section>
    </sec:Security_Assurance_Requirements>
  </sec:Security_Requirements>

  <appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
     <h:table>
	<h:tr class="header">
	<h:td>Requirement</h:td>
	<h:td>Rationale for Satisfaction</h:td>
	</h:tr>
	<h:tr>
	<h:td>FIA_UAU.1 - Timing of authentication</h:td>
	<h:td>
	  FIA_AFL.1 implicitly requires that the OS perform all necessary actions,
	  including those on behalf of the user who has not been authenticated,
	  in order to authenticate;
	  therefore it is duplicative to include these actions as a
	  separate assignment and test.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FIA_UID.1 - Timing of identification</h:td>
	<h:td>
	  FIA_AFL.1 implicitly requires that the OS perform all necessary actions,
	  including those on behalf of the user who has not been identified,
	  in order to authenticate;
	  therefore it is duplicative to include these actions as a
	  separate assignment and test.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FMT_SMR.1 - Security roles</h:td>
	<h:td>
	  FMT_MOF_EXT.1 specifies role-based management functions that implicitly defines
	  user and privileged accounts;
	  therefore, it is duplicative to include separate role requirements.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FTA_SSL.1 - TSF-initiated session locking</h:td>
	<h:td>
 	  FMT_MOF_EXT.1 defines requirements for managing session locking;
	  therefore, it is duplicative to include a separate session locking requirement.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FTA_SSL.2 - User-initiated locking</h:td>
	<h:td>
	  FMT_MOF_EXT.1 defines requirements for user-initiated session locking;
	  therefore, it is duplicative to include a separate session locking requirement.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FAU_STG.2 - Protected audit data storage</h:td>
	<h:td>
	  FPT_ACF_EXT.1 defines a requirement to protect audit logs;
	  therefore, it is duplicative to include a separate protection of audit trail requirements.
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FAU_GEN.2 - User identity association</h:td>
	<h:td>
	  FAU_GEN.1.2 explicitly requires that the OS record
	  any user account associated with each event; therefore, it is duplicative
	  to include a separate requirement to associate a user account with each
	  event.
	</h:td>
	</h:tr>
	<h:tr>
	  <h:td>FAU_SAR.1 - Audit review</h:td>
	  <h:td>
	    FPT_ACF_EXT.1.2 requires that audit logs (and other objects)
	    are protected from reading by unprivileged users; therefore, it is duplicative
	    to include a separate requirement to protect only the audit information.
	  </h:td>
	</h:tr>
    </h:table>

  </appendix>

  <appendix title="Entropy Documentation and Assessment" id="entropyappendix">
    <h:p>
      This appendix describes the required supplementary information for the entropy source used by the OS.
    </h:p>
    <h:p>
    The documentation of the entropy source should be detailed enough that, after reading, the
    evaluator shall thoroughly understand the entropy source and why it can be relied upon to provide
    sufficient entropy. This documentation should include multiple detailed sections: design
    description, entropy justification, operating conditions, and health testing. This documentation
    is not required to be part of the TSS.
    </h:p>
    <section id="entropydesign" title="Design Description">
      <h:p>
      Documentation will include the design of the entropy source as a whole, including the
      interaction of all entropy source components. Any information that can be shared regarding the
      design should also be included for any third-party entropy sources that are included in the
      product.
      </h:p>
      <h:p> The documentation will describe the operation of the entropy source to include,
      how entropy is produced, and how unprocessed (raw) data can be obtained from within the
      entropy source for testing purposes. The documentation should walk through the entropy source
      design indicating where the entropy comes from, where the entropy output is passed next, any
      post-processing of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally, how
      it is output from the entropy source. Any conditions placed on the process (e.g., blocking)
      should also be described in the entropy source design. Diagrams and examples are encouraged.
      </h:p>
      <h:p> This design must also include a description of the content of the security boundary of
      the entropy source and a description of how the security boundary ensures that an adversary
      outside the boundary cannot affect the entropy rate.
      </h:p>
      <h:p>If implemented, the design
      description will include a description of how third-party applications can add entropy to the
      RBG. A description of any RBG state saving between power-off and power-on will be included.
      </h:p>
    </section>
    <section id="entropyjustification" title="Entropy Justification">
      <h:p>
      There should be a technical
      argument for where the unpredictability in the source comes from and why there is confidence
      in the entropy source delivering sufficient entropy for the uses made of the RBG output (by
      this particular OS). This argument will include a description of the expected min-entropy
      rate (i.e. the minimum entropy (in bits) per bit or byte of source data) and explain that
      sufficient entropy is going into the OS randomizer seeding process. This discussion will be
      part of a justification for why the entropy source can be relied upon to produce bits with
      entropy.
      </h:p>
      <h:p>
	The amount of information necessary to justify the expected min-entropy rate
	depends on the type of entropy source included in the product.
      </h:p>
      <h:p>
	For developer provided
      entropy sources, in order to justify the min-entropy rate, it is expected that a large number
      of raw source bits will be collected, statistical tests will be performed, and the min-entropy
      rate determined from the statistical tests. While no particular statistical tests are required
      at this time, it is expected that some testing is necessary in order to determine the amount
      of min-entropy in each output.
      </h:p>
      <h:p>
	For third-party provided entropy sources, in which the
      OS vendor has limited access to the design and raw entropy data of the source, the
      documentation will indicate an estimate of the amount of min-entropy obtained from this
      third-party source. It is acceptable for the vendor to "assume" an amount of min-entropy,
      however, this assumption must be clearly stated in the documentation provided. In particular,
      the min-entropy estimate must be specified and the assumption included in the ST.
      </h:p>
      <h:p>
	
      Regardless of type of entropy source, the justification will also include how the DRBG is
      initialized with the entropy stated in the ST, for example by verifying that the min-entropy
      rate is multiplied by the amount of source data used to seed the DRBG or that the rate of
      entropy expected based on the amount of source data is explicitly stated and compared to the
      statistical rate. If the amount of source data used to seed the DRBG is not clear or the
      calculated rate is not explicitly related to the seed, the documentation will not be
      considered complete.
      </h:p>
      <h:p>
	The entropy justification will not include any data added from any
	third-party application or from any state saving between restarts.
      </h:p>
    </section>
    <section id="entropyoperatingconditions" title="Operating Conditions"> The entropy rate may be
      affected by conditions outside the control of the entropy source itself. For example, voltage,
      frequency, temperature, and elapsed time after power-on are just a few of the factors that may
      affect the operation of the entropy source. As such, documentation will also include the range
      of operating conditions under which the entropy source is expected to generate random data. It
      will clearly describe the measures that have been taken in the system design to ensure the
      entropy source continues to operate under those conditions. Similarly, documentation will
      describe the conditions under which the entropy source is known to malfunction or become
      inconsistent. Methods used to detect failure or degradation of the source will be included. </section>
    <section id="entropyhealthtesting" title="Health Testing"> More specifically, all entropy source
      health tests and their rationale will be documented. This includes a description of the health
      tests, the rate and conditions under which each health test is performed (e.g., at start,
      continuously, or on-demand), the expected results for each health test, and rationale
      indicating why each test is believed to be appropriate for detecting one or more failures in
      the entropy source.
    </section>
  </appendix>
  
  <appendix title="Validation Guidelines" id="validation_guidelines"/>
  
  <bibliography>
    <cc-entry/>
    <entry id="bibNCSC">
      <tag>NCSC</tag>
      <description>National Cyber Security Centre - <h:a
          href="https://www.ncsc.gov.uk/collection/end-user-device-security">
            End User Device (EUD) Security Guidance
            </h:a></description>
    </entry>
      
    <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</h:a>, H.R. 145, June 11, 1987. </description>
    </entry>
    <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf">
	    Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006.
        </description>
    </entry>
    <entry id="bib-shavs">
      <tag>SHAVS</tag>
      <description>
	<h:a href="https://csrc.nist.gov/csrc/media/projects/cryptographic-algorithm-validation-program/documents/shs/shavs.pdf">The Secure Hash Algorithm Validation System, NIST, 22 July 2004</h:a>
      </description>
    </entry>
    <entry id="bibx509">
      <tag>x509</tag>
      <description>
        <h:a href="https://tools.ietf.org/html/rfc5280">
            Internet X.509 Public Key Infrastructure Certificate
             and Certificate Revocation List (CRL) Profile</h:a>, May 2008.
      </description>
    </entry>
  </bibliography>

</PP>
